[
    {
        "objectID": "api/unit_registry",
        "href": "api/unit_registry.html#unit-registry",
        "title": "Unit registry",
        "section": "Unit registry",
        "text": "Bases: object\nA representation of valid Unit instances.\nAll base and derived units loaded from the configuration file, cfg.yaml,\non package initialization are provided by default.\nPath of a YAML configuration file, which can be a custom file, and\ndefaults to the provided file, cfg.yaml. Custom configuration files\nmust match the format of the default configuration file.\nDictionary for additional units.\nBases: ValueError\nRaised when a unit has previously been registered.\nUnit registry\nobject\nUnit\nYAML\ncfg.yaml\nValueError"
    },
    {
        "objectID": "api/unit_registry",
        "href": "api/unit_registry.html#ansys.units.unit_registry.UnitRegistry",
        "title": "Unit registry > Unit registry > UnitRegistry",
        "section": "Unit registry > UnitRegistry",
        "text": "class ansys.units.unit_registry.UnitRegistry(config='cfg.yaml', other: dict | None = None)\n\nBases: object\n\nA representation of valid Unit instances.\n\nAll base and derived units loaded from the configuration file, cfg.yaml,\non package initialization are provided by default.\n\nParameters\n\nconfig: str, optional\n\nPath of a YAML configuration file, which can be a custom file, and\ndefaults to the provided file, cfg.yaml. Custom configuration files\nmust match the format of the default configuration file.\n\nother: dict, optional\n\nDictionary for additional units.\n\nExamples\n\n>>> from ansys.units import UnitRegistry, Unit\n>>> ureg = UnitRegistry()\n>>> assert ureg.kg == Unit(units=\"kg\")\n>>> fps = Unit(\"ft s^-1\")\n>>> ureg.foot_per_sec = fps\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit_registry",
        "href": "api/unit_registry.html#ansys.units.unit_registry.UnitAlreadyRegistered",
        "title": "Unit registry > Unit registry > UnitAlreadyRegistered",
        "section": "Unit registry > UnitAlreadyRegistered",
        "text": "exception ansys.units.unit_registry.UnitAlreadyRegistered(name: str)\n\nBases: ValueError\n\nRaised when a unit has previously been registered.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#pyansys-units-basics",
        "title": "PyAnsys Units basics",
        "section": "PyAnsys Units basics",
        "text": "PyAnsys Units provides a Pythonic interface for units, unit systems, and unit conversions.\nIts features enable seamless setup and usage of physical quantities.\nThis example shows you how to perform these tasks:\nCreate quantities (unit strings, dimensions, and quantity tables).\nAccess different quantity properties.\nPerform arithmetic operations.\nPerform unit conversions.\nCreate unit systems (custom and predefined).\nApply unit systems to quantities.\nPyAnsys Units basics"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#perform-required-imports",
        "title": "PyAnsys Units basics > Perform required imports",
        "section": "Perform required imports",
        "text": "Import the ansys.units package.\nPerform required imports\nansys.units"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#create-quantities",
        "title": "PyAnsys Units basics > Create quantities",
        "section": "Create quantities",
        "text": "You can instantiate quantities using one of three methods:\n- Unit strings : str, Unit\n- Dimensions : Dimensions\n- Quantity table : dict\nCreate quantities"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#specify-quantity-properties",
        "title": "PyAnsys Units basics > Specify quantity properties",
        "section": "Specify quantity properties",
        "text": "For a quantity, you specify six properties:\nSpecify quantity properties"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#perform-arithmetic-operations",
        "title": "PyAnsys Units basics > Perform arithmetic operations",
        "section": "Perform arithmetic operations",
        "text": "You can perform all mathematical operations on a quantity.\nPerform arithmetic operations"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#perform-conversions",
        "title": "PyAnsys Units basics > Perform conversions",
        "section": "Perform conversions",
        "text": "To check the compatible units use the ‘compatible_units’ method.\nPerform conversions"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#instantiate-unit-systems",
        "title": "PyAnsys Units basics > Instantiate unit systems",
        "section": "Instantiate unit systems",
        "text": "You can instantiate unit systems using a few methods:\nCustom units\nPredefined unit systems\nCopy from a preexisting unit system\nCombinations of these\nInstantiate unit systems"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#create-a-unit-system-independently",
        "title": "PyAnsys Units basics > Create a unit system independently",
        "section": "Create a unit system independently",
        "text": "You can create a unit system independently and apply it to quantities.\nCreate a unit system independently"
    },
    {
        "objectID": "examples/00-pyunits/basic_usage",
        "href": "examples/00-pyunits/basic_usage.html#using-preferred-units",
        "title": "PyAnsys Units basics > Using preferred units",
        "section": "Using preferred units",
        "text": "Specify a list of units that quantities will automatically convert to.\nTotal running time of the script: (0 minutes 0.010 seconds)\nDownload Jupyter notebook: basic_usage.ipynb\nDownload Python source code: basic_usage.py\nDownload zipped: basic_usage.zip\nGallery generated by Sphinx-Gallery\nUsing preferred units\nDownload Jupyter notebook: basic_usage.ipynb\nDownload Python source code: basic_usage.py\nDownload zipped: basic_usage.zip"
    },
    {
        "objectID": "index",
        "href": "index.html#pyansys-units-documentation-051",
        "title": "PyAnsys Units documentation 0.5.1",
        "section": "PyAnsys Units documentation 0.5.1",
        "text": "PyAnsys Units documentation 0.5.1"
    },
    {
        "objectID": "index",
        "href": "index.html#overview",
        "title": "PyAnsys Units documentation 0.5.1 > Overview",
        "section": "Overview",
        "text": "PyAnsys Units provides a Pythonic interface for units, unit systems, and unit\nconversions. Its features enable seamless setup and usage of physical\nquantities, enabling you to perform these tasks:\nInstantiate physical quantities from a unit string, list of dimensions, or\nquantity table.\nPerform unit conversions and arithmetic operations between quantity objects or\nreal values.\nCreate custom units and unit systems.\nOverview"
    },
    {
        "objectID": "index",
        "href": "index.html#documentation-and-issues",
        "title": "PyAnsys Units documentation 0.5.1 > Documentation and issues",
        "section": "Documentation and issues",
        "text": "Documentation for the latest stable release of PyAnsys Units is hosted at PyAnsys Units documentation.\nIn the upper right corner of the documentation’s title bar, there is an option for\nswitching from viewing the documentation for the latest stable release to viewing\nthe documentation for the development version or previously released versions.\nOn the PyAnsys Units Issues page, you can\ncreate issues to report bugs, and request new features. On the PyAnsys Units Discussions page or the Discussions\npage on the Ansys Developer portal, you can post questions, share ideas, and get community feedback.\nTo reach the project support team, email pyansys.core@ansys.com.\nDocumentation and issues"
    },
    {
        "objectID": "index",
        "href": "index.html#license",
        "title": "PyAnsys Units documentation 0.5.1 > License",
        "section": "License",
        "text": "PyAnsys Units is licensed under the MIT license. For more information, see the\nLICENSE file.\nLicense"
    },
    {
        "objectID": "index",
        "href": "index.html#project-index",
        "title": "PyAnsys Units documentation 0.5.1 > Project index",
        "section": "Project index",
        "text": "genindex\nProject index"
    },
    {
        "objectID": "api/index",
        "href": "api/index.html#api-reference",
        "title": "API reference",
        "section": "API reference",
        "text": "This section describes the public classes, functions, and attributes in the PyAnsys Units API.\nAPI reference"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#contribute",
        "title": "Contribute",
        "section": "Contribute",
        "text": "Overall guidance on contributing to a PyAnsys library appears in the\nContributing topic in\nthe PyAnsys Developer’s Guide. Ensure that you are thoroughly familiar with\nthis guide before attempting to contribute to PyAnsys Units.\nThe following contribution information is specific to PyAnsys Units.\nContribute"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#clone-and-install",
        "title": "Contribute > Clone and install",
        "section": "Clone and install",
        "text": "Clone and install the latest PyAnsys Units release in development mode with\nthese commands:\nClone and install"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#build-documentation",
        "title": "Contribute > Build documentation",
        "section": "Build documentation",
        "text": "Build the PyAnsys Units documentation locally by running these commands in the\nroot directory of the repository:\nBuild documentation"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#windows",
        "title": "Contribute > Windows",
        "section": "Windows",
        "text": "Download Release-24.08.0-0.zip.\nUnzip Release-24.08.0-0.zip.\nAdd <path to..>/Release-24.08.0-0/poppler-24.08.0/Library/bin to PATH.\nExecute the following commands:\nWindows"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#linux",
        "title": "Contribute > Linux",
        "section": "Linux",
        "text": "After the build completes, the HTML documentation is located in the\n_builds/html directory. You can load the index.html file in this\ndirectory into a web browser.\nYou can clear all HTML files from the _builds/html directory with\nthis command:\nLinux\n_builds/html\nindex.html\n_builds/html"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#post-issues",
        "title": "Contribute > Post issues",
        "section": "Post issues",
        "text": "Use the PyAnsys Units Issues page to\nreport bugs and request new features.\nPost issues"
    },
    {
        "objectID": "contributing",
        "href": "contributing.html#adhere-to-code-style",
        "title": "Contribute > Adhere to code style",
        "section": "Adhere to code style",
        "text": "PyAnsys Units is compliant with the PyAnsys coding style. It uses\npre-commit to check the code style. You can install\nand activate this tool with these commands:\nYou can then directly execute pre-commit with this command:\nAdhere to code style\npre-commit"
    },
    {
        "objectID": "user_guide/temperature",
        "href": "user_guide/temperature.html#temperature-and-temperature-difference",
        "title": "Temperature and temperature difference",
        "section": "Temperature and temperature difference",
        "text": "PyAnsys Units supports temperature units in kelvin (K), celsius (C), rankine (R)\nand fahrenheit (F).\nFor each temperature unit, there is a corresponding temperature difference unit\nwhich is prefixed with delta_. In order to add two temperature-based quantities,\nat least one must be a temperature difference. If one temperature is subtracted\nfrom another, the result is a temperature difference.\nAny temperature values below absolute zero are instantiated as temperature\ndifference.\nTemperature and temperature difference\ndelta_"
    },
    {
        "objectID": "examples/00-pyunits/index",
        "href": "examples/00-pyunits/index.html#pyansys-units-examples",
        "title": "PyAnsys Units Examples",
        "section": "PyAnsys Units Examples",
        "text": "PyAnsys Units provides many features, including creating quantities, accessing\ndifferent quantity properties, performing arithmetic operations, performing unit\nconversions, creating unit systems, and applying unit systems to quantities.\nsphx_glr_examples_00-pyunits_basic_usage.py\nPyAnsys Units Examples"
    },
    {
        "objectID": "examples/00-pyunits/sg_execution_times",
        "href": "examples/00-pyunits/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:00.010 total execution time for 1 file from examples/00-pyunits:\nExample\nTime\nMem (MB)\nsphx_glr_examples_00-pyunits_basic_usage.py (basic_usage.py)\n00:00.010\n0.0\nComputation times\nbasic_usage.py"
    },
    {
        "objectID": "user_guide/plot",
        "href": "user_guide/plot.html#plotting-with-matplotlib",
        "title": "Plotting with Matplotlib",
        "section": "Plotting with Matplotlib",
        "text": "PyAnsys Units provides a simple interface to plot quantities using Matplotlib.\nPlotting with Matplotlib"
    },
    {
        "objectID": "user_guide/plot",
        "href": "user_guide/plot.html#basic-usage",
        "title": "Plotting with Matplotlib > Basic usage",
        "section": "Basic usage",
        "text": "The following example demonstrates how to plot data using lists.\nBasic usage"
    },
    {
        "objectID": "user_guide/plot",
        "href": "user_guide/plot.html#using-numpy-arrays",
        "title": "Plotting with Matplotlib > Using NumPy arrays",
        "section": "Using NumPy arrays",
        "text": "The following example demonstrates how to plot data using NumPy arrays.\nUsing NumPy arrays"
    },
    {
        "objectID": "user_guide/plot",
        "href": "user_guide/plot.html#using-numpy-arrays-and-no-units",
        "title": "Plotting with Matplotlib > Using NumPy arrays and no units",
        "section": "Using NumPy arrays and no units",
        "text": "The following example demonstrates how to plot data without units.\nUsing NumPy arrays and no units"
    },
    {
        "objectID": "getting_started/faq",
        "href": "getting_started/faq.html#frequently-asked-questions",
        "title": "Frequently asked questions",
        "section": "Frequently asked questions",
        "text": "Frequently asked questions"
    },
    {
        "objectID": "getting_started/faq",
        "href": "getting_started/faq.html#what-is-pyansys-units",
        "title": "Frequently asked questions > What is PyAnsys Units?",
        "section": "What is PyAnsys Units?",
        "text": "PyAnsys units is a Python package that allows you to introduce the concept of\nphysical quantities into your Python environment. You can define your own units,\nunit systems and quantities and work with them in a natural way using arithmetic\noperations and conversions.\nWhat is PyAnsys Units?"
    },
    {
        "objectID": "getting_started/faq",
        "href": "getting_started/faq.html#what-unit-systems-are-provided-by-default",
        "title": "Frequently asked questions > What unit systems are provided by default?",
        "section": "What unit systems are provided by default?",
        "text": "PyAnsys Units provides the following unit systems by default:\nInternational System of Units (SI)\nCentimetre gram second (CGS)\nBritish Technical (BT)\nBritish technical units define the mass units as the slug, length units as\nft and time units of s, which leads to pound-force, lbf, being the\nforce units. You can introduce your own unit systems either dynamically at run\ntime or by providing a custom configuration file.\nPyAnsys Units defines a unit system as a unique selection of base units. For\ninstance, the SI unit system is a unique choice of units for the default base\nunits.\nWhat unit systems are provided by default?\nslug\nft\ns\nlbf"
    },
    {
        "objectID": "getting_started/faq",
        "href": "getting_started/faq.html#how-is-pyansys-units-different-from-pint",
        "title": "Frequently asked questions > How is PyAnsys Units different from pint?",
        "section": "How is PyAnsys Units different from pint?",
        "text": "In contrast to pint, the UnitRegistry is only a container of the configured\nUnit objects. The registry does not contain additional information. Notably\nthe UnitSystem is a standalone class. When creating a Unit using\nDimensions it requires a unit system parameter to be passed in for non-SI\nunits.\nEquivalent units are also handled differently. Any two Unit objects that\nhave the same dimensions, SI offset, and SI scaling factor are evaluated as\nequal.\nPyAnsys Units treats all angles as dimensional units. With this behavior the\nconversion from rad/s to Hz is not allowed.\nHow is PyAnsys Units different from pint?\nUnitRegistry\nUnit\nUnitSystem\nUnit\nDimensions\nUnit"
    },
    {
        "objectID": "user_guide/quantity",
        "href": "user_guide/quantity.html#defining-a-quantity",
        "title": "Defining a quantity",
        "section": "Defining a quantity",
        "text": "Import Quantity from the ansys.units package and instantiate a\nQuantity object, providing a numerical value and a unit string:\nYou can also provide a Unit object (rather than a unit string) as a\nconstruction argument. Alternatively, you can instantiate a Quantity\nobject by multiplying a Unit object by a value:\nWith NumPy installed, you can instantiate a Quantity using either\na list of floats or a NumPy array:\nAll Quantity objects work intuitively with arithmetic operators:\nAdditions and subtractions involving Quantity objects retain the units\nof the first operand:\nThis formula defines the conversion of Quantity objects between different units:\nwhere f_{new} is a scaling factor and c_{new} is an offset to convert\nfrom SI units to the requested units.\nTo define a new unit system or create custom quantities, you can manually update the\ncfg.yaml file with your desired settings. Once saved, these changes are reflected\nthe next time the ansys.units package is initialized.\nDefining a quantity\nQuantity\nansys.units\nQuantity\nUnit\nQuantity\nUnit\nNumPy\nQuantity\nNumPy\nQuantity\nQuantity\nQuantity\ncfg.yaml\nansys.units"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#variable-descriptors",
        "title": "Variable Descriptors",
        "section": "Variable Descriptors",
        "text": "The ansys.units.variable_descriptor subpackage defines interfaces and implementations for representing physical quantities in a product-agnostic, unit-aware way. These descriptors serve as the foundation for communicating quantity metadata across Ansys systems and external APIs.\nVariable Descriptors\nansys.units.variable_descriptor"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#overview",
        "title": "Variable Descriptors > Overview",
        "section": "Overview",
        "text": "A VariableDescriptor encapsulates information about a physical quantity, such as:\nIts name (for example, VELOCITY, FORCE)\nIts associated dimensionality (via QuantityDimensions)\nOptional metadata for display, categorization, or mapping to domain-specific naming schemes\nThese descriptors are immutable and hashable, making them suitable as keys in mappings and registries.\nThe subpackage also defines conversion strategies that translate between VariableDescriptor objects and external string representations (such as Fluent variable names).\nOverview\nVELOCITY\nFORCE\nQuantityDimensions\nVariableDescriptor"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#main-classes",
        "title": "Variable Descriptors > Main Classes",
        "section": "Main Classes",
        "text": "Main Classes"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#variabledescriptor",
        "title": "Variable Descriptors > VariableDescriptor",
        "section": "VariableDescriptor",
        "text": "Bases: object\nDefines a physical quantity variable descriptor.\nRepresents a single named physical quantity, including its dimensional signature.\nVariableDescriptor\nobject"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableDescriptor",
        "title": "Variable Descriptors > VariableDescriptor > VariableDescriptor",
        "section": "VariableDescriptor > VariableDescriptor",
        "text": "class ansys.units.variable_descriptor.variable_descriptor.VariableDescriptor(name: str, dimension: Dimensions)\n\nBases: object\n\nDefines a physical quantity variable descriptor.\n\n!! processed by numpydoc !!\n\n\n\ndimension: Dimensions\n\n\n\n\n\nname: str\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableDescriptor.dimension",
        "title": "Variable Descriptors > VariableDescriptor > dimension",
        "section": "VariableDescriptor > dimension",
        "text": "dimension: Dimensions\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableDescriptor.name",
        "title": "Variable Descriptors > VariableDescriptor > name",
        "section": "VariableDescriptor > name",
        "text": "name: str\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#variablecatalog",
        "title": "Variable Descriptors > VariableCatalog",
        "section": "VariableCatalog",
        "text": "Bases: object\nA catalog of variable descriptors.\nAdd a variable to the catalog.\nThe name of the variable (must be uppercase).\nThe dimension of the variable.\nThe optional subcategory for the variable.\nThe variable name is not uppercase or already exists.\nReturn all defined\nVariableDescriptor\nobjects, organized by subcategory.\nA dictionary where keys are subcategory names (or “main” for the top-level catalog)\nand values are lists of VariableDescriptor instances.\nBases: object\nDictionary of variable descriptors for fluent-related quantities.\nBases: object\nDictionary of variable descriptors for mesh-related quantities.\nA registry of predefined VariableDescriptor instances for commonly used quantities. These are typically accessed directly by name, such as VariableCatalog.``PRESSURE``.\nVariableCatalog\nobject\npython:str\nDimensions\nValueError\nVariableDescriptor\npython:dict\npython:str\npython:list\nVariableDescriptor\nVariableDescriptor\nobject\nobject\nVariableDescriptor\nVariableCatalog"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog",
        "title": "Variable Descriptors > VariableCatalog > VariableCatalog",
        "section": "VariableCatalog > VariableCatalog",
        "text": "class ansys.units.variable_descriptor.variable_descriptor.VariableCatalog\n\nBases: object\n\nA catalog of variable descriptors.\n\n!! processed by numpydoc !!\n\n\n\nABSOLUTE_PRESSURE = VariableDescriptor(name='absolute_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nABSORBANCE = VariableDescriptor(name='absorbance', dimension={})\n\n\n\n\n\nABSORBED_DOSE_RATE = VariableDescriptor(name='absorbed_dose_rate', dimension={'LENGTH': 2.0, 'TIME': -3.0})\n\n\n\n\n\nACCELERATION = VariableDescriptor(name='acceleration', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACCELERATION_MAGNITUDE = VariableDescriptor(name='acceleration_magnitude', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACCELERATION_X = VariableDescriptor(name='acceleration_x', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACCELERATION_Y = VariableDescriptor(name='acceleration_y', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACCELERATION_Z = VariableDescriptor(name='acceleration_z', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACOUSTICAL_ABSORPTION = VariableDescriptor(name='acoustical_absorption', dimension={})\n\n\n\n\n\nACTION = VariableDescriptor(name='action', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGLE = VariableDescriptor(name='angle', dimension={'ANGLE': 1.0})\n\n\n\n\n\nANGULAR_ACCELERATION = VariableDescriptor(name='angular_acceleration', dimension={'TIME': -2.0})\n\n\n\n\n\nANGULAR_MOMENTUM = VariableDescriptor(name='angular_momentum', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_MOMENTUM_MAGNITUDE = VariableDescriptor(name='angular_momentum_magnitude', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_MOMENTUM_X = VariableDescriptor(name='angular_momentum_x', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_MOMENTUM_Y = VariableDescriptor(name='angular_momentum_y', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_MOMENTUM_Z = VariableDescriptor(name='angular_momentum_z', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_VELOCITY = VariableDescriptor(name='angular_velocity', dimension={'TIME': -1.0})\n\n\n\n\n\nAREA = VariableDescriptor(name='area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nAREA_DENSITY = VariableDescriptor(name='area_density', dimension={'MASS': 1.0, 'LENGTH': -2.0})\n\n\n\n\n\nATOMIC_MASS = VariableDescriptor(name='atomic_mass', dimension={'MASS': 1.0})\n\n\n\n\n\nATOMIC_NUMBER = VariableDescriptor(name='atomic_number', dimension={})\n\n\n\n\n\nATTENUATION_COEFFICIENT = VariableDescriptor(name='attenuation_coefficient', dimension={'LENGTH': -1.0})\n\n\n\n\n\nAXIAL_VELOCITY = VariableDescriptor(name='axial_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nBIREFRINGENCE = VariableDescriptor(name='birefringence', dimension={})\n\n\n\n\n\nBULK_MODULUS = VariableDescriptor(name='bulk_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nCAPACITANCE = VariableDescriptor(name='capacitance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n\n\n\n\nCATALYTIC_EFFICIENCY = VariableDescriptor(name='catalytic_efficiency', dimension={'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0, 'TIME': -1.0})\n\n\n\n\n\nCELL_REYNOLDS_NUMBER = VariableDescriptor(name='cell_reynolds_number', dimension={})\n\n\n\n\n\nCHEMICAL_AMOUNT = VariableDescriptor(name='chemical_amount', dimension={'CHEMICAL_AMOUNT': 1.0})\n\n\n\n\n\nCOEFFICIENT_OF_RESTITUTION = VariableDescriptor(name='coefficient_of_restitution', dimension={})\n\n\n\n\n\nCOLOR = VariableDescriptor(name='color', dimension={})\n\n\n\n\n\nCOMPRESSIBILITY = VariableDescriptor(name='compressibility', dimension={'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0})\n\n\n\n\n\nCOMPRESSIVE_STRENGTH = VariableDescriptor(name='compressive_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nCONVECTIVE_COURANT_NUMBER = VariableDescriptor(name='convective_courant_number', dimension={})\n\n\n\n\n\nCORROSION_RESISTANCE = VariableDescriptor(name='corrosion_resistance', dimension={})\n\n\n\n\n\nCREEP = VariableDescriptor(name='creep', dimension={'TIME': -1.0})\n\n\n\n\n\nCURIE_TEMPERATURE = VariableDescriptor(name='curie_temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nCURRENT = VariableDescriptor(name='current', dimension={'CURRENT': 1.0})\n\n\n\n\n\nDENSITY = VariableDescriptor(name='density', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n\n\n\n\nDIAMAGNETISM = VariableDescriptor(name='diamagnetism', dimension={})\n\n\n\n\n\nDIELECTRIC_CONSTANT = VariableDescriptor(name='dielectric_constant', dimension={})\n\n\n\n\n\nDIELECTRIC_STRENGTH = VariableDescriptor(name='dielectric_strength', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0, 'CURRENT': -1.0})\n\n\n\n\n\nDUCTILITY = VariableDescriptor(name='ductility', dimension={})\n\n\n\n\n\nDURABILITY = VariableDescriptor(name='durability', dimension={})\n\n\n\n\n\nDYNAMIC_PRESSURE = VariableDescriptor(name='dynamic_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nDYNAMIC_VISCOSITY = VariableDescriptor(name='dynamic_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nEFFECTIVE_PRANDTL_NUMBER = VariableDescriptor(name='effective_prandtl_number', dimension={})\n\n\n\n\n\nEFFECTIVE_THERMAL_CONDUCTIVITY = VariableDescriptor(name='effective_thermal_conductivity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nEFFECTIVE_VISCOSITY = VariableDescriptor(name='effective_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nELASTICITY = VariableDescriptor(name='elasticity', dimension={})\n\n\n\n\n\nELECTRICAL_CAPACITANCE = VariableDescriptor(name='electrical_capacitance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n\n\n\n\nELECTRICAL_CONDUCTANCE = VariableDescriptor(name='electrical_conductance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 2.0})\n\n\n\n\n\nELECTRICAL_CONDUCTIVITY = VariableDescriptor(name='electrical_conductivity', dimension={'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 3.0, 'CURRENT': 2.0})\n\n\n\n\n\nELECTRICAL_IMPEDANCE = VariableDescriptor(name='electrical_impedance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRICAL_INDUCTANCE = VariableDescriptor(name='electrical_inductance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRICAL_POTENTIAL = VariableDescriptor(name='electrical_potential', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0})\n\n\n\n\n\nELECTRICAL_REACTANCE = VariableDescriptor(name='electrical_reactance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRICAL_RESISTANCE = VariableDescriptor(name='electrical_resistance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRICAL_RESISTIVITY = VariableDescriptor(name='electrical_resistivity', dimension={'MASS': 1.0, 'LENGTH': 3.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRIC_CHARGE = VariableDescriptor(name='electric_charge', dimension={'TIME': 1.0, 'CURRENT': 1.0})\n\n\n\n\n\nELECTRIC_SUSCEPTIBILITY = VariableDescriptor(name='electric_susceptibility', dimension={})\n\n\n\n\n\nELECTROCALORIC_COEFFICIENT = VariableDescriptor(name='electrocaloric_coefficient', dimension={'TEMPERATURE': 1.0, 'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 1.0})\n\n\n\n\n\nELECTROSTRICTION = VariableDescriptor(name='electrostriction', dimension={})\n\n\n\n\n\nELECTRO_OPTIC_EFFECT = VariableDescriptor(name='electro_optic_effect', dimension={})\n\n\n\n\n\nEMISSIVITY = VariableDescriptor(name='emissivity', dimension={})\n\n\n\n\n\nENERGY = VariableDescriptor(name='energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nENERGY_DENSITY = VariableDescriptor(name='energy_density', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nENERGY_FLUX_DENSITY = VariableDescriptor(name='energy_flux_density', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nENTHALPY = VariableDescriptor(name='enthalpy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nENTROPY = VariableDescriptor(name='entropy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nFATIGUE_LIMIT = VariableDescriptor(name='fatigue_limit', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nFLEXURAL_MODULUS = VariableDescriptor(name='flexural_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nFLEXURAL_STRENGTH = VariableDescriptor(name='flexural_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE = VariableDescriptor(name='force', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE_MAGNITUDE = VariableDescriptor(name='force_magnitude', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE_X = VariableDescriptor(name='force_x', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE_Y = VariableDescriptor(name='force_y', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE_Z = VariableDescriptor(name='force_z', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFRACTURE_TOUGHNESS = VariableDescriptor(name='fracture_toughness', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFREQUENCY = VariableDescriptor(name='frequency', dimension={'TIME': -1.0})\n\n\n\n\n\nFREQUENCY_DRIFT = VariableDescriptor(name='frequency_drift', dimension={'TIME': -2.0})\n\n\n\n\n\nFRICTION_COEFFICIENT = VariableDescriptor(name='friction_coefficient', dimension={})\n\n\n\n\n\nFUEL_EFFICIENCY = VariableDescriptor(name='fuel_efficiency', dimension={'LENGTH': -2.0})\n\n\n\n\n\nHALF_LIFE = VariableDescriptor(name='half_life', dimension={'TIME': 1.0})\n\n\n\n\n\nHALL_COEFFICIENT = VariableDescriptor(name='hall_coefficient', dimension={'LENGTH': 3.0, 'CURRENT': -1.0, 'TIME': -1.0})\n\n\n\n\n\nHARDNESS = VariableDescriptor(name='hardness', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nHEAT_CAPACITY = VariableDescriptor(name='heat_capacity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nHEAT_FLUX_DENSITY = VariableDescriptor(name='heat_flux_density', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nHEAT_OF_VAPORIZATION = VariableDescriptor(name='heat_of_vaporization', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nHYGROSCOPY = VariableDescriptor(name='hygroscopy', dimension={})\n\n\n\n\n\nHYSTERESIS = VariableDescriptor(name='hysteresis', dimension={})\n\n\n\n\n\nILLUMINANCE = VariableDescriptor(name='illuminance', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0})\n\n\n\n\n\nINTERNAL_ENERGY = VariableDescriptor(name='internal_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nJERK = VariableDescriptor(name='jerk', dimension={'LENGTH': 1.0, 'TIME': -3.0})\n\n\n\n\n\nKINEMATIC_VISCOSITY = VariableDescriptor(name='kinematic_viscosity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n\n\n\n\nLENGTH = VariableDescriptor(name='length', dimension={'LENGTH': 1.0})\n\n\n\n\n\nLIGHT = VariableDescriptor(name='light', dimension={'LIGHT': 1.0})\n\n\n\n\n\nLINEAR_MASS_DENSITY = VariableDescriptor(name='linear_mass_density', dimension={'MASS': 1.0, 'LENGTH': -1.0})\n\n\n\n\n\nLUMINANCE = VariableDescriptor(name='luminance', dimension={'LIGHT': 1.0, 'LENGTH': -2.0})\n\n\n\n\n\nLUMINOSITY = VariableDescriptor(name='luminosity', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0})\n\n\n\n\n\nLUMINOUS_EXPOSURE = VariableDescriptor(name='luminous_exposure', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0, 'TIME': 1.0})\n\n\n\n\n\nLUMINOUS_FLUX = VariableDescriptor(name='luminous_flux', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0})\n\n\n\n\n\nMAGNETIC_FLUX = VariableDescriptor(name='magnetic_flux', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n\n\n\n\nMAGNETIC_INDUCTION = VariableDescriptor(name='magnetic_induction', dimension={'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n\n\n\n\nMAGNETIC_PERMEABILITY = VariableDescriptor(name='magnetic_permeability', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n\n\n\n\nMAGNETIC_VECTOR_POTENTIAL = VariableDescriptor(name='magnetic_vector_potential', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n\n\n\n\nMAGNETOCALORIC_COEFFICIENT = VariableDescriptor(name='magnetocaloric_coefficient', dimension={'TEMPERATURE': 1.0, 'MASS': -1.0, 'TIME': 2.0, 'CURRENT': 1.0})\n\n\n\n\n\nMAGNETOELECTRIC_POLARIZABILITY = VariableDescriptor(name='magnetoelectric_polarizability', dimension={'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nMAGNETORESISTANCE = VariableDescriptor(name='magnetoresistance', dimension={})\n\n\n\n\n\nMAGNETOSTRICTION = VariableDescriptor(name='magnetostriction', dimension={})\n\n\n\n\n\nMAGNETOTHERMOELECTRIC_POWER = VariableDescriptor(name='magnetothermoelectric_power', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nMALLEABILITY = VariableDescriptor(name='malleability', dimension={})\n\n\n\n\n\nMASS = VariableDescriptor(name='mass', dimension={'MASS': 1.0})\n\n\n\n\n\nMASS_CONTROL = VariableDescriptor(name='mass_control', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nMASS_DIFFUSIVITY = VariableDescriptor(name='mass_diffusivity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n\n\n\n\nMASS_FLOW_RATE = VariableDescriptor(name='mass_flow_rate', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMAXIMUM_ENERGY_PRODUCT = VariableDescriptor(name='maximum_energy_product', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nMELTING_POINT = VariableDescriptor(name='melting_point', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nMESH_VELOCITY = VariableDescriptor(name='mesh_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMESH_VELOCITY_MAGNITUDE = VariableDescriptor(name='mesh_velocity_magnitude', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMESH_VELOCITY_X = VariableDescriptor(name='mesh_velocity_x', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMESH_VELOCITY_Y = VariableDescriptor(name='mesh_velocity_y', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMESH_VELOCITY_Z = VariableDescriptor(name='mesh_velocity_z', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOLALITY = VariableDescriptor(name='molality', dimension={'CHEMICAL_AMOUNT': 1.0, 'MASS': -1.0})\n\n\n\n\n\nMOLARITY = VariableDescriptor(name='molarity', dimension={'CHEMICAL_AMOUNT': 1.0, 'LENGTH': -3.0})\n\n\n\n\n\nMOLAR_ENERGY = VariableDescriptor(name='molar_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOLAR_ENTROPY = VariableDescriptor(name='molar_entropy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOLAR_HEAT_CAPACITY = VariableDescriptor(name='molar_heat_capacity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOLAR_MASS = VariableDescriptor(name='molar_mass', dimension={'MASS': 1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOLAR_VOLUME = VariableDescriptor(name='molar_volume', dimension={'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOMENTUM = VariableDescriptor(name='momentum', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENTUM_MAGNITUDE = VariableDescriptor(name='momentum_magnitude', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENTUM_X = VariableDescriptor(name='momentum_x', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENTUM_Y = VariableDescriptor(name='momentum_y', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENTUM_Z = VariableDescriptor(name='momentum_z', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENT_OF_INERTIA = VariableDescriptor(name='moment_of_inertia', dimension={'MASS': 1.0, 'LENGTH': 2.0})\n\n\n\n\n\nNERNST_COEFFICIENT = VariableDescriptor(name='nernst_coefficient', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nNEUTRON_CROSS_SECTION = VariableDescriptor(name='neutron_cross_section', dimension={'LENGTH': 2.0})\n\n\n\n\n\nNORMALIZED_Q_CRITERION = VariableDescriptor(name='normalized_q_criterion', dimension={})\n\n\n\n\n\nOPTICAL_ACTIVITY = VariableDescriptor(name='optical_activity', dimension={'LENGTH': 1.0, 'MASS': -1.0})\n\n\n\n\n\nPERMEABILITY = VariableDescriptor(name='permeability', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n\n\n\n\nPERMITTIVITY = VariableDescriptor(name='permittivity', dimension={'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n\n\n\n\nPH = VariableDescriptor(name='ph', dimension={})\n\n\n\n\n\nPHOTOELASTICITY = VariableDescriptor(name='photoelasticity', dimension={'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0})\n\n\n\n\n\nPHOTOSENSITIVITY = VariableDescriptor(name='photosensitivity', dimension={})\n\n\n\n\n\nPIEZOELECTRIC_CONSTANTS = VariableDescriptor(name='piezoelectric_constants', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'CURRENT': -1.0})\n\n\n\n\n\nPIEZOMAGNETISM = VariableDescriptor(name='piezomagnetism', dimension={'CURRENT': -1.0, 'LENGTH': 1.0})\n\n\n\n\n\nPLASTICITY = VariableDescriptor(name='plasticity', dimension={})\n\n\n\n\n\nPOISSON_RATIO = VariableDescriptor(name='poisson_ratio', dimension={})\n\n\n\n\n\nPOSITION = VariableDescriptor(name='position', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOSITION_MAGNITUDE = VariableDescriptor(name='position_magnitude', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOSITION_X = VariableDescriptor(name='position_x', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOSITION_Y = VariableDescriptor(name='position_y', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOSITION_Z = VariableDescriptor(name='position_z', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOWER = VariableDescriptor(name='power', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nPRANDTL_NUMBER = VariableDescriptor(name='prandtl_number', dimension={})\n\n\n\n\n\nPRESSURE = VariableDescriptor(name='pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nPRESSURE_COEFFICIENT = VariableDescriptor(name='pressure_coefficient', dimension={})\n\n\n\n\n\nPRODUCTION_OF_TURBULENT_KINETIC_ENERGY = VariableDescriptor(name='production_of_turbulent_kinetic_energy', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -3.0})\n\n\n\n\n\nPYROELECTRICITY = VariableDescriptor(name='pyroelectricity', dimension={'CURRENT': 1.0, 'LENGTH': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nPYROMAGNETIC_COEFFICIENT = VariableDescriptor(name='pyromagnetic_coefficient', dimension={'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nQ_CRITERION = VariableDescriptor(name='q_criterion', dimension={'TIME': -2.0})\n\n\n\n\n\nRADIAL_VELOCITY = VariableDescriptor(name='radial_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nRADIANCE = VariableDescriptor(name='radiance', dimension={'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n\n\n\n\nRADIANT_EXPOSURE = VariableDescriptor(name='radiant_exposure', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nRADIANT_INTENSITY = VariableDescriptor(name='radiant_intensity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n\n\n\n\nREACTIVITY = VariableDescriptor(name='reactivity', dimension={})\n\n\n\n\n\nREFLECTIVITY = VariableDescriptor(name='reflectivity', dimension={})\n\n\n\n\n\nREFRACTIVE_INDEX = VariableDescriptor(name='refractive_index', dimension={})\n\n\n\n\n\nRELATIVE_ATOMIC_MASS = VariableDescriptor(name='relative_atomic_mass', dimension={})\n\n\n\n\n\nRESILIENCE = VariableDescriptor(name='resilience', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSCATTERING = VariableDescriptor(name='scattering', dimension={})\n\n\n\n\n\nSEEBECK_COEFFICIENT = VariableDescriptor(name='seebeck_coefficient', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nSHEAR_MODULUS = VariableDescriptor(name='shear_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSHEAR_STRENGTH = VariableDescriptor(name='shear_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSKIN_FRICTION_COEFFICIENT = VariableDescriptor(name='skin_friction_coefficient', dimension={})\n\n\n\n\n\nSLIP = VariableDescriptor(name='slip', dimension={})\n\n\n\n\n\nSNAP = VariableDescriptor(name='snap', dimension={'LENGTH': 1.0, 'TIME': -4.0})\n\n\n\n\n\nSOLID_ANGLE = VariableDescriptor(name='solid_angle', dimension={'SOLID_ANGLE': 1.0})\n\n\n\n\n\nSOUND_REFLECTION = VariableDescriptor(name='sound_reflection', dimension={})\n\n\n\n\n\nSOUND_TRANSFER = VariableDescriptor(name='sound_transfer', dimension={})\n\n\n\n\n\nSPECIFIC_ACTIVITY = VariableDescriptor(name='specific_activity', dimension={'MASS': -1.0, 'TIME': -1.0})\n\n\n\n\n\nSPECIFIC_ANGULAR_MOMENTUM = VariableDescriptor(name='specific_angular_momentum', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n\n\n\n\nSPECIFIC_DISSIPATION_RATE = VariableDescriptor(name='specific_dissipation_rate', dimension={'TIME': -1.0})\n\n\n\n\n\nSPECIFIC_ENERGY = VariableDescriptor(name='specific_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_ENTHALPY = VariableDescriptor(name='specific_enthalpy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_ENTROPY = VariableDescriptor(name='specific_entropy', dimension={'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nSPECIFIC_HEAT_CAPACITY = VariableDescriptor(name='specific_heat_capacity', dimension={'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nSPECIFIC_INTERNAL_ENERGY = VariableDescriptor(name='specific_internal_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_INTERNAL_SURFACE_AREA = VariableDescriptor(name='specific_internal_surface_area', dimension={'LENGTH': -1.0})\n\n\n\n\n\nSPECIFIC_MODULUS = VariableDescriptor(name='specific_modulus', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_STRENGTH = VariableDescriptor(name='specific_strength', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_TOTAL_ENERGY = VariableDescriptor(name='specific_total_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_TOTAL_ENTHALPY = VariableDescriptor(name='specific_total_enthalpy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_VOLUME = VariableDescriptor(name='specific_volume', dimension={'LENGTH': 3.0, 'MASS': -1.0})\n\n\n\n\n\nSPECIFIC_WEIGHT = VariableDescriptor(name='specific_weight', dimension={'MASS': 1.0, 'LENGTH': -2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECTRAL_INTENSITY = VariableDescriptor(name='spectral_intensity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n\n\n\n\nSPECTRAL_IRRADIANCE = VariableDescriptor(name='spectral_irradiance', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nSPECTRAL_POWER = VariableDescriptor(name='spectral_power', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nSPEED_OF_SOUND = VariableDescriptor(name='speed_of_sound', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nSPIN_HALL_EFFECT = VariableDescriptor(name='spin_hall_effect', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nSTANDARD_ATOMIC_WEIGHT = VariableDescriptor(name='standard_atomic_weight', dimension={})\n\n\n\n\n\nSTATIC_PRESSURE = VariableDescriptor(name='static_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSTRAIN_RATE = VariableDescriptor(name='strain_rate', dimension={'TIME': -1.0})\n\n\n\n\n\nSTRESS = VariableDescriptor(name='stress', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSURFACE_ENERGY = VariableDescriptor(name='surface_energy', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nSURFACE_HEAT_FLUX = VariableDescriptor(name='surface_heat_flux', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nSURFACE_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='surface_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nSURFACE_NUSSELT_NUMBER = VariableDescriptor(name='surface_nusselt_number', dimension={})\n\n\n\n\n\nSURFACE_ROUGHNESS = VariableDescriptor(name='surface_roughness', dimension={'LENGTH': 1.0})\n\n\n\n\n\nSURFACE_STANTON_NUMBER = VariableDescriptor(name='surface_stanton_number', dimension={})\n\n\n\n\n\nSURFACE_TENSION = VariableDescriptor(name='surface_tension', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTANGENTIAL_VELOCITY = VariableDescriptor(name='tangential_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nTEMPERATURE = VariableDescriptor(name='temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nTEMPERATURE_DIFFERENCE = VariableDescriptor(name='temperature_difference', dimension={'TEMPERATURE_DIFFERENCE': 1.0})\n\n\n\n\n\nTEMPERATURE_GRADIENT = VariableDescriptor(name='temperature_gradient', dimension={'TEMPERATURE': 1.0, 'LENGTH': -1.0})\n\n\n\n\n\nTENSILE_STRENGTH = VariableDescriptor(name='tensile_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nTHERMAL_CONDUCTIVITY = VariableDescriptor(name='thermal_conductivity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nTHERMAL_DIFFUSIVITY = VariableDescriptor(name='thermal_diffusivity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n\n\n\n\nTHERMAL_EXPANSION_COEFFICIENT = VariableDescriptor(name='thermal_expansion_coefficient', dimension={'TEMPERATURE': -1.0})\n\n\n\n\n\nTHERMAL_RESISTANCE = VariableDescriptor(name='thermal_resistance', dimension={'TEMPERATURE': 1.0, 'LENGTH': -2.0, 'MASS': -1.0, 'TIME': 3.0})\n\n\n\n\n\nTHIRD_ORDER_ELASTICITY = VariableDescriptor(name='third_order_elasticity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nTIME = VariableDescriptor(name='time', dimension={'TIME': 1.0})\n\n\n\n\n\nTORQUE = VariableDescriptor(name='torque', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTORQUE_MAGNITUDE = VariableDescriptor(name='torque_magnitude', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTORQUE_X = VariableDescriptor(name='torque_x', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTORQUE_Y = VariableDescriptor(name='torque_y', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTORQUE_Z = VariableDescriptor(name='torque_z', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTOTAL_ENERGY = VariableDescriptor(name='total_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTOTAL_PRESSURE = VariableDescriptor(name='total_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nTOTAL_TEMPERATURE = VariableDescriptor(name='total_temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nTOUGHNESS = VariableDescriptor(name='toughness', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTRANSMITTANCE = VariableDescriptor(name='transmittance', dimension={})\n\n\n\n\n\nTURBULENT_DISSIPATION_RATE = VariableDescriptor(name='turbulent_dissipation_rate', dimension={'LENGTH': 2.0, 'TIME': 3.0})\n\n\n\n\n\nTURBULENT_INTENSITY = VariableDescriptor(name='turbulent_intensity', dimension={})\n\n\n\n\n\nTURBULENT_KINETIC_ENERGY = VariableDescriptor(name='turbulent_kinetic_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nTURBULENT_REYNOLDS_NUMBER = VariableDescriptor(name='turbulent_reynolds_number', dimension={})\n\n\n\n\n\nTURBULENT_VISCOSITY = VariableDescriptor(name='turbulent_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nTURBULENT_VISCOSITY_RATIO = VariableDescriptor(name='turbulent_viscosity_ratio', dimension={})\n\n\n\n\n\nVAPOR_PRESSURE = VariableDescriptor(name='vapor_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nVELOCITY = VariableDescriptor(name='velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVELOCITY_MAGNITUDE = VariableDescriptor(name='velocity_magnitude', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVELOCITY_X = VariableDescriptor(name='velocity_x', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVELOCITY_Y = VariableDescriptor(name='velocity_y', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVELOCITY_Z = VariableDescriptor(name='velocity_z', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVISCOSITY = VariableDescriptor(name='viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nVOLUME = VariableDescriptor(name='volume', dimension={'LENGTH': 3.0})\n\n\n\n\n\nVOLUMETRIC_FLOW = VariableDescriptor(name='volumetric_flow', dimension={'LENGTH': 3.0, 'TIME': -1.0})\n\n\n\n\n\nVORTICITY = VariableDescriptor(name='vorticity', dimension={'TIME': -1.0})\n\n\n\n\n\nVORTICITY_MAGNITUDE = VariableDescriptor(name='vorticity_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nVORTICITY_X = VariableDescriptor(name='vorticity_x', dimension={'TIME': -1.0})\n\n\n\n\n\nVORTICITY_Y = VariableDescriptor(name='vorticity_y', dimension={'TIME': -1.0})\n\n\n\n\n\nVORTICITY_Z = VariableDescriptor(name='vorticity_z', dimension={'TIME': -1.0})\n\n\n\n\n\nWALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='wall_adjacent_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nWALL_ADJACENT_TEMPERATURE = VariableDescriptor(name='wall_adjacent_temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nWALL_SHEAR_STRESS = VariableDescriptor(name='wall_shear_stress', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_SHEAR_STRESS_MAGNITUDE = VariableDescriptor(name='wall_shear_stress_magnitude', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_SHEAR_STRESS_X = VariableDescriptor(name='wall_shear_stress_x', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_SHEAR_STRESS_Y = VariableDescriptor(name='wall_shear_stress_y', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_SHEAR_STRESS_Z = VariableDescriptor(name='wall_shear_stress_z', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_TEMPERATURE = VariableDescriptor(name='wall_temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nWALL_TEMPERATURE_THIN = VariableDescriptor(name='wall_temperature_thin', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nWALL_Y_PLUS = VariableDescriptor(name='wall_y_plus', dimension={})\n\n\n\n\n\nWALL_Y_STAR = VariableDescriptor(name='wall_y_star', dimension={})\n\n\n\n\n\nWAVENUMBER = VariableDescriptor(name='wavenumber', dimension={'LENGTH': -1.0})\n\n\n\n\n\nYANK = VariableDescriptor(name='yank', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0})\n\n\n\n\n\nYIELD_STRENGTH = VariableDescriptor(name='yield_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nYOUNG_MODULUS = VariableDescriptor(name='young_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nclassmethod add(variable: str, dimension: Dimensions, subcategory: str | None = None) -> None\n\nAdd a variable to the catalog.\n\nParameters\n\nvariable\n\npython:str\n\nThe name of the variable (must be uppercase).\n\ndimension\n\nDimensions\n\nThe dimension of the variable.\n\nsubcategory: str|None\n\nThe optional subcategory for the variable.\n\nRaises\n\nValueError\n\nThe variable name is not uppercase or already exists.\n\n!! processed by numpydoc !!\n\n\n\nclassmethod all() -> dict[str, list[VariableDescriptor]]\n\nReturn all defined\nVariableDescriptor\nobjects, organized by subcategory.\n\nReturns\n\npython:dict[python:str, python:list[VariableDescriptor]]\n\nA dictionary where keys are subcategory names (or “main” for the top-level catalog)\nand values are lists of VariableDescriptor instances.\n\n!! processed by numpydoc !!\n\n\n\nclass fluent\n\nBases: object\n\nDictionary of variable descriptors for fluent-related quantities.\n\n!! processed by numpydoc !!\n\n\n\nDENSITY_ALL = VariableDescriptor(name='density_all', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n\n\n\n\nDVELOCITY_DX = VariableDescriptor(name='dvelocity_dx', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_MAGNITUDE = VariableDescriptor(name='dvelocity_dx_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_X = VariableDescriptor(name='dvelocity_dx_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_Y = VariableDescriptor(name='dvelocity_dx_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_Z = VariableDescriptor(name='dvelocity_dx_z', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY = VariableDescriptor(name='dvelocity_dy', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_MAGNITUDE = VariableDescriptor(name='dvelocity_dy_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_X = VariableDescriptor(name='dvelocity_dy_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_Y = VariableDescriptor(name='dvelocity_dy_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_Z = VariableDescriptor(name='dvelocity_dy_z', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ = VariableDescriptor(name='dvelocity_dz', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_MAGNITUDE = VariableDescriptor(name='dvelocity_dz_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_X = VariableDescriptor(name='dvelocity_dz_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_Y = VariableDescriptor(name='dvelocity_dz_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_Z = VariableDescriptor(name='dvelocity_dz_z', dimension={'TIME': -1.0})\n\n\n\n\n\nHELICITY = VariableDescriptor(name='helicity', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nLAMBDA_2_CRITERION = VariableDescriptor(name='lambda_2_criterion', dimension={'TIME': -2.0})\n\n\n\n\n\nMASS_IMBALANCE = VariableDescriptor(name='mass_imbalance', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nPRESSURE_HESSIAN_INDICATOR = VariableDescriptor(name='pressure_hessian_indicator', dimension={})\n\n\n\n\n\nTOTAL_ENTHALPY_DEVIATION = VariableDescriptor(name='total_enthalpy_deviation', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nVELOCITY_ANGLE = VariableDescriptor(name='velocity_angle', dimension={'ANGLE': 1.0})\n\n\n\n\n\nY_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='y_plus_based_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nclass mesh\n\nBases: object\n\nDictionary of variable descriptors for mesh-related quantities.\n\n!! processed by numpydoc !!\n\n\n\nACTIVE_CELL_PARTITION = VariableDescriptor(name='active_cell_partition', dimension={})\n\n\n\n\n\nANISOTROPIC_ADAPTION_CELLS = VariableDescriptor(name='anisotropic_adaption_cells', dimension={})\n\n\n\n\n\nBOUNDARY_CELL_DISTANCE = VariableDescriptor(name='boundary_cell_distance', dimension={})\n\n\n\n\n\nBOUNDARY_LAYER_CELLS = VariableDescriptor(name='boundary_layer_cells', dimension={})\n\n\n\n\n\nBOUNDARY_NORMAL_DISTANCE = VariableDescriptor(name='boundary_normal_distance', dimension={})\n\n\n\n\n\nBOUNDARY_VOLUME_DISTANCE = VariableDescriptor(name='boundary_volume_distance', dimension={})\n\n\n\n\n\nCELL_ELEMENT_TYPE = VariableDescriptor(name='cell_element_type', dimension={})\n\n\n\n\n\nCELL_EQUIANGLE_SKEW = VariableDescriptor(name='cell_equiangle_skew', dimension={})\n\n\n\n\n\nCELL_EQUIVOLUME_SKEW = VariableDescriptor(name='cell_equivolume_skew', dimension={})\n\n\n\n\n\nCELL_ID = VariableDescriptor(name='cell_id', dimension={})\n\n\n\n\n\nCELL_PARENT_INDEX = VariableDescriptor(name='cell_parent_index', dimension={})\n\n\n\n\n\nCELL_REFINE_LEVEL = VariableDescriptor(name='cell_refine_level', dimension={})\n\n\n\n\n\nCELL_VOLUME = VariableDescriptor(name='cell_volume', dimension={'LENGTH': 3.0})\n\n\n\n\n\nCELL_VOLUME_CHANGE = VariableDescriptor(name='cell_volume_change', dimension={})\n\n\n\n\n\nCELL_WEIGHT = VariableDescriptor(name='cell_weight', dimension={})\n\n\n\n\n\nCELL_ZONE_INDEX = VariableDescriptor(name='cell_zone_index', dimension={})\n\n\n\n\n\nCELL_ZONE_TYPE = VariableDescriptor(name='cell_zone_type', dimension={})\n\n\n\n\n\nELEMENT_ASPECT_RATIO = VariableDescriptor(name='element_aspect_ratio', dimension={})\n\n\n\n\n\nELEMENT_WALL_DISTANCE = VariableDescriptor(name='element_wall_distance', dimension={'LENGTH': 1.0})\n\n\n\n\n\nFACE_AREA_MAGNITUDE = VariableDescriptor(name='face_area_magnitude', dimension={'LENGTH': 2.0})\n\n\n\n\n\nFACE_HANDEDNESS = VariableDescriptor(name='face_handedness', dimension={})\n\n\n\n\n\nINTERFACE_OVERLAP_FRACTION = VariableDescriptor(name='interface_overlap_fraction', dimension={})\n\n\n\n\n\nMARK_POOR_ELEMENTS = VariableDescriptor(name='mark_poor_elements', dimension={})\n\n\n\n\n\nPARTITION_NEIGHBOURS = VariableDescriptor(name='partition_neighbours', dimension={})\n\n\n\n\n\nSMOOTHED_CELL_REFINE_LEVEL = VariableDescriptor(name='smoothed_cell_refine_level', dimension={})\n\n\n\n\n\nSTORED_CELL_PARTITIION = VariableDescriptor(name='stored_cell_partitiion', dimension={})\n\n\n\n\n\nX_FACE_AREA = VariableDescriptor(name='x_face_area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nY_FACE_AREA = VariableDescriptor(name='y_face_area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nZ_FACE_AREA = VariableDescriptor(name='z_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ABSOLUTE_PRESSURE",
        "title": "Variable Descriptors > VariableCatalog > ABSOLUTE_PRESSURE",
        "section": "VariableCatalog > ABSOLUTE_PRESSURE",
        "text": "ABSOLUTE_PRESSURE = VariableDescriptor(name='absolute_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ABSORBANCE",
        "title": "Variable Descriptors > VariableCatalog > ABSORBANCE",
        "section": "VariableCatalog > ABSORBANCE",
        "text": "ABSORBANCE = VariableDescriptor(name='absorbance', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ABSORBED_DOSE_RATE",
        "title": "Variable Descriptors > VariableCatalog > ABSORBED_DOSE_RATE",
        "section": "VariableCatalog > ABSORBED_DOSE_RATE",
        "text": "ABSORBED_DOSE_RATE = VariableDescriptor(name='absorbed_dose_rate', dimension={'LENGTH': 2.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ACCELERATION",
        "title": "Variable Descriptors > VariableCatalog > ACCELERATION",
        "section": "VariableCatalog > ACCELERATION",
        "text": "ACCELERATION = VariableDescriptor(name='acceleration', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ACCELERATION_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > ACCELERATION_MAGNITUDE",
        "section": "VariableCatalog > ACCELERATION_MAGNITUDE",
        "text": "ACCELERATION_MAGNITUDE = VariableDescriptor(name='acceleration_magnitude', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ACCELERATION_X",
        "title": "Variable Descriptors > VariableCatalog > ACCELERATION_X",
        "section": "VariableCatalog > ACCELERATION_X",
        "text": "ACCELERATION_X = VariableDescriptor(name='acceleration_x', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ACCELERATION_Y",
        "title": "Variable Descriptors > VariableCatalog > ACCELERATION_Y",
        "section": "VariableCatalog > ACCELERATION_Y",
        "text": "ACCELERATION_Y = VariableDescriptor(name='acceleration_y', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ACCELERATION_Z",
        "title": "Variable Descriptors > VariableCatalog > ACCELERATION_Z",
        "section": "VariableCatalog > ACCELERATION_Z",
        "text": "ACCELERATION_Z = VariableDescriptor(name='acceleration_z', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ACOUSTICAL_ABSORPTION",
        "title": "Variable Descriptors > VariableCatalog > ACOUSTICAL_ABSORPTION",
        "section": "VariableCatalog > ACOUSTICAL_ABSORPTION",
        "text": "ACOUSTICAL_ABSORPTION = VariableDescriptor(name='acoustical_absorption', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ACTION",
        "title": "Variable Descriptors > VariableCatalog > ACTION",
        "section": "VariableCatalog > ACTION",
        "text": "ACTION = VariableDescriptor(name='action', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ANGLE",
        "title": "Variable Descriptors > VariableCatalog > ANGLE",
        "section": "VariableCatalog > ANGLE",
        "text": "ANGLE = VariableDescriptor(name='angle', dimension={'ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ANGULAR_ACCELERATION",
        "title": "Variable Descriptors > VariableCatalog > ANGULAR_ACCELERATION",
        "section": "VariableCatalog > ANGULAR_ACCELERATION",
        "text": "ANGULAR_ACCELERATION = VariableDescriptor(name='angular_acceleration', dimension={'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM",
        "title": "Variable Descriptors > VariableCatalog > ANGULAR_MOMENTUM",
        "section": "VariableCatalog > ANGULAR_MOMENTUM",
        "text": "ANGULAR_MOMENTUM = VariableDescriptor(name='angular_momentum', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > ANGULAR_MOMENTUM_MAGNITUDE",
        "section": "VariableCatalog > ANGULAR_MOMENTUM_MAGNITUDE",
        "text": "ANGULAR_MOMENTUM_MAGNITUDE = VariableDescriptor(name='angular_momentum_magnitude', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM_X",
        "title": "Variable Descriptors > VariableCatalog > ANGULAR_MOMENTUM_X",
        "section": "VariableCatalog > ANGULAR_MOMENTUM_X",
        "text": "ANGULAR_MOMENTUM_X = VariableDescriptor(name='angular_momentum_x', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM_Y",
        "title": "Variable Descriptors > VariableCatalog > ANGULAR_MOMENTUM_Y",
        "section": "VariableCatalog > ANGULAR_MOMENTUM_Y",
        "text": "ANGULAR_MOMENTUM_Y = VariableDescriptor(name='angular_momentum_y', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM_Z",
        "title": "Variable Descriptors > VariableCatalog > ANGULAR_MOMENTUM_Z",
        "section": "VariableCatalog > ANGULAR_MOMENTUM_Z",
        "text": "ANGULAR_MOMENTUM_Z = VariableDescriptor(name='angular_momentum_z', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ANGULAR_VELOCITY",
        "title": "Variable Descriptors > VariableCatalog > ANGULAR_VELOCITY",
        "section": "VariableCatalog > ANGULAR_VELOCITY",
        "text": "ANGULAR_VELOCITY = VariableDescriptor(name='angular_velocity', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.AREA",
        "title": "Variable Descriptors > VariableCatalog > AREA",
        "section": "VariableCatalog > AREA",
        "text": "AREA = VariableDescriptor(name='area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.AREA_DENSITY",
        "title": "Variable Descriptors > VariableCatalog > AREA_DENSITY",
        "section": "VariableCatalog > AREA_DENSITY",
        "text": "AREA_DENSITY = VariableDescriptor(name='area_density', dimension={'MASS': 1.0, 'LENGTH': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ATOMIC_MASS",
        "title": "Variable Descriptors > VariableCatalog > ATOMIC_MASS",
        "section": "VariableCatalog > ATOMIC_MASS",
        "text": "ATOMIC_MASS = VariableDescriptor(name='atomic_mass', dimension={'MASS': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ATOMIC_NUMBER",
        "title": "Variable Descriptors > VariableCatalog > ATOMIC_NUMBER",
        "section": "VariableCatalog > ATOMIC_NUMBER",
        "text": "ATOMIC_NUMBER = VariableDescriptor(name='atomic_number', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ATTENUATION_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > ATTENUATION_COEFFICIENT",
        "section": "VariableCatalog > ATTENUATION_COEFFICIENT",
        "text": "ATTENUATION_COEFFICIENT = VariableDescriptor(name='attenuation_coefficient', dimension={'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.AXIAL_VELOCITY",
        "title": "Variable Descriptors > VariableCatalog > AXIAL_VELOCITY",
        "section": "VariableCatalog > AXIAL_VELOCITY",
        "text": "AXIAL_VELOCITY = VariableDescriptor(name='axial_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.BIREFRINGENCE",
        "title": "Variable Descriptors > VariableCatalog > BIREFRINGENCE",
        "section": "VariableCatalog > BIREFRINGENCE",
        "text": "BIREFRINGENCE = VariableDescriptor(name='birefringence', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.BULK_MODULUS",
        "title": "Variable Descriptors > VariableCatalog > BULK_MODULUS",
        "section": "VariableCatalog > BULK_MODULUS",
        "text": "BULK_MODULUS = VariableDescriptor(name='bulk_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CAPACITANCE",
        "title": "Variable Descriptors > VariableCatalog > CAPACITANCE",
        "section": "VariableCatalog > CAPACITANCE",
        "text": "CAPACITANCE = VariableDescriptor(name='capacitance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CATALYTIC_EFFICIENCY",
        "title": "Variable Descriptors > VariableCatalog > CATALYTIC_EFFICIENCY",
        "section": "VariableCatalog > CATALYTIC_EFFICIENCY",
        "text": "CATALYTIC_EFFICIENCY = VariableDescriptor(name='catalytic_efficiency', dimension={'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CELL_REYNOLDS_NUMBER",
        "title": "Variable Descriptors > VariableCatalog > CELL_REYNOLDS_NUMBER",
        "section": "VariableCatalog > CELL_REYNOLDS_NUMBER",
        "text": "CELL_REYNOLDS_NUMBER = VariableDescriptor(name='cell_reynolds_number', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CHEMICAL_AMOUNT",
        "title": "Variable Descriptors > VariableCatalog > CHEMICAL_AMOUNT",
        "section": "VariableCatalog > CHEMICAL_AMOUNT",
        "text": "CHEMICAL_AMOUNT = VariableDescriptor(name='chemical_amount', dimension={'CHEMICAL_AMOUNT': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.COEFFICIENT_OF_RESTITUTION",
        "title": "Variable Descriptors > VariableCatalog > COEFFICIENT_OF_RESTITUTION",
        "section": "VariableCatalog > COEFFICIENT_OF_RESTITUTION",
        "text": "COEFFICIENT_OF_RESTITUTION = VariableDescriptor(name='coefficient_of_restitution', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.COLOR",
        "title": "Variable Descriptors > VariableCatalog > COLOR",
        "section": "VariableCatalog > COLOR",
        "text": "COLOR = VariableDescriptor(name='color', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.COMPRESSIBILITY",
        "title": "Variable Descriptors > VariableCatalog > COMPRESSIBILITY",
        "section": "VariableCatalog > COMPRESSIBILITY",
        "text": "COMPRESSIBILITY = VariableDescriptor(name='compressibility', dimension={'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.COMPRESSIVE_STRENGTH",
        "title": "Variable Descriptors > VariableCatalog > COMPRESSIVE_STRENGTH",
        "section": "VariableCatalog > COMPRESSIVE_STRENGTH",
        "text": "COMPRESSIVE_STRENGTH = VariableDescriptor(name='compressive_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CONVECTIVE_COURANT_NUMBER",
        "title": "Variable Descriptors > VariableCatalog > CONVECTIVE_COURANT_NUMBER",
        "section": "VariableCatalog > CONVECTIVE_COURANT_NUMBER",
        "text": "CONVECTIVE_COURANT_NUMBER = VariableDescriptor(name='convective_courant_number', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CORROSION_RESISTANCE",
        "title": "Variable Descriptors > VariableCatalog > CORROSION_RESISTANCE",
        "section": "VariableCatalog > CORROSION_RESISTANCE",
        "text": "CORROSION_RESISTANCE = VariableDescriptor(name='corrosion_resistance', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CREEP",
        "title": "Variable Descriptors > VariableCatalog > CREEP",
        "section": "VariableCatalog > CREEP",
        "text": "CREEP = VariableDescriptor(name='creep', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CURIE_TEMPERATURE",
        "title": "Variable Descriptors > VariableCatalog > CURIE_TEMPERATURE",
        "section": "VariableCatalog > CURIE_TEMPERATURE",
        "text": "CURIE_TEMPERATURE = VariableDescriptor(name='curie_temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.CURRENT",
        "title": "Variable Descriptors > VariableCatalog > CURRENT",
        "section": "VariableCatalog > CURRENT",
        "text": "CURRENT = VariableDescriptor(name='current', dimension={'CURRENT': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.DENSITY",
        "title": "Variable Descriptors > VariableCatalog > DENSITY",
        "section": "VariableCatalog > DENSITY",
        "text": "DENSITY = VariableDescriptor(name='density', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.DIAMAGNETISM",
        "title": "Variable Descriptors > VariableCatalog > DIAMAGNETISM",
        "section": "VariableCatalog > DIAMAGNETISM",
        "text": "DIAMAGNETISM = VariableDescriptor(name='diamagnetism', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.DIELECTRIC_CONSTANT",
        "title": "Variable Descriptors > VariableCatalog > DIELECTRIC_CONSTANT",
        "section": "VariableCatalog > DIELECTRIC_CONSTANT",
        "text": "DIELECTRIC_CONSTANT = VariableDescriptor(name='dielectric_constant', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.DIELECTRIC_STRENGTH",
        "title": "Variable Descriptors > VariableCatalog > DIELECTRIC_STRENGTH",
        "section": "VariableCatalog > DIELECTRIC_STRENGTH",
        "text": "DIELECTRIC_STRENGTH = VariableDescriptor(name='dielectric_strength', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.DUCTILITY",
        "title": "Variable Descriptors > VariableCatalog > DUCTILITY",
        "section": "VariableCatalog > DUCTILITY",
        "text": "DUCTILITY = VariableDescriptor(name='ductility', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.DURABILITY",
        "title": "Variable Descriptors > VariableCatalog > DURABILITY",
        "section": "VariableCatalog > DURABILITY",
        "text": "DURABILITY = VariableDescriptor(name='durability', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.DYNAMIC_PRESSURE",
        "title": "Variable Descriptors > VariableCatalog > DYNAMIC_PRESSURE",
        "section": "VariableCatalog > DYNAMIC_PRESSURE",
        "text": "DYNAMIC_PRESSURE = VariableDescriptor(name='dynamic_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.DYNAMIC_VISCOSITY",
        "title": "Variable Descriptors > VariableCatalog > DYNAMIC_VISCOSITY",
        "section": "VariableCatalog > DYNAMIC_VISCOSITY",
        "text": "DYNAMIC_VISCOSITY = VariableDescriptor(name='dynamic_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.EFFECTIVE_PRANDTL_NUMBER",
        "title": "Variable Descriptors > VariableCatalog > EFFECTIVE_PRANDTL_NUMBER",
        "section": "VariableCatalog > EFFECTIVE_PRANDTL_NUMBER",
        "text": "EFFECTIVE_PRANDTL_NUMBER = VariableDescriptor(name='effective_prandtl_number', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.EFFECTIVE_THERMAL_CONDUCTIVITY",
        "title": "Variable Descriptors > VariableCatalog > EFFECTIVE_THERMAL_CONDUCTIVITY",
        "section": "VariableCatalog > EFFECTIVE_THERMAL_CONDUCTIVITY",
        "text": "EFFECTIVE_THERMAL_CONDUCTIVITY = VariableDescriptor(name='effective_thermal_conductivity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.EFFECTIVE_VISCOSITY",
        "title": "Variable Descriptors > VariableCatalog > EFFECTIVE_VISCOSITY",
        "section": "VariableCatalog > EFFECTIVE_VISCOSITY",
        "text": "EFFECTIVE_VISCOSITY = VariableDescriptor(name='effective_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELASTICITY",
        "title": "Variable Descriptors > VariableCatalog > ELASTICITY",
        "section": "VariableCatalog > ELASTICITY",
        "text": "ELASTICITY = VariableDescriptor(name='elasticity', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_CAPACITANCE",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_CAPACITANCE",
        "section": "VariableCatalog > ELECTRICAL_CAPACITANCE",
        "text": "ELECTRICAL_CAPACITANCE = VariableDescriptor(name='electrical_capacitance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_CONDUCTANCE",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_CONDUCTANCE",
        "section": "VariableCatalog > ELECTRICAL_CONDUCTANCE",
        "text": "ELECTRICAL_CONDUCTANCE = VariableDescriptor(name='electrical_conductance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_CONDUCTIVITY",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_CONDUCTIVITY",
        "section": "VariableCatalog > ELECTRICAL_CONDUCTIVITY",
        "text": "ELECTRICAL_CONDUCTIVITY = VariableDescriptor(name='electrical_conductivity', dimension={'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 3.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_IMPEDANCE",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_IMPEDANCE",
        "section": "VariableCatalog > ELECTRICAL_IMPEDANCE",
        "text": "ELECTRICAL_IMPEDANCE = VariableDescriptor(name='electrical_impedance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_INDUCTANCE",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_INDUCTANCE",
        "section": "VariableCatalog > ELECTRICAL_INDUCTANCE",
        "text": "ELECTRICAL_INDUCTANCE = VariableDescriptor(name='electrical_inductance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_POTENTIAL",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_POTENTIAL",
        "section": "VariableCatalog > ELECTRICAL_POTENTIAL",
        "text": "ELECTRICAL_POTENTIAL = VariableDescriptor(name='electrical_potential', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_REACTANCE",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_REACTANCE",
        "section": "VariableCatalog > ELECTRICAL_REACTANCE",
        "text": "ELECTRICAL_REACTANCE = VariableDescriptor(name='electrical_reactance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_RESISTANCE",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_RESISTANCE",
        "section": "VariableCatalog > ELECTRICAL_RESISTANCE",
        "text": "ELECTRICAL_RESISTANCE = VariableDescriptor(name='electrical_resistance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRICAL_RESISTIVITY",
        "title": "Variable Descriptors > VariableCatalog > ELECTRICAL_RESISTIVITY",
        "section": "VariableCatalog > ELECTRICAL_RESISTIVITY",
        "text": "ELECTRICAL_RESISTIVITY = VariableDescriptor(name='electrical_resistivity', dimension={'MASS': 1.0, 'LENGTH': 3.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRIC_CHARGE",
        "title": "Variable Descriptors > VariableCatalog > ELECTRIC_CHARGE",
        "section": "VariableCatalog > ELECTRIC_CHARGE",
        "text": "ELECTRIC_CHARGE = VariableDescriptor(name='electric_charge', dimension={'TIME': 1.0, 'CURRENT': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRIC_SUSCEPTIBILITY",
        "title": "Variable Descriptors > VariableCatalog > ELECTRIC_SUSCEPTIBILITY",
        "section": "VariableCatalog > ELECTRIC_SUSCEPTIBILITY",
        "text": "ELECTRIC_SUSCEPTIBILITY = VariableDescriptor(name='electric_susceptibility', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTROCALORIC_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > ELECTROCALORIC_COEFFICIENT",
        "section": "VariableCatalog > ELECTROCALORIC_COEFFICIENT",
        "text": "ELECTROCALORIC_COEFFICIENT = VariableDescriptor(name='electrocaloric_coefficient', dimension={'TEMPERATURE': 1.0, 'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTROSTRICTION",
        "title": "Variable Descriptors > VariableCatalog > ELECTROSTRICTION",
        "section": "VariableCatalog > ELECTROSTRICTION",
        "text": "ELECTROSTRICTION = VariableDescriptor(name='electrostriction', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ELECTRO_OPTIC_EFFECT",
        "title": "Variable Descriptors > VariableCatalog > ELECTRO_OPTIC_EFFECT",
        "section": "VariableCatalog > ELECTRO_OPTIC_EFFECT",
        "text": "ELECTRO_OPTIC_EFFECT = VariableDescriptor(name='electro_optic_effect', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.EMISSIVITY",
        "title": "Variable Descriptors > VariableCatalog > EMISSIVITY",
        "section": "VariableCatalog > EMISSIVITY",
        "text": "EMISSIVITY = VariableDescriptor(name='emissivity', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ENERGY",
        "title": "Variable Descriptors > VariableCatalog > ENERGY",
        "section": "VariableCatalog > ENERGY",
        "text": "ENERGY = VariableDescriptor(name='energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ENERGY_DENSITY",
        "title": "Variable Descriptors > VariableCatalog > ENERGY_DENSITY",
        "section": "VariableCatalog > ENERGY_DENSITY",
        "text": "ENERGY_DENSITY = VariableDescriptor(name='energy_density', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ENERGY_FLUX_DENSITY",
        "title": "Variable Descriptors > VariableCatalog > ENERGY_FLUX_DENSITY",
        "section": "VariableCatalog > ENERGY_FLUX_DENSITY",
        "text": "ENERGY_FLUX_DENSITY = VariableDescriptor(name='energy_flux_density', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ENTHALPY",
        "title": "Variable Descriptors > VariableCatalog > ENTHALPY",
        "section": "VariableCatalog > ENTHALPY",
        "text": "ENTHALPY = VariableDescriptor(name='enthalpy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ENTROPY",
        "title": "Variable Descriptors > VariableCatalog > ENTROPY",
        "section": "VariableCatalog > ENTROPY",
        "text": "ENTROPY = VariableDescriptor(name='entropy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FATIGUE_LIMIT",
        "title": "Variable Descriptors > VariableCatalog > FATIGUE_LIMIT",
        "section": "VariableCatalog > FATIGUE_LIMIT",
        "text": "FATIGUE_LIMIT = VariableDescriptor(name='fatigue_limit', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FLEXURAL_MODULUS",
        "title": "Variable Descriptors > VariableCatalog > FLEXURAL_MODULUS",
        "section": "VariableCatalog > FLEXURAL_MODULUS",
        "text": "FLEXURAL_MODULUS = VariableDescriptor(name='flexural_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FLEXURAL_STRENGTH",
        "title": "Variable Descriptors > VariableCatalog > FLEXURAL_STRENGTH",
        "section": "VariableCatalog > FLEXURAL_STRENGTH",
        "text": "FLEXURAL_STRENGTH = VariableDescriptor(name='flexural_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FORCE",
        "title": "Variable Descriptors > VariableCatalog > FORCE",
        "section": "VariableCatalog > FORCE",
        "text": "FORCE = VariableDescriptor(name='force', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FORCE_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > FORCE_MAGNITUDE",
        "section": "VariableCatalog > FORCE_MAGNITUDE",
        "text": "FORCE_MAGNITUDE = VariableDescriptor(name='force_magnitude', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FORCE_X",
        "title": "Variable Descriptors > VariableCatalog > FORCE_X",
        "section": "VariableCatalog > FORCE_X",
        "text": "FORCE_X = VariableDescriptor(name='force_x', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FORCE_Y",
        "title": "Variable Descriptors > VariableCatalog > FORCE_Y",
        "section": "VariableCatalog > FORCE_Y",
        "text": "FORCE_Y = VariableDescriptor(name='force_y', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FORCE_Z",
        "title": "Variable Descriptors > VariableCatalog > FORCE_Z",
        "section": "VariableCatalog > FORCE_Z",
        "text": "FORCE_Z = VariableDescriptor(name='force_z', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FRACTURE_TOUGHNESS",
        "title": "Variable Descriptors > VariableCatalog > FRACTURE_TOUGHNESS",
        "section": "VariableCatalog > FRACTURE_TOUGHNESS",
        "text": "FRACTURE_TOUGHNESS = VariableDescriptor(name='fracture_toughness', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FREQUENCY",
        "title": "Variable Descriptors > VariableCatalog > FREQUENCY",
        "section": "VariableCatalog > FREQUENCY",
        "text": "FREQUENCY = VariableDescriptor(name='frequency', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FREQUENCY_DRIFT",
        "title": "Variable Descriptors > VariableCatalog > FREQUENCY_DRIFT",
        "section": "VariableCatalog > FREQUENCY_DRIFT",
        "text": "FREQUENCY_DRIFT = VariableDescriptor(name='frequency_drift', dimension={'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FRICTION_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > FRICTION_COEFFICIENT",
        "section": "VariableCatalog > FRICTION_COEFFICIENT",
        "text": "FRICTION_COEFFICIENT = VariableDescriptor(name='friction_coefficient', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.FUEL_EFFICIENCY",
        "title": "Variable Descriptors > VariableCatalog > FUEL_EFFICIENCY",
        "section": "VariableCatalog > FUEL_EFFICIENCY",
        "text": "FUEL_EFFICIENCY = VariableDescriptor(name='fuel_efficiency', dimension={'LENGTH': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.HALF_LIFE",
        "title": "Variable Descriptors > VariableCatalog > HALF_LIFE",
        "section": "VariableCatalog > HALF_LIFE",
        "text": "HALF_LIFE = VariableDescriptor(name='half_life', dimension={'TIME': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.HALL_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > HALL_COEFFICIENT",
        "section": "VariableCatalog > HALL_COEFFICIENT",
        "text": "HALL_COEFFICIENT = VariableDescriptor(name='hall_coefficient', dimension={'LENGTH': 3.0, 'CURRENT': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.HARDNESS",
        "title": "Variable Descriptors > VariableCatalog > HARDNESS",
        "section": "VariableCatalog > HARDNESS",
        "text": "HARDNESS = VariableDescriptor(name='hardness', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.HEAT_CAPACITY",
        "title": "Variable Descriptors > VariableCatalog > HEAT_CAPACITY",
        "section": "VariableCatalog > HEAT_CAPACITY",
        "text": "HEAT_CAPACITY = VariableDescriptor(name='heat_capacity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.HEAT_FLUX_DENSITY",
        "title": "Variable Descriptors > VariableCatalog > HEAT_FLUX_DENSITY",
        "section": "VariableCatalog > HEAT_FLUX_DENSITY",
        "text": "HEAT_FLUX_DENSITY = VariableDescriptor(name='heat_flux_density', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.HEAT_OF_VAPORIZATION",
        "title": "Variable Descriptors > VariableCatalog > HEAT_OF_VAPORIZATION",
        "section": "VariableCatalog > HEAT_OF_VAPORIZATION",
        "text": "HEAT_OF_VAPORIZATION = VariableDescriptor(name='heat_of_vaporization', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.HYGROSCOPY",
        "title": "Variable Descriptors > VariableCatalog > HYGROSCOPY",
        "section": "VariableCatalog > HYGROSCOPY",
        "text": "HYGROSCOPY = VariableDescriptor(name='hygroscopy', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.HYSTERESIS",
        "title": "Variable Descriptors > VariableCatalog > HYSTERESIS",
        "section": "VariableCatalog > HYSTERESIS",
        "text": "HYSTERESIS = VariableDescriptor(name='hysteresis', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.ILLUMINANCE",
        "title": "Variable Descriptors > VariableCatalog > ILLUMINANCE",
        "section": "VariableCatalog > ILLUMINANCE",
        "text": "ILLUMINANCE = VariableDescriptor(name='illuminance', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.INTERNAL_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > INTERNAL_ENERGY",
        "section": "VariableCatalog > INTERNAL_ENERGY",
        "text": "INTERNAL_ENERGY = VariableDescriptor(name='internal_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.JERK",
        "title": "Variable Descriptors > VariableCatalog > JERK",
        "section": "VariableCatalog > JERK",
        "text": "JERK = VariableDescriptor(name='jerk', dimension={'LENGTH': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.KINEMATIC_VISCOSITY",
        "title": "Variable Descriptors > VariableCatalog > KINEMATIC_VISCOSITY",
        "section": "VariableCatalog > KINEMATIC_VISCOSITY",
        "text": "KINEMATIC_VISCOSITY = VariableDescriptor(name='kinematic_viscosity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.LENGTH",
        "title": "Variable Descriptors > VariableCatalog > LENGTH",
        "section": "VariableCatalog > LENGTH",
        "text": "LENGTH = VariableDescriptor(name='length', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.LIGHT",
        "title": "Variable Descriptors > VariableCatalog > LIGHT",
        "section": "VariableCatalog > LIGHT",
        "text": "LIGHT = VariableDescriptor(name='light', dimension={'LIGHT': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.LINEAR_MASS_DENSITY",
        "title": "Variable Descriptors > VariableCatalog > LINEAR_MASS_DENSITY",
        "section": "VariableCatalog > LINEAR_MASS_DENSITY",
        "text": "LINEAR_MASS_DENSITY = VariableDescriptor(name='linear_mass_density', dimension={'MASS': 1.0, 'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.LUMINANCE",
        "title": "Variable Descriptors > VariableCatalog > LUMINANCE",
        "section": "VariableCatalog > LUMINANCE",
        "text": "LUMINANCE = VariableDescriptor(name='luminance', dimension={'LIGHT': 1.0, 'LENGTH': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.LUMINOSITY",
        "title": "Variable Descriptors > VariableCatalog > LUMINOSITY",
        "section": "VariableCatalog > LUMINOSITY",
        "text": "LUMINOSITY = VariableDescriptor(name='luminosity', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.LUMINOUS_EXPOSURE",
        "title": "Variable Descriptors > VariableCatalog > LUMINOUS_EXPOSURE",
        "section": "VariableCatalog > LUMINOUS_EXPOSURE",
        "text": "LUMINOUS_EXPOSURE = VariableDescriptor(name='luminous_exposure', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0, 'TIME': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.LUMINOUS_FLUX",
        "title": "Variable Descriptors > VariableCatalog > LUMINOUS_FLUX",
        "section": "VariableCatalog > LUMINOUS_FLUX",
        "text": "LUMINOUS_FLUX = VariableDescriptor(name='luminous_flux', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETIC_FLUX",
        "title": "Variable Descriptors > VariableCatalog > MAGNETIC_FLUX",
        "section": "VariableCatalog > MAGNETIC_FLUX",
        "text": "MAGNETIC_FLUX = VariableDescriptor(name='magnetic_flux', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETIC_INDUCTION",
        "title": "Variable Descriptors > VariableCatalog > MAGNETIC_INDUCTION",
        "section": "VariableCatalog > MAGNETIC_INDUCTION",
        "text": "MAGNETIC_INDUCTION = VariableDescriptor(name='magnetic_induction', dimension={'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETIC_PERMEABILITY",
        "title": "Variable Descriptors > VariableCatalog > MAGNETIC_PERMEABILITY",
        "section": "VariableCatalog > MAGNETIC_PERMEABILITY",
        "text": "MAGNETIC_PERMEABILITY = VariableDescriptor(name='magnetic_permeability', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETIC_VECTOR_POTENTIAL",
        "title": "Variable Descriptors > VariableCatalog > MAGNETIC_VECTOR_POTENTIAL",
        "section": "VariableCatalog > MAGNETIC_VECTOR_POTENTIAL",
        "text": "MAGNETIC_VECTOR_POTENTIAL = VariableDescriptor(name='magnetic_vector_potential', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETOCALORIC_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > MAGNETOCALORIC_COEFFICIENT",
        "section": "VariableCatalog > MAGNETOCALORIC_COEFFICIENT",
        "text": "MAGNETOCALORIC_COEFFICIENT = VariableDescriptor(name='magnetocaloric_coefficient', dimension={'TEMPERATURE': 1.0, 'MASS': -1.0, 'TIME': 2.0, 'CURRENT': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETOELECTRIC_POLARIZABILITY",
        "title": "Variable Descriptors > VariableCatalog > MAGNETOELECTRIC_POLARIZABILITY",
        "section": "VariableCatalog > MAGNETOELECTRIC_POLARIZABILITY",
        "text": "MAGNETOELECTRIC_POLARIZABILITY = VariableDescriptor(name='magnetoelectric_polarizability', dimension={'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETORESISTANCE",
        "title": "Variable Descriptors > VariableCatalog > MAGNETORESISTANCE",
        "section": "VariableCatalog > MAGNETORESISTANCE",
        "text": "MAGNETORESISTANCE = VariableDescriptor(name='magnetoresistance', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETOSTRICTION",
        "title": "Variable Descriptors > VariableCatalog > MAGNETOSTRICTION",
        "section": "VariableCatalog > MAGNETOSTRICTION",
        "text": "MAGNETOSTRICTION = VariableDescriptor(name='magnetostriction', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAGNETOTHERMOELECTRIC_POWER",
        "title": "Variable Descriptors > VariableCatalog > MAGNETOTHERMOELECTRIC_POWER",
        "section": "VariableCatalog > MAGNETOTHERMOELECTRIC_POWER",
        "text": "MAGNETOTHERMOELECTRIC_POWER = VariableDescriptor(name='magnetothermoelectric_power', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MALLEABILITY",
        "title": "Variable Descriptors > VariableCatalog > MALLEABILITY",
        "section": "VariableCatalog > MALLEABILITY",
        "text": "MALLEABILITY = VariableDescriptor(name='malleability', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MASS",
        "title": "Variable Descriptors > VariableCatalog > MASS",
        "section": "VariableCatalog > MASS",
        "text": "MASS = VariableDescriptor(name='mass', dimension={'MASS': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MASS_CONTROL",
        "title": "Variable Descriptors > VariableCatalog > MASS_CONTROL",
        "section": "VariableCatalog > MASS_CONTROL",
        "text": "MASS_CONTROL = VariableDescriptor(name='mass_control', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MASS_DIFFUSIVITY",
        "title": "Variable Descriptors > VariableCatalog > MASS_DIFFUSIVITY",
        "section": "VariableCatalog > MASS_DIFFUSIVITY",
        "text": "MASS_DIFFUSIVITY = VariableDescriptor(name='mass_diffusivity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MASS_FLOW_RATE",
        "title": "Variable Descriptors > VariableCatalog > MASS_FLOW_RATE",
        "section": "VariableCatalog > MASS_FLOW_RATE",
        "text": "MASS_FLOW_RATE = VariableDescriptor(name='mass_flow_rate', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MAXIMUM_ENERGY_PRODUCT",
        "title": "Variable Descriptors > VariableCatalog > MAXIMUM_ENERGY_PRODUCT",
        "section": "VariableCatalog > MAXIMUM_ENERGY_PRODUCT",
        "text": "MAXIMUM_ENERGY_PRODUCT = VariableDescriptor(name='maximum_energy_product', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MELTING_POINT",
        "title": "Variable Descriptors > VariableCatalog > MELTING_POINT",
        "section": "VariableCatalog > MELTING_POINT",
        "text": "MELTING_POINT = VariableDescriptor(name='melting_point', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MESH_VELOCITY",
        "title": "Variable Descriptors > VariableCatalog > MESH_VELOCITY",
        "section": "VariableCatalog > MESH_VELOCITY",
        "text": "MESH_VELOCITY = VariableDescriptor(name='mesh_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MESH_VELOCITY_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > MESH_VELOCITY_MAGNITUDE",
        "section": "VariableCatalog > MESH_VELOCITY_MAGNITUDE",
        "text": "MESH_VELOCITY_MAGNITUDE = VariableDescriptor(name='mesh_velocity_magnitude', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MESH_VELOCITY_X",
        "title": "Variable Descriptors > VariableCatalog > MESH_VELOCITY_X",
        "section": "VariableCatalog > MESH_VELOCITY_X",
        "text": "MESH_VELOCITY_X = VariableDescriptor(name='mesh_velocity_x', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MESH_VELOCITY_Y",
        "title": "Variable Descriptors > VariableCatalog > MESH_VELOCITY_Y",
        "section": "VariableCatalog > MESH_VELOCITY_Y",
        "text": "MESH_VELOCITY_Y = VariableDescriptor(name='mesh_velocity_y', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MESH_VELOCITY_Z",
        "title": "Variable Descriptors > VariableCatalog > MESH_VELOCITY_Z",
        "section": "VariableCatalog > MESH_VELOCITY_Z",
        "text": "MESH_VELOCITY_Z = VariableDescriptor(name='mesh_velocity_z', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOLALITY",
        "title": "Variable Descriptors > VariableCatalog > MOLALITY",
        "section": "VariableCatalog > MOLALITY",
        "text": "MOLALITY = VariableDescriptor(name='molality', dimension={'CHEMICAL_AMOUNT': 1.0, 'MASS': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOLARITY",
        "title": "Variable Descriptors > VariableCatalog > MOLARITY",
        "section": "VariableCatalog > MOLARITY",
        "text": "MOLARITY = VariableDescriptor(name='molarity', dimension={'CHEMICAL_AMOUNT': 1.0, 'LENGTH': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOLAR_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > MOLAR_ENERGY",
        "section": "VariableCatalog > MOLAR_ENERGY",
        "text": "MOLAR_ENERGY = VariableDescriptor(name='molar_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOLAR_ENTROPY",
        "title": "Variable Descriptors > VariableCatalog > MOLAR_ENTROPY",
        "section": "VariableCatalog > MOLAR_ENTROPY",
        "text": "MOLAR_ENTROPY = VariableDescriptor(name='molar_entropy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOLAR_HEAT_CAPACITY",
        "title": "Variable Descriptors > VariableCatalog > MOLAR_HEAT_CAPACITY",
        "section": "VariableCatalog > MOLAR_HEAT_CAPACITY",
        "text": "MOLAR_HEAT_CAPACITY = VariableDescriptor(name='molar_heat_capacity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOLAR_MASS",
        "title": "Variable Descriptors > VariableCatalog > MOLAR_MASS",
        "section": "VariableCatalog > MOLAR_MASS",
        "text": "MOLAR_MASS = VariableDescriptor(name='molar_mass', dimension={'MASS': 1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOLAR_VOLUME",
        "title": "Variable Descriptors > VariableCatalog > MOLAR_VOLUME",
        "section": "VariableCatalog > MOLAR_VOLUME",
        "text": "MOLAR_VOLUME = VariableDescriptor(name='molar_volume', dimension={'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOMENTUM",
        "title": "Variable Descriptors > VariableCatalog > MOMENTUM",
        "section": "VariableCatalog > MOMENTUM",
        "text": "MOMENTUM = VariableDescriptor(name='momentum', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOMENTUM_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > MOMENTUM_MAGNITUDE",
        "section": "VariableCatalog > MOMENTUM_MAGNITUDE",
        "text": "MOMENTUM_MAGNITUDE = VariableDescriptor(name='momentum_magnitude', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOMENTUM_X",
        "title": "Variable Descriptors > VariableCatalog > MOMENTUM_X",
        "section": "VariableCatalog > MOMENTUM_X",
        "text": "MOMENTUM_X = VariableDescriptor(name='momentum_x', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOMENTUM_Y",
        "title": "Variable Descriptors > VariableCatalog > MOMENTUM_Y",
        "section": "VariableCatalog > MOMENTUM_Y",
        "text": "MOMENTUM_Y = VariableDescriptor(name='momentum_y', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOMENTUM_Z",
        "title": "Variable Descriptors > VariableCatalog > MOMENTUM_Z",
        "section": "VariableCatalog > MOMENTUM_Z",
        "text": "MOMENTUM_Z = VariableDescriptor(name='momentum_z', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.MOMENT_OF_INERTIA",
        "title": "Variable Descriptors > VariableCatalog > MOMENT_OF_INERTIA",
        "section": "VariableCatalog > MOMENT_OF_INERTIA",
        "text": "MOMENT_OF_INERTIA = VariableDescriptor(name='moment_of_inertia', dimension={'MASS': 1.0, 'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.NERNST_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > NERNST_COEFFICIENT",
        "section": "VariableCatalog > NERNST_COEFFICIENT",
        "text": "NERNST_COEFFICIENT = VariableDescriptor(name='nernst_coefficient', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.NEUTRON_CROSS_SECTION",
        "title": "Variable Descriptors > VariableCatalog > NEUTRON_CROSS_SECTION",
        "section": "VariableCatalog > NEUTRON_CROSS_SECTION",
        "text": "NEUTRON_CROSS_SECTION = VariableDescriptor(name='neutron_cross_section', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.NORMALIZED_Q_CRITERION",
        "title": "Variable Descriptors > VariableCatalog > NORMALIZED_Q_CRITERION",
        "section": "VariableCatalog > NORMALIZED_Q_CRITERION",
        "text": "NORMALIZED_Q_CRITERION = VariableDescriptor(name='normalized_q_criterion', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.OPTICAL_ACTIVITY",
        "title": "Variable Descriptors > VariableCatalog > OPTICAL_ACTIVITY",
        "section": "VariableCatalog > OPTICAL_ACTIVITY",
        "text": "OPTICAL_ACTIVITY = VariableDescriptor(name='optical_activity', dimension={'LENGTH': 1.0, 'MASS': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PERMEABILITY",
        "title": "Variable Descriptors > VariableCatalog > PERMEABILITY",
        "section": "VariableCatalog > PERMEABILITY",
        "text": "PERMEABILITY = VariableDescriptor(name='permeability', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PERMITTIVITY",
        "title": "Variable Descriptors > VariableCatalog > PERMITTIVITY",
        "section": "VariableCatalog > PERMITTIVITY",
        "text": "PERMITTIVITY = VariableDescriptor(name='permittivity', dimension={'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PH",
        "title": "Variable Descriptors > VariableCatalog > PH",
        "section": "VariableCatalog > PH",
        "text": "PH = VariableDescriptor(name='ph', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PHOTOELASTICITY",
        "title": "Variable Descriptors > VariableCatalog > PHOTOELASTICITY",
        "section": "VariableCatalog > PHOTOELASTICITY",
        "text": "PHOTOELASTICITY = VariableDescriptor(name='photoelasticity', dimension={'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PHOTOSENSITIVITY",
        "title": "Variable Descriptors > VariableCatalog > PHOTOSENSITIVITY",
        "section": "VariableCatalog > PHOTOSENSITIVITY",
        "text": "PHOTOSENSITIVITY = VariableDescriptor(name='photosensitivity', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PIEZOELECTRIC_CONSTANTS",
        "title": "Variable Descriptors > VariableCatalog > PIEZOELECTRIC_CONSTANTS",
        "section": "VariableCatalog > PIEZOELECTRIC_CONSTANTS",
        "text": "PIEZOELECTRIC_CONSTANTS = VariableDescriptor(name='piezoelectric_constants', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PIEZOMAGNETISM",
        "title": "Variable Descriptors > VariableCatalog > PIEZOMAGNETISM",
        "section": "VariableCatalog > PIEZOMAGNETISM",
        "text": "PIEZOMAGNETISM = VariableDescriptor(name='piezomagnetism', dimension={'CURRENT': -1.0, 'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PLASTICITY",
        "title": "Variable Descriptors > VariableCatalog > PLASTICITY",
        "section": "VariableCatalog > PLASTICITY",
        "text": "PLASTICITY = VariableDescriptor(name='plasticity', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.POISSON_RATIO",
        "title": "Variable Descriptors > VariableCatalog > POISSON_RATIO",
        "section": "VariableCatalog > POISSON_RATIO",
        "text": "POISSON_RATIO = VariableDescriptor(name='poisson_ratio', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.POSITION",
        "title": "Variable Descriptors > VariableCatalog > POSITION",
        "section": "VariableCatalog > POSITION",
        "text": "POSITION = VariableDescriptor(name='position', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.POSITION_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > POSITION_MAGNITUDE",
        "section": "VariableCatalog > POSITION_MAGNITUDE",
        "text": "POSITION_MAGNITUDE = VariableDescriptor(name='position_magnitude', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.POSITION_X",
        "title": "Variable Descriptors > VariableCatalog > POSITION_X",
        "section": "VariableCatalog > POSITION_X",
        "text": "POSITION_X = VariableDescriptor(name='position_x', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.POSITION_Y",
        "title": "Variable Descriptors > VariableCatalog > POSITION_Y",
        "section": "VariableCatalog > POSITION_Y",
        "text": "POSITION_Y = VariableDescriptor(name='position_y', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.POSITION_Z",
        "title": "Variable Descriptors > VariableCatalog > POSITION_Z",
        "section": "VariableCatalog > POSITION_Z",
        "text": "POSITION_Z = VariableDescriptor(name='position_z', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.POWER",
        "title": "Variable Descriptors > VariableCatalog > POWER",
        "section": "VariableCatalog > POWER",
        "text": "POWER = VariableDescriptor(name='power', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PRANDTL_NUMBER",
        "title": "Variable Descriptors > VariableCatalog > PRANDTL_NUMBER",
        "section": "VariableCatalog > PRANDTL_NUMBER",
        "text": "PRANDTL_NUMBER = VariableDescriptor(name='prandtl_number', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PRESSURE",
        "title": "Variable Descriptors > VariableCatalog > PRESSURE",
        "section": "VariableCatalog > PRESSURE",
        "text": "PRESSURE = VariableDescriptor(name='pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PRESSURE_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > PRESSURE_COEFFICIENT",
        "section": "VariableCatalog > PRESSURE_COEFFICIENT",
        "text": "PRESSURE_COEFFICIENT = VariableDescriptor(name='pressure_coefficient', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "section": "VariableCatalog > PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "text": "PRODUCTION_OF_TURBULENT_KINETIC_ENERGY = VariableDescriptor(name='production_of_turbulent_kinetic_energy', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PYROELECTRICITY",
        "title": "Variable Descriptors > VariableCatalog > PYROELECTRICITY",
        "section": "VariableCatalog > PYROELECTRICITY",
        "text": "PYROELECTRICITY = VariableDescriptor(name='pyroelectricity', dimension={'CURRENT': 1.0, 'LENGTH': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.PYROMAGNETIC_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > PYROMAGNETIC_COEFFICIENT",
        "section": "VariableCatalog > PYROMAGNETIC_COEFFICIENT",
        "text": "PYROMAGNETIC_COEFFICIENT = VariableDescriptor(name='pyromagnetic_coefficient', dimension={'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.Q_CRITERION",
        "title": "Variable Descriptors > VariableCatalog > Q_CRITERION",
        "section": "VariableCatalog > Q_CRITERION",
        "text": "Q_CRITERION = VariableDescriptor(name='q_criterion', dimension={'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.RADIAL_VELOCITY",
        "title": "Variable Descriptors > VariableCatalog > RADIAL_VELOCITY",
        "section": "VariableCatalog > RADIAL_VELOCITY",
        "text": "RADIAL_VELOCITY = VariableDescriptor(name='radial_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.RADIANCE",
        "title": "Variable Descriptors > VariableCatalog > RADIANCE",
        "section": "VariableCatalog > RADIANCE",
        "text": "RADIANCE = VariableDescriptor(name='radiance', dimension={'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.RADIANT_EXPOSURE",
        "title": "Variable Descriptors > VariableCatalog > RADIANT_EXPOSURE",
        "section": "VariableCatalog > RADIANT_EXPOSURE",
        "text": "RADIANT_EXPOSURE = VariableDescriptor(name='radiant_exposure', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.RADIANT_INTENSITY",
        "title": "Variable Descriptors > VariableCatalog > RADIANT_INTENSITY",
        "section": "VariableCatalog > RADIANT_INTENSITY",
        "text": "RADIANT_INTENSITY = VariableDescriptor(name='radiant_intensity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.REACTIVITY",
        "title": "Variable Descriptors > VariableCatalog > REACTIVITY",
        "section": "VariableCatalog > REACTIVITY",
        "text": "REACTIVITY = VariableDescriptor(name='reactivity', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.REFLECTIVITY",
        "title": "Variable Descriptors > VariableCatalog > REFLECTIVITY",
        "section": "VariableCatalog > REFLECTIVITY",
        "text": "REFLECTIVITY = VariableDescriptor(name='reflectivity', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.REFRACTIVE_INDEX",
        "title": "Variable Descriptors > VariableCatalog > REFRACTIVE_INDEX",
        "section": "VariableCatalog > REFRACTIVE_INDEX",
        "text": "REFRACTIVE_INDEX = VariableDescriptor(name='refractive_index', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.RELATIVE_ATOMIC_MASS",
        "title": "Variable Descriptors > VariableCatalog > RELATIVE_ATOMIC_MASS",
        "section": "VariableCatalog > RELATIVE_ATOMIC_MASS",
        "text": "RELATIVE_ATOMIC_MASS = VariableDescriptor(name='relative_atomic_mass', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.RESILIENCE",
        "title": "Variable Descriptors > VariableCatalog > RESILIENCE",
        "section": "VariableCatalog > RESILIENCE",
        "text": "RESILIENCE = VariableDescriptor(name='resilience', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SCATTERING",
        "title": "Variable Descriptors > VariableCatalog > SCATTERING",
        "section": "VariableCatalog > SCATTERING",
        "text": "SCATTERING = VariableDescriptor(name='scattering', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SEEBECK_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > SEEBECK_COEFFICIENT",
        "section": "VariableCatalog > SEEBECK_COEFFICIENT",
        "text": "SEEBECK_COEFFICIENT = VariableDescriptor(name='seebeck_coefficient', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SHEAR_MODULUS",
        "title": "Variable Descriptors > VariableCatalog > SHEAR_MODULUS",
        "section": "VariableCatalog > SHEAR_MODULUS",
        "text": "SHEAR_MODULUS = VariableDescriptor(name='shear_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SHEAR_STRENGTH",
        "title": "Variable Descriptors > VariableCatalog > SHEAR_STRENGTH",
        "section": "VariableCatalog > SHEAR_STRENGTH",
        "text": "SHEAR_STRENGTH = VariableDescriptor(name='shear_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SKIN_FRICTION_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > SKIN_FRICTION_COEFFICIENT",
        "section": "VariableCatalog > SKIN_FRICTION_COEFFICIENT",
        "text": "SKIN_FRICTION_COEFFICIENT = VariableDescriptor(name='skin_friction_coefficient', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SLIP",
        "title": "Variable Descriptors > VariableCatalog > SLIP",
        "section": "VariableCatalog > SLIP",
        "text": "SLIP = VariableDescriptor(name='slip', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SNAP",
        "title": "Variable Descriptors > VariableCatalog > SNAP",
        "section": "VariableCatalog > SNAP",
        "text": "SNAP = VariableDescriptor(name='snap', dimension={'LENGTH': 1.0, 'TIME': -4.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SOLID_ANGLE",
        "title": "Variable Descriptors > VariableCatalog > SOLID_ANGLE",
        "section": "VariableCatalog > SOLID_ANGLE",
        "text": "SOLID_ANGLE = VariableDescriptor(name='solid_angle', dimension={'SOLID_ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SOUND_REFLECTION",
        "title": "Variable Descriptors > VariableCatalog > SOUND_REFLECTION",
        "section": "VariableCatalog > SOUND_REFLECTION",
        "text": "SOUND_REFLECTION = VariableDescriptor(name='sound_reflection', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SOUND_TRANSFER",
        "title": "Variable Descriptors > VariableCatalog > SOUND_TRANSFER",
        "section": "VariableCatalog > SOUND_TRANSFER",
        "text": "SOUND_TRANSFER = VariableDescriptor(name='sound_transfer', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_ACTIVITY",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_ACTIVITY",
        "section": "VariableCatalog > SPECIFIC_ACTIVITY",
        "text": "SPECIFIC_ACTIVITY = VariableDescriptor(name='specific_activity', dimension={'MASS': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_ANGULAR_MOMENTUM",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_ANGULAR_MOMENTUM",
        "section": "VariableCatalog > SPECIFIC_ANGULAR_MOMENTUM",
        "text": "SPECIFIC_ANGULAR_MOMENTUM = VariableDescriptor(name='specific_angular_momentum', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_DISSIPATION_RATE",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_DISSIPATION_RATE",
        "section": "VariableCatalog > SPECIFIC_DISSIPATION_RATE",
        "text": "SPECIFIC_DISSIPATION_RATE = VariableDescriptor(name='specific_dissipation_rate', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_ENERGY",
        "section": "VariableCatalog > SPECIFIC_ENERGY",
        "text": "SPECIFIC_ENERGY = VariableDescriptor(name='specific_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_ENTHALPY",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_ENTHALPY",
        "section": "VariableCatalog > SPECIFIC_ENTHALPY",
        "text": "SPECIFIC_ENTHALPY = VariableDescriptor(name='specific_enthalpy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_ENTROPY",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_ENTROPY",
        "section": "VariableCatalog > SPECIFIC_ENTROPY",
        "text": "SPECIFIC_ENTROPY = VariableDescriptor(name='specific_entropy', dimension={'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_HEAT_CAPACITY",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_HEAT_CAPACITY",
        "section": "VariableCatalog > SPECIFIC_HEAT_CAPACITY",
        "text": "SPECIFIC_HEAT_CAPACITY = VariableDescriptor(name='specific_heat_capacity', dimension={'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_INTERNAL_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_INTERNAL_ENERGY",
        "section": "VariableCatalog > SPECIFIC_INTERNAL_ENERGY",
        "text": "SPECIFIC_INTERNAL_ENERGY = VariableDescriptor(name='specific_internal_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_INTERNAL_SURFACE_AREA",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_INTERNAL_SURFACE_AREA",
        "section": "VariableCatalog > SPECIFIC_INTERNAL_SURFACE_AREA",
        "text": "SPECIFIC_INTERNAL_SURFACE_AREA = VariableDescriptor(name='specific_internal_surface_area', dimension={'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_MODULUS",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_MODULUS",
        "section": "VariableCatalog > SPECIFIC_MODULUS",
        "text": "SPECIFIC_MODULUS = VariableDescriptor(name='specific_modulus', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_STRENGTH",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_STRENGTH",
        "section": "VariableCatalog > SPECIFIC_STRENGTH",
        "text": "SPECIFIC_STRENGTH = VariableDescriptor(name='specific_strength', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_TOTAL_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_TOTAL_ENERGY",
        "section": "VariableCatalog > SPECIFIC_TOTAL_ENERGY",
        "text": "SPECIFIC_TOTAL_ENERGY = VariableDescriptor(name='specific_total_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_TOTAL_ENTHALPY",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_TOTAL_ENTHALPY",
        "section": "VariableCatalog > SPECIFIC_TOTAL_ENTHALPY",
        "text": "SPECIFIC_TOTAL_ENTHALPY = VariableDescriptor(name='specific_total_enthalpy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_VOLUME",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_VOLUME",
        "section": "VariableCatalog > SPECIFIC_VOLUME",
        "text": "SPECIFIC_VOLUME = VariableDescriptor(name='specific_volume', dimension={'LENGTH': 3.0, 'MASS': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECIFIC_WEIGHT",
        "title": "Variable Descriptors > VariableCatalog > SPECIFIC_WEIGHT",
        "section": "VariableCatalog > SPECIFIC_WEIGHT",
        "text": "SPECIFIC_WEIGHT = VariableDescriptor(name='specific_weight', dimension={'MASS': 1.0, 'LENGTH': -2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECTRAL_INTENSITY",
        "title": "Variable Descriptors > VariableCatalog > SPECTRAL_INTENSITY",
        "section": "VariableCatalog > SPECTRAL_INTENSITY",
        "text": "SPECTRAL_INTENSITY = VariableDescriptor(name='spectral_intensity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECTRAL_IRRADIANCE",
        "title": "Variable Descriptors > VariableCatalog > SPECTRAL_IRRADIANCE",
        "section": "VariableCatalog > SPECTRAL_IRRADIANCE",
        "text": "SPECTRAL_IRRADIANCE = VariableDescriptor(name='spectral_irradiance', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPECTRAL_POWER",
        "title": "Variable Descriptors > VariableCatalog > SPECTRAL_POWER",
        "section": "VariableCatalog > SPECTRAL_POWER",
        "text": "SPECTRAL_POWER = VariableDescriptor(name='spectral_power', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPEED_OF_SOUND",
        "title": "Variable Descriptors > VariableCatalog > SPEED_OF_SOUND",
        "section": "VariableCatalog > SPEED_OF_SOUND",
        "text": "SPEED_OF_SOUND = VariableDescriptor(name='speed_of_sound', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SPIN_HALL_EFFECT",
        "title": "Variable Descriptors > VariableCatalog > SPIN_HALL_EFFECT",
        "section": "VariableCatalog > SPIN_HALL_EFFECT",
        "text": "SPIN_HALL_EFFECT = VariableDescriptor(name='spin_hall_effect', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.STANDARD_ATOMIC_WEIGHT",
        "title": "Variable Descriptors > VariableCatalog > STANDARD_ATOMIC_WEIGHT",
        "section": "VariableCatalog > STANDARD_ATOMIC_WEIGHT",
        "text": "STANDARD_ATOMIC_WEIGHT = VariableDescriptor(name='standard_atomic_weight', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.STATIC_PRESSURE",
        "title": "Variable Descriptors > VariableCatalog > STATIC_PRESSURE",
        "section": "VariableCatalog > STATIC_PRESSURE",
        "text": "STATIC_PRESSURE = VariableDescriptor(name='static_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.STRAIN_RATE",
        "title": "Variable Descriptors > VariableCatalog > STRAIN_RATE",
        "section": "VariableCatalog > STRAIN_RATE",
        "text": "STRAIN_RATE = VariableDescriptor(name='strain_rate', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.STRESS",
        "title": "Variable Descriptors > VariableCatalog > STRESS",
        "section": "VariableCatalog > STRESS",
        "text": "STRESS = VariableDescriptor(name='stress', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SURFACE_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > SURFACE_ENERGY",
        "section": "VariableCatalog > SURFACE_ENERGY",
        "text": "SURFACE_ENERGY = VariableDescriptor(name='surface_energy', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SURFACE_HEAT_FLUX",
        "title": "Variable Descriptors > VariableCatalog > SURFACE_HEAT_FLUX",
        "section": "VariableCatalog > SURFACE_HEAT_FLUX",
        "text": "SURFACE_HEAT_FLUX = VariableDescriptor(name='surface_heat_flux', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "section": "VariableCatalog > SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "text": "SURFACE_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='surface_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SURFACE_NUSSELT_NUMBER",
        "title": "Variable Descriptors > VariableCatalog > SURFACE_NUSSELT_NUMBER",
        "section": "VariableCatalog > SURFACE_NUSSELT_NUMBER",
        "text": "SURFACE_NUSSELT_NUMBER = VariableDescriptor(name='surface_nusselt_number', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SURFACE_ROUGHNESS",
        "title": "Variable Descriptors > VariableCatalog > SURFACE_ROUGHNESS",
        "section": "VariableCatalog > SURFACE_ROUGHNESS",
        "text": "SURFACE_ROUGHNESS = VariableDescriptor(name='surface_roughness', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SURFACE_STANTON_NUMBER",
        "title": "Variable Descriptors > VariableCatalog > SURFACE_STANTON_NUMBER",
        "section": "VariableCatalog > SURFACE_STANTON_NUMBER",
        "text": "SURFACE_STANTON_NUMBER = VariableDescriptor(name='surface_stanton_number', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.SURFACE_TENSION",
        "title": "Variable Descriptors > VariableCatalog > SURFACE_TENSION",
        "section": "VariableCatalog > SURFACE_TENSION",
        "text": "SURFACE_TENSION = VariableDescriptor(name='surface_tension', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TANGENTIAL_VELOCITY",
        "title": "Variable Descriptors > VariableCatalog > TANGENTIAL_VELOCITY",
        "section": "VariableCatalog > TANGENTIAL_VELOCITY",
        "text": "TANGENTIAL_VELOCITY = VariableDescriptor(name='tangential_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TEMPERATURE",
        "title": "Variable Descriptors > VariableCatalog > TEMPERATURE",
        "section": "VariableCatalog > TEMPERATURE",
        "text": "TEMPERATURE = VariableDescriptor(name='temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TEMPERATURE_DIFFERENCE",
        "title": "Variable Descriptors > VariableCatalog > TEMPERATURE_DIFFERENCE",
        "section": "VariableCatalog > TEMPERATURE_DIFFERENCE",
        "text": "TEMPERATURE_DIFFERENCE = VariableDescriptor(name='temperature_difference', dimension={'TEMPERATURE_DIFFERENCE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TEMPERATURE_GRADIENT",
        "title": "Variable Descriptors > VariableCatalog > TEMPERATURE_GRADIENT",
        "section": "VariableCatalog > TEMPERATURE_GRADIENT",
        "text": "TEMPERATURE_GRADIENT = VariableDescriptor(name='temperature_gradient', dimension={'TEMPERATURE': 1.0, 'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TENSILE_STRENGTH",
        "title": "Variable Descriptors > VariableCatalog > TENSILE_STRENGTH",
        "section": "VariableCatalog > TENSILE_STRENGTH",
        "text": "TENSILE_STRENGTH = VariableDescriptor(name='tensile_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.THERMAL_CONDUCTIVITY",
        "title": "Variable Descriptors > VariableCatalog > THERMAL_CONDUCTIVITY",
        "section": "VariableCatalog > THERMAL_CONDUCTIVITY",
        "text": "THERMAL_CONDUCTIVITY = VariableDescriptor(name='thermal_conductivity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.THERMAL_DIFFUSIVITY",
        "title": "Variable Descriptors > VariableCatalog > THERMAL_DIFFUSIVITY",
        "section": "VariableCatalog > THERMAL_DIFFUSIVITY",
        "text": "THERMAL_DIFFUSIVITY = VariableDescriptor(name='thermal_diffusivity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.THERMAL_EXPANSION_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > THERMAL_EXPANSION_COEFFICIENT",
        "section": "VariableCatalog > THERMAL_EXPANSION_COEFFICIENT",
        "text": "THERMAL_EXPANSION_COEFFICIENT = VariableDescriptor(name='thermal_expansion_coefficient', dimension={'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.THERMAL_RESISTANCE",
        "title": "Variable Descriptors > VariableCatalog > THERMAL_RESISTANCE",
        "section": "VariableCatalog > THERMAL_RESISTANCE",
        "text": "THERMAL_RESISTANCE = VariableDescriptor(name='thermal_resistance', dimension={'TEMPERATURE': 1.0, 'LENGTH': -2.0, 'MASS': -1.0, 'TIME': 3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.THIRD_ORDER_ELASTICITY",
        "title": "Variable Descriptors > VariableCatalog > THIRD_ORDER_ELASTICITY",
        "section": "VariableCatalog > THIRD_ORDER_ELASTICITY",
        "text": "THIRD_ORDER_ELASTICITY = VariableDescriptor(name='third_order_elasticity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TIME",
        "title": "Variable Descriptors > VariableCatalog > TIME",
        "section": "VariableCatalog > TIME",
        "text": "TIME = VariableDescriptor(name='time', dimension={'TIME': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TORQUE",
        "title": "Variable Descriptors > VariableCatalog > TORQUE",
        "section": "VariableCatalog > TORQUE",
        "text": "TORQUE = VariableDescriptor(name='torque', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TORQUE_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > TORQUE_MAGNITUDE",
        "section": "VariableCatalog > TORQUE_MAGNITUDE",
        "text": "TORQUE_MAGNITUDE = VariableDescriptor(name='torque_magnitude', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TORQUE_X",
        "title": "Variable Descriptors > VariableCatalog > TORQUE_X",
        "section": "VariableCatalog > TORQUE_X",
        "text": "TORQUE_X = VariableDescriptor(name='torque_x', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TORQUE_Y",
        "title": "Variable Descriptors > VariableCatalog > TORQUE_Y",
        "section": "VariableCatalog > TORQUE_Y",
        "text": "TORQUE_Y = VariableDescriptor(name='torque_y', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TORQUE_Z",
        "title": "Variable Descriptors > VariableCatalog > TORQUE_Z",
        "section": "VariableCatalog > TORQUE_Z",
        "text": "TORQUE_Z = VariableDescriptor(name='torque_z', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TOTAL_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > TOTAL_ENERGY",
        "section": "VariableCatalog > TOTAL_ENERGY",
        "text": "TOTAL_ENERGY = VariableDescriptor(name='total_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TOTAL_PRESSURE",
        "title": "Variable Descriptors > VariableCatalog > TOTAL_PRESSURE",
        "section": "VariableCatalog > TOTAL_PRESSURE",
        "text": "TOTAL_PRESSURE = VariableDescriptor(name='total_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TOTAL_TEMPERATURE",
        "title": "Variable Descriptors > VariableCatalog > TOTAL_TEMPERATURE",
        "section": "VariableCatalog > TOTAL_TEMPERATURE",
        "text": "TOTAL_TEMPERATURE = VariableDescriptor(name='total_temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TOUGHNESS",
        "title": "Variable Descriptors > VariableCatalog > TOUGHNESS",
        "section": "VariableCatalog > TOUGHNESS",
        "text": "TOUGHNESS = VariableDescriptor(name='toughness', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TRANSMITTANCE",
        "title": "Variable Descriptors > VariableCatalog > TRANSMITTANCE",
        "section": "VariableCatalog > TRANSMITTANCE",
        "text": "TRANSMITTANCE = VariableDescriptor(name='transmittance', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TURBULENT_DISSIPATION_RATE",
        "title": "Variable Descriptors > VariableCatalog > TURBULENT_DISSIPATION_RATE",
        "section": "VariableCatalog > TURBULENT_DISSIPATION_RATE",
        "text": "TURBULENT_DISSIPATION_RATE = VariableDescriptor(name='turbulent_dissipation_rate', dimension={'LENGTH': 2.0, 'TIME': 3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TURBULENT_INTENSITY",
        "title": "Variable Descriptors > VariableCatalog > TURBULENT_INTENSITY",
        "section": "VariableCatalog > TURBULENT_INTENSITY",
        "text": "TURBULENT_INTENSITY = VariableDescriptor(name='turbulent_intensity', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TURBULENT_KINETIC_ENERGY",
        "title": "Variable Descriptors > VariableCatalog > TURBULENT_KINETIC_ENERGY",
        "section": "VariableCatalog > TURBULENT_KINETIC_ENERGY",
        "text": "TURBULENT_KINETIC_ENERGY = VariableDescriptor(name='turbulent_kinetic_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TURBULENT_REYNOLDS_NUMBER",
        "title": "Variable Descriptors > VariableCatalog > TURBULENT_REYNOLDS_NUMBER",
        "section": "VariableCatalog > TURBULENT_REYNOLDS_NUMBER",
        "text": "TURBULENT_REYNOLDS_NUMBER = VariableDescriptor(name='turbulent_reynolds_number', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TURBULENT_VISCOSITY",
        "title": "Variable Descriptors > VariableCatalog > TURBULENT_VISCOSITY",
        "section": "VariableCatalog > TURBULENT_VISCOSITY",
        "text": "TURBULENT_VISCOSITY = VariableDescriptor(name='turbulent_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.TURBULENT_VISCOSITY_RATIO",
        "title": "Variable Descriptors > VariableCatalog > TURBULENT_VISCOSITY_RATIO",
        "section": "VariableCatalog > TURBULENT_VISCOSITY_RATIO",
        "text": "TURBULENT_VISCOSITY_RATIO = VariableDescriptor(name='turbulent_viscosity_ratio', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VAPOR_PRESSURE",
        "title": "Variable Descriptors > VariableCatalog > VAPOR_PRESSURE",
        "section": "VariableCatalog > VAPOR_PRESSURE",
        "text": "VAPOR_PRESSURE = VariableDescriptor(name='vapor_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VELOCITY",
        "title": "Variable Descriptors > VariableCatalog > VELOCITY",
        "section": "VariableCatalog > VELOCITY",
        "text": "VELOCITY = VariableDescriptor(name='velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VELOCITY_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > VELOCITY_MAGNITUDE",
        "section": "VariableCatalog > VELOCITY_MAGNITUDE",
        "text": "VELOCITY_MAGNITUDE = VariableDescriptor(name='velocity_magnitude', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VELOCITY_X",
        "title": "Variable Descriptors > VariableCatalog > VELOCITY_X",
        "section": "VariableCatalog > VELOCITY_X",
        "text": "VELOCITY_X = VariableDescriptor(name='velocity_x', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VELOCITY_Y",
        "title": "Variable Descriptors > VariableCatalog > VELOCITY_Y",
        "section": "VariableCatalog > VELOCITY_Y",
        "text": "VELOCITY_Y = VariableDescriptor(name='velocity_y', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VELOCITY_Z",
        "title": "Variable Descriptors > VariableCatalog > VELOCITY_Z",
        "section": "VariableCatalog > VELOCITY_Z",
        "text": "VELOCITY_Z = VariableDescriptor(name='velocity_z', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VISCOSITY",
        "title": "Variable Descriptors > VariableCatalog > VISCOSITY",
        "section": "VariableCatalog > VISCOSITY",
        "text": "VISCOSITY = VariableDescriptor(name='viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VOLUME",
        "title": "Variable Descriptors > VariableCatalog > VOLUME",
        "section": "VariableCatalog > VOLUME",
        "text": "VOLUME = VariableDescriptor(name='volume', dimension={'LENGTH': 3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VOLUMETRIC_FLOW",
        "title": "Variable Descriptors > VariableCatalog > VOLUMETRIC_FLOW",
        "section": "VariableCatalog > VOLUMETRIC_FLOW",
        "text": "VOLUMETRIC_FLOW = VariableDescriptor(name='volumetric_flow', dimension={'LENGTH': 3.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VORTICITY",
        "title": "Variable Descriptors > VariableCatalog > VORTICITY",
        "section": "VariableCatalog > VORTICITY",
        "text": "VORTICITY = VariableDescriptor(name='vorticity', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VORTICITY_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > VORTICITY_MAGNITUDE",
        "section": "VariableCatalog > VORTICITY_MAGNITUDE",
        "text": "VORTICITY_MAGNITUDE = VariableDescriptor(name='vorticity_magnitude', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VORTICITY_X",
        "title": "Variable Descriptors > VariableCatalog > VORTICITY_X",
        "section": "VariableCatalog > VORTICITY_X",
        "text": "VORTICITY_X = VariableDescriptor(name='vorticity_x', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VORTICITY_Y",
        "title": "Variable Descriptors > VariableCatalog > VORTICITY_Y",
        "section": "VariableCatalog > VORTICITY_Y",
        "text": "VORTICITY_Y = VariableDescriptor(name='vorticity_y', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.VORTICITY_Z",
        "title": "Variable Descriptors > VariableCatalog > VORTICITY_Z",
        "section": "VariableCatalog > VORTICITY_Z",
        "text": "VORTICITY_Z = VariableDescriptor(name='vorticity_z', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "section": "VariableCatalog > WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "text": "WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='wall_adjacent_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_ADJACENT_TEMPERATURE",
        "title": "Variable Descriptors > VariableCatalog > WALL_ADJACENT_TEMPERATURE",
        "section": "VariableCatalog > WALL_ADJACENT_TEMPERATURE",
        "text": "WALL_ADJACENT_TEMPERATURE = VariableDescriptor(name='wall_adjacent_temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS",
        "title": "Variable Descriptors > VariableCatalog > WALL_SHEAR_STRESS",
        "section": "VariableCatalog > WALL_SHEAR_STRESS",
        "text": "WALL_SHEAR_STRESS = VariableDescriptor(name='wall_shear_stress', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > WALL_SHEAR_STRESS_MAGNITUDE",
        "section": "VariableCatalog > WALL_SHEAR_STRESS_MAGNITUDE",
        "text": "WALL_SHEAR_STRESS_MAGNITUDE = VariableDescriptor(name='wall_shear_stress_magnitude', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS_X",
        "title": "Variable Descriptors > VariableCatalog > WALL_SHEAR_STRESS_X",
        "section": "VariableCatalog > WALL_SHEAR_STRESS_X",
        "text": "WALL_SHEAR_STRESS_X = VariableDescriptor(name='wall_shear_stress_x', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS_Y",
        "title": "Variable Descriptors > VariableCatalog > WALL_SHEAR_STRESS_Y",
        "section": "VariableCatalog > WALL_SHEAR_STRESS_Y",
        "text": "WALL_SHEAR_STRESS_Y = VariableDescriptor(name='wall_shear_stress_y', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS_Z",
        "title": "Variable Descriptors > VariableCatalog > WALL_SHEAR_STRESS_Z",
        "section": "VariableCatalog > WALL_SHEAR_STRESS_Z",
        "text": "WALL_SHEAR_STRESS_Z = VariableDescriptor(name='wall_shear_stress_z', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_TEMPERATURE",
        "title": "Variable Descriptors > VariableCatalog > WALL_TEMPERATURE",
        "section": "VariableCatalog > WALL_TEMPERATURE",
        "text": "WALL_TEMPERATURE = VariableDescriptor(name='wall_temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_TEMPERATURE_THIN",
        "title": "Variable Descriptors > VariableCatalog > WALL_TEMPERATURE_THIN",
        "section": "VariableCatalog > WALL_TEMPERATURE_THIN",
        "text": "WALL_TEMPERATURE_THIN = VariableDescriptor(name='wall_temperature_thin', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_Y_PLUS",
        "title": "Variable Descriptors > VariableCatalog > WALL_Y_PLUS",
        "section": "VariableCatalog > WALL_Y_PLUS",
        "text": "WALL_Y_PLUS = VariableDescriptor(name='wall_y_plus', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WALL_Y_STAR",
        "title": "Variable Descriptors > VariableCatalog > WALL_Y_STAR",
        "section": "VariableCatalog > WALL_Y_STAR",
        "text": "WALL_Y_STAR = VariableDescriptor(name='wall_y_star', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.WAVENUMBER",
        "title": "Variable Descriptors > VariableCatalog > WAVENUMBER",
        "section": "VariableCatalog > WAVENUMBER",
        "text": "WAVENUMBER = VariableDescriptor(name='wavenumber', dimension={'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.YANK",
        "title": "Variable Descriptors > VariableCatalog > YANK",
        "section": "VariableCatalog > YANK",
        "text": "YANK = VariableDescriptor(name='yank', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.YIELD_STRENGTH",
        "title": "Variable Descriptors > VariableCatalog > YIELD_STRENGTH",
        "section": "VariableCatalog > YIELD_STRENGTH",
        "text": "YIELD_STRENGTH = VariableDescriptor(name='yield_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.YOUNG_MODULUS",
        "title": "Variable Descriptors > VariableCatalog > YOUNG_MODULUS",
        "section": "VariableCatalog > YOUNG_MODULUS",
        "text": "YOUNG_MODULUS = VariableDescriptor(name='young_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.add",
        "title": "Variable Descriptors > VariableCatalog > add",
        "section": "VariableCatalog > add",
        "text": "classmethod add(variable: str, dimension: Dimensions, subcategory: str | None = None) -> None\n\nAdd a variable to the catalog.\n\nParameters\n\nvariable\n\npython:str\n\nThe name of the variable (must be uppercase).\n\ndimension\n\nDimensions\n\nThe dimension of the variable.\n\nsubcategory: str|None\n\nThe optional subcategory for the variable.\n\nRaises\n\nValueError\n\nThe variable name is not uppercase or already exists.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.all",
        "title": "Variable Descriptors > VariableCatalog > all",
        "section": "VariableCatalog > all",
        "text": "classmethod all() -> dict[str, list[VariableDescriptor]]\n\nReturn all defined\nVariableDescriptor\nobjects, organized by subcategory.\n\nReturns\n\npython:dict[python:str, python:list[VariableDescriptor]]\n\nA dictionary where keys are subcategory names (or “main” for the top-level catalog)\nand values are lists of VariableDescriptor instances.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent",
        "title": "Variable Descriptors > VariableCatalog > fluent",
        "section": "VariableCatalog > fluent",
        "text": "class fluent\n\nBases: object\n\nDictionary of variable descriptors for fluent-related quantities.\n\n!! processed by numpydoc !!\n\n\n\nDENSITY_ALL = VariableDescriptor(name='density_all', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n\n\n\n\nDVELOCITY_DX = VariableDescriptor(name='dvelocity_dx', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_MAGNITUDE = VariableDescriptor(name='dvelocity_dx_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_X = VariableDescriptor(name='dvelocity_dx_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_Y = VariableDescriptor(name='dvelocity_dx_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_Z = VariableDescriptor(name='dvelocity_dx_z', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY = VariableDescriptor(name='dvelocity_dy', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_MAGNITUDE = VariableDescriptor(name='dvelocity_dy_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_X = VariableDescriptor(name='dvelocity_dy_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_Y = VariableDescriptor(name='dvelocity_dy_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_Z = VariableDescriptor(name='dvelocity_dy_z', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ = VariableDescriptor(name='dvelocity_dz', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_MAGNITUDE = VariableDescriptor(name='dvelocity_dz_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_X = VariableDescriptor(name='dvelocity_dz_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_Y = VariableDescriptor(name='dvelocity_dz_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_Z = VariableDescriptor(name='dvelocity_dz_z', dimension={'TIME': -1.0})\n\n\n\n\n\nHELICITY = VariableDescriptor(name='helicity', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nLAMBDA_2_CRITERION = VariableDescriptor(name='lambda_2_criterion', dimension={'TIME': -2.0})\n\n\n\n\n\nMASS_IMBALANCE = VariableDescriptor(name='mass_imbalance', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nPRESSURE_HESSIAN_INDICATOR = VariableDescriptor(name='pressure_hessian_indicator', dimension={})\n\n\n\n\n\nTOTAL_ENTHALPY_DEVIATION = VariableDescriptor(name='total_enthalpy_deviation', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nVELOCITY_ANGLE = VariableDescriptor(name='velocity_angle', dimension={'ANGLE': 1.0})\n\n\n\n\n\nY_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='y_plus_based_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DENSITY_ALL",
        "title": "Variable Descriptors > VariableCatalog > DENSITY_ALL",
        "section": "VariableCatalog > DENSITY_ALL",
        "text": "DENSITY_ALL = VariableDescriptor(name='density_all', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DX",
        "section": "VariableCatalog > DVELOCITY_DX",
        "text": "DVELOCITY_DX = VariableDescriptor(name='dvelocity_dx', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DX_MAGNITUDE",
        "section": "VariableCatalog > DVELOCITY_DX_MAGNITUDE",
        "text": "DVELOCITY_DX_MAGNITUDE = VariableDescriptor(name='dvelocity_dx_magnitude', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX_X",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DX_X",
        "section": "VariableCatalog > DVELOCITY_DX_X",
        "text": "DVELOCITY_DX_X = VariableDescriptor(name='dvelocity_dx_x', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX_Y",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DX_Y",
        "section": "VariableCatalog > DVELOCITY_DX_Y",
        "text": "DVELOCITY_DX_Y = VariableDescriptor(name='dvelocity_dx_y', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX_Z",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DX_Z",
        "section": "VariableCatalog > DVELOCITY_DX_Z",
        "text": "DVELOCITY_DX_Z = VariableDescriptor(name='dvelocity_dx_z', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DY",
        "section": "VariableCatalog > DVELOCITY_DY",
        "text": "DVELOCITY_DY = VariableDescriptor(name='dvelocity_dy', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DY_MAGNITUDE",
        "section": "VariableCatalog > DVELOCITY_DY_MAGNITUDE",
        "text": "DVELOCITY_DY_MAGNITUDE = VariableDescriptor(name='dvelocity_dy_magnitude', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY_X",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DY_X",
        "section": "VariableCatalog > DVELOCITY_DY_X",
        "text": "DVELOCITY_DY_X = VariableDescriptor(name='dvelocity_dy_x', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY_Y",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DY_Y",
        "section": "VariableCatalog > DVELOCITY_DY_Y",
        "text": "DVELOCITY_DY_Y = VariableDescriptor(name='dvelocity_dy_y', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY_Z",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DY_Z",
        "section": "VariableCatalog > DVELOCITY_DY_Z",
        "text": "DVELOCITY_DY_Z = VariableDescriptor(name='dvelocity_dy_z', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DZ",
        "section": "VariableCatalog > DVELOCITY_DZ",
        "text": "DVELOCITY_DZ = VariableDescriptor(name='dvelocity_dz', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DZ_MAGNITUDE",
        "section": "VariableCatalog > DVELOCITY_DZ_MAGNITUDE",
        "text": "DVELOCITY_DZ_MAGNITUDE = VariableDescriptor(name='dvelocity_dz_magnitude', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ_X",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DZ_X",
        "section": "VariableCatalog > DVELOCITY_DZ_X",
        "text": "DVELOCITY_DZ_X = VariableDescriptor(name='dvelocity_dz_x', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ_Y",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DZ_Y",
        "section": "VariableCatalog > DVELOCITY_DZ_Y",
        "text": "DVELOCITY_DZ_Y = VariableDescriptor(name='dvelocity_dz_y', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ_Z",
        "title": "Variable Descriptors > VariableCatalog > DVELOCITY_DZ_Z",
        "section": "VariableCatalog > DVELOCITY_DZ_Z",
        "text": "DVELOCITY_DZ_Z = VariableDescriptor(name='dvelocity_dz_z', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.HELICITY",
        "title": "Variable Descriptors > VariableCatalog > HELICITY",
        "section": "VariableCatalog > HELICITY",
        "text": "HELICITY = VariableDescriptor(name='helicity', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.LAMBDA_2_CRITERION",
        "title": "Variable Descriptors > VariableCatalog > LAMBDA_2_CRITERION",
        "section": "VariableCatalog > LAMBDA_2_CRITERION",
        "text": "LAMBDA_2_CRITERION = VariableDescriptor(name='lambda_2_criterion', dimension={'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.MASS_IMBALANCE",
        "title": "Variable Descriptors > VariableCatalog > MASS_IMBALANCE",
        "section": "VariableCatalog > MASS_IMBALANCE",
        "text": "MASS_IMBALANCE = VariableDescriptor(name='mass_imbalance', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.PRESSURE_HESSIAN_INDICATOR",
        "title": "Variable Descriptors > VariableCatalog > PRESSURE_HESSIAN_INDICATOR",
        "section": "VariableCatalog > PRESSURE_HESSIAN_INDICATOR",
        "text": "PRESSURE_HESSIAN_INDICATOR = VariableDescriptor(name='pressure_hessian_indicator', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.TOTAL_ENTHALPY_DEVIATION",
        "title": "Variable Descriptors > VariableCatalog > TOTAL_ENTHALPY_DEVIATION",
        "section": "VariableCatalog > TOTAL_ENTHALPY_DEVIATION",
        "text": "TOTAL_ENTHALPY_DEVIATION = VariableDescriptor(name='total_enthalpy_deviation', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.VELOCITY_ANGLE",
        "title": "Variable Descriptors > VariableCatalog > VELOCITY_ANGLE",
        "section": "VariableCatalog > VELOCITY_ANGLE",
        "text": "VELOCITY_ANGLE = VariableDescriptor(name='velocity_angle', dimension={'ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.fluent.Y_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT",
        "title": "Variable Descriptors > VariableCatalog > Y_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT",
        "section": "VariableCatalog > Y_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT",
        "text": "Y_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='y_plus_based_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh",
        "title": "Variable Descriptors > VariableCatalog > mesh",
        "section": "VariableCatalog > mesh",
        "text": "class mesh\n\nBases: object\n\nDictionary of variable descriptors for mesh-related quantities.\n\n!! processed by numpydoc !!\n\n\n\nACTIVE_CELL_PARTITION = VariableDescriptor(name='active_cell_partition', dimension={})\n\n\n\n\n\nANISOTROPIC_ADAPTION_CELLS = VariableDescriptor(name='anisotropic_adaption_cells', dimension={})\n\n\n\n\n\nBOUNDARY_CELL_DISTANCE = VariableDescriptor(name='boundary_cell_distance', dimension={})\n\n\n\n\n\nBOUNDARY_LAYER_CELLS = VariableDescriptor(name='boundary_layer_cells', dimension={})\n\n\n\n\n\nBOUNDARY_NORMAL_DISTANCE = VariableDescriptor(name='boundary_normal_distance', dimension={})\n\n\n\n\n\nBOUNDARY_VOLUME_DISTANCE = VariableDescriptor(name='boundary_volume_distance', dimension={})\n\n\n\n\n\nCELL_ELEMENT_TYPE = VariableDescriptor(name='cell_element_type', dimension={})\n\n\n\n\n\nCELL_EQUIANGLE_SKEW = VariableDescriptor(name='cell_equiangle_skew', dimension={})\n\n\n\n\n\nCELL_EQUIVOLUME_SKEW = VariableDescriptor(name='cell_equivolume_skew', dimension={})\n\n\n\n\n\nCELL_ID = VariableDescriptor(name='cell_id', dimension={})\n\n\n\n\n\nCELL_PARENT_INDEX = VariableDescriptor(name='cell_parent_index', dimension={})\n\n\n\n\n\nCELL_REFINE_LEVEL = VariableDescriptor(name='cell_refine_level', dimension={})\n\n\n\n\n\nCELL_VOLUME = VariableDescriptor(name='cell_volume', dimension={'LENGTH': 3.0})\n\n\n\n\n\nCELL_VOLUME_CHANGE = VariableDescriptor(name='cell_volume_change', dimension={})\n\n\n\n\n\nCELL_WEIGHT = VariableDescriptor(name='cell_weight', dimension={})\n\n\n\n\n\nCELL_ZONE_INDEX = VariableDescriptor(name='cell_zone_index', dimension={})\n\n\n\n\n\nCELL_ZONE_TYPE = VariableDescriptor(name='cell_zone_type', dimension={})\n\n\n\n\n\nELEMENT_ASPECT_RATIO = VariableDescriptor(name='element_aspect_ratio', dimension={})\n\n\n\n\n\nELEMENT_WALL_DISTANCE = VariableDescriptor(name='element_wall_distance', dimension={'LENGTH': 1.0})\n\n\n\n\n\nFACE_AREA_MAGNITUDE = VariableDescriptor(name='face_area_magnitude', dimension={'LENGTH': 2.0})\n\n\n\n\n\nFACE_HANDEDNESS = VariableDescriptor(name='face_handedness', dimension={})\n\n\n\n\n\nINTERFACE_OVERLAP_FRACTION = VariableDescriptor(name='interface_overlap_fraction', dimension={})\n\n\n\n\n\nMARK_POOR_ELEMENTS = VariableDescriptor(name='mark_poor_elements', dimension={})\n\n\n\n\n\nPARTITION_NEIGHBOURS = VariableDescriptor(name='partition_neighbours', dimension={})\n\n\n\n\n\nSMOOTHED_CELL_REFINE_LEVEL = VariableDescriptor(name='smoothed_cell_refine_level', dimension={})\n\n\n\n\n\nSTORED_CELL_PARTITIION = VariableDescriptor(name='stored_cell_partitiion', dimension={})\n\n\n\n\n\nX_FACE_AREA = VariableDescriptor(name='x_face_area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nY_FACE_AREA = VariableDescriptor(name='y_face_area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nZ_FACE_AREA = VariableDescriptor(name='z_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.ACTIVE_CELL_PARTITION",
        "title": "Variable Descriptors > VariableCatalog > ACTIVE_CELL_PARTITION",
        "section": "VariableCatalog > ACTIVE_CELL_PARTITION",
        "text": "ACTIVE_CELL_PARTITION = VariableDescriptor(name='active_cell_partition', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.ANISOTROPIC_ADAPTION_CELLS",
        "title": "Variable Descriptors > VariableCatalog > ANISOTROPIC_ADAPTION_CELLS",
        "section": "VariableCatalog > ANISOTROPIC_ADAPTION_CELLS",
        "text": "ANISOTROPIC_ADAPTION_CELLS = VariableDescriptor(name='anisotropic_adaption_cells', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.BOUNDARY_CELL_DISTANCE",
        "title": "Variable Descriptors > VariableCatalog > BOUNDARY_CELL_DISTANCE",
        "section": "VariableCatalog > BOUNDARY_CELL_DISTANCE",
        "text": "BOUNDARY_CELL_DISTANCE = VariableDescriptor(name='boundary_cell_distance', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.BOUNDARY_LAYER_CELLS",
        "title": "Variable Descriptors > VariableCatalog > BOUNDARY_LAYER_CELLS",
        "section": "VariableCatalog > BOUNDARY_LAYER_CELLS",
        "text": "BOUNDARY_LAYER_CELLS = VariableDescriptor(name='boundary_layer_cells', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.BOUNDARY_NORMAL_DISTANCE",
        "title": "Variable Descriptors > VariableCatalog > BOUNDARY_NORMAL_DISTANCE",
        "section": "VariableCatalog > BOUNDARY_NORMAL_DISTANCE",
        "text": "BOUNDARY_NORMAL_DISTANCE = VariableDescriptor(name='boundary_normal_distance', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.BOUNDARY_VOLUME_DISTANCE",
        "title": "Variable Descriptors > VariableCatalog > BOUNDARY_VOLUME_DISTANCE",
        "section": "VariableCatalog > BOUNDARY_VOLUME_DISTANCE",
        "text": "BOUNDARY_VOLUME_DISTANCE = VariableDescriptor(name='boundary_volume_distance', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_ELEMENT_TYPE",
        "title": "Variable Descriptors > VariableCatalog > CELL_ELEMENT_TYPE",
        "section": "VariableCatalog > CELL_ELEMENT_TYPE",
        "text": "CELL_ELEMENT_TYPE = VariableDescriptor(name='cell_element_type', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_EQUIANGLE_SKEW",
        "title": "Variable Descriptors > VariableCatalog > CELL_EQUIANGLE_SKEW",
        "section": "VariableCatalog > CELL_EQUIANGLE_SKEW",
        "text": "CELL_EQUIANGLE_SKEW = VariableDescriptor(name='cell_equiangle_skew', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_EQUIVOLUME_SKEW",
        "title": "Variable Descriptors > VariableCatalog > CELL_EQUIVOLUME_SKEW",
        "section": "VariableCatalog > CELL_EQUIVOLUME_SKEW",
        "text": "CELL_EQUIVOLUME_SKEW = VariableDescriptor(name='cell_equivolume_skew', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_ID",
        "title": "Variable Descriptors > VariableCatalog > CELL_ID",
        "section": "VariableCatalog > CELL_ID",
        "text": "CELL_ID = VariableDescriptor(name='cell_id', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_PARENT_INDEX",
        "title": "Variable Descriptors > VariableCatalog > CELL_PARENT_INDEX",
        "section": "VariableCatalog > CELL_PARENT_INDEX",
        "text": "CELL_PARENT_INDEX = VariableDescriptor(name='cell_parent_index', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_REFINE_LEVEL",
        "title": "Variable Descriptors > VariableCatalog > CELL_REFINE_LEVEL",
        "section": "VariableCatalog > CELL_REFINE_LEVEL",
        "text": "CELL_REFINE_LEVEL = VariableDescriptor(name='cell_refine_level', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_VOLUME",
        "title": "Variable Descriptors > VariableCatalog > CELL_VOLUME",
        "section": "VariableCatalog > CELL_VOLUME",
        "text": "CELL_VOLUME = VariableDescriptor(name='cell_volume', dimension={'LENGTH': 3.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_VOLUME_CHANGE",
        "title": "Variable Descriptors > VariableCatalog > CELL_VOLUME_CHANGE",
        "section": "VariableCatalog > CELL_VOLUME_CHANGE",
        "text": "CELL_VOLUME_CHANGE = VariableDescriptor(name='cell_volume_change', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_WEIGHT",
        "title": "Variable Descriptors > VariableCatalog > CELL_WEIGHT",
        "section": "VariableCatalog > CELL_WEIGHT",
        "text": "CELL_WEIGHT = VariableDescriptor(name='cell_weight', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_ZONE_INDEX",
        "title": "Variable Descriptors > VariableCatalog > CELL_ZONE_INDEX",
        "section": "VariableCatalog > CELL_ZONE_INDEX",
        "text": "CELL_ZONE_INDEX = VariableDescriptor(name='cell_zone_index', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.CELL_ZONE_TYPE",
        "title": "Variable Descriptors > VariableCatalog > CELL_ZONE_TYPE",
        "section": "VariableCatalog > CELL_ZONE_TYPE",
        "text": "CELL_ZONE_TYPE = VariableDescriptor(name='cell_zone_type', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.ELEMENT_ASPECT_RATIO",
        "title": "Variable Descriptors > VariableCatalog > ELEMENT_ASPECT_RATIO",
        "section": "VariableCatalog > ELEMENT_ASPECT_RATIO",
        "text": "ELEMENT_ASPECT_RATIO = VariableDescriptor(name='element_aspect_ratio', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.ELEMENT_WALL_DISTANCE",
        "title": "Variable Descriptors > VariableCatalog > ELEMENT_WALL_DISTANCE",
        "section": "VariableCatalog > ELEMENT_WALL_DISTANCE",
        "text": "ELEMENT_WALL_DISTANCE = VariableDescriptor(name='element_wall_distance', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.FACE_AREA_MAGNITUDE",
        "title": "Variable Descriptors > VariableCatalog > FACE_AREA_MAGNITUDE",
        "section": "VariableCatalog > FACE_AREA_MAGNITUDE",
        "text": "FACE_AREA_MAGNITUDE = VariableDescriptor(name='face_area_magnitude', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.FACE_HANDEDNESS",
        "title": "Variable Descriptors > VariableCatalog > FACE_HANDEDNESS",
        "section": "VariableCatalog > FACE_HANDEDNESS",
        "text": "FACE_HANDEDNESS = VariableDescriptor(name='face_handedness', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.INTERFACE_OVERLAP_FRACTION",
        "title": "Variable Descriptors > VariableCatalog > INTERFACE_OVERLAP_FRACTION",
        "section": "VariableCatalog > INTERFACE_OVERLAP_FRACTION",
        "text": "INTERFACE_OVERLAP_FRACTION = VariableDescriptor(name='interface_overlap_fraction', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.MARK_POOR_ELEMENTS",
        "title": "Variable Descriptors > VariableCatalog > MARK_POOR_ELEMENTS",
        "section": "VariableCatalog > MARK_POOR_ELEMENTS",
        "text": "MARK_POOR_ELEMENTS = VariableDescriptor(name='mark_poor_elements', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.PARTITION_NEIGHBOURS",
        "title": "Variable Descriptors > VariableCatalog > PARTITION_NEIGHBOURS",
        "section": "VariableCatalog > PARTITION_NEIGHBOURS",
        "text": "PARTITION_NEIGHBOURS = VariableDescriptor(name='partition_neighbours', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.SMOOTHED_CELL_REFINE_LEVEL",
        "title": "Variable Descriptors > VariableCatalog > SMOOTHED_CELL_REFINE_LEVEL",
        "section": "VariableCatalog > SMOOTHED_CELL_REFINE_LEVEL",
        "text": "SMOOTHED_CELL_REFINE_LEVEL = VariableDescriptor(name='smoothed_cell_refine_level', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.STORED_CELL_PARTITIION",
        "title": "Variable Descriptors > VariableCatalog > STORED_CELL_PARTITIION",
        "section": "VariableCatalog > STORED_CELL_PARTITIION",
        "text": "STORED_CELL_PARTITIION = VariableDescriptor(name='stored_cell_partitiion', dimension={})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.X_FACE_AREA",
        "title": "Variable Descriptors > VariableCatalog > X_FACE_AREA",
        "section": "VariableCatalog > X_FACE_AREA",
        "text": "X_FACE_AREA = VariableDescriptor(name='x_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.Y_FACE_AREA",
        "title": "Variable Descriptors > VariableCatalog > Y_FACE_AREA",
        "section": "VariableCatalog > Y_FACE_AREA",
        "text": "Y_FACE_AREA = VariableDescriptor(name='y_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.variable_descriptor.VariableCatalog.mesh.Z_FACE_AREA",
        "title": "Variable Descriptors > VariableCatalog > Z_FACE_AREA",
        "section": "VariableCatalog > Z_FACE_AREA",
        "text": "Z_FACE_AREA = VariableDescriptor(name='z_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#conversionstrategy",
        "title": "Variable Descriptors > ConversionStrategy",
        "section": "ConversionStrategy",
        "text": "Bases: ABC\nAbstract base class for VariableDescriptor conversion strategies.\nThis class defines the interface for all conversion strategies. Derived classes\nmust implement the methods defined here to handle the conversion of VariableDescriptor\nobjects to and from their string representations, as well as to check if a\nVariableDescriptor is supported.\nCheck if the given VariableDescriptor is supported by the strategy.\nThe VariableDescriptor to check.\nTrue if the VariableDescriptor is supported, False otherwise.\nIf the method is not implemented in a derived class.\nConvert a VariableDescriptor to its string representation.\nThe VariableDescriptor to convert, or a string representation.\nThe string representation of the VariableDescriptor.\nIf the method is not implemented in a derived class.\nConvert a string to its corresponding VariableDescriptor.\nThe string representation to convert, or a VariableDescriptor.\nThe corresponding VariableDescriptor instance.\nIf the method is not implemented in a derived class.\nAn abstract base class for strategies that convert VariableDescriptor objects to and from external string representations.\nConversionStrategy\nABC\nVariableDescriptor\nNotImplementedError\nVariableDescriptor\npython:str\npython:str\nNotImplementedError\nVariableDescriptor\npython:str\nVariableDescriptor\nNotImplementedError\nVariableDescriptor"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.strategy.ConversionStrategy",
        "title": "Variable Descriptors > ConversionStrategy > ConversionStrategy",
        "section": "ConversionStrategy > ConversionStrategy",
        "text": "class ansys.units.variable_descriptor.strategy.ConversionStrategy\n\nBases: ABC\n\nAbstract base class for VariableDescriptor conversion strategies.\n\nThis class defines the interface for all conversion strategies. Derived classes\nmust implement the methods defined here to handle the conversion of VariableDescriptor\nobjects to and from their string representations, as well as to check if a\nVariableDescriptor is supported.\n\n!! processed by numpydoc !!\n\n\n\nabstract supports(variable: VariableDescriptor) -> bool\n\nCheck if the given VariableDescriptor is supported by the strategy.\n\nParameters\n\nvariable\n\nVariableDescriptor\n\nThe VariableDescriptor to check.\n\nReturns\n\nbool\n\nTrue if the VariableDescriptor is supported, False otherwise.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!\n\n\n\nabstract to_string(variable: VariableDescriptor | str | None) -> str | None\n\nConvert a VariableDescriptor to its string representation.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe VariableDescriptor to convert, or a string representation.\n\nReturns\n\npython:str\n\nThe string representation of the VariableDescriptor.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!\n\n\n\nabstract to_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConvert a string to its corresponding VariableDescriptor.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe string representation to convert, or a VariableDescriptor.\n\nReturns\n\nVariableDescriptor\n\nThe corresponding VariableDescriptor instance.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.strategy.ConversionStrategy.supports",
        "title": "Variable Descriptors > ConversionStrategy > supports",
        "section": "ConversionStrategy > supports",
        "text": "abstract supports(variable: VariableDescriptor) -> bool\n\nCheck if the given VariableDescriptor is supported by the strategy.\n\nParameters\n\nvariable\n\nVariableDescriptor\n\nThe VariableDescriptor to check.\n\nReturns\n\nbool\n\nTrue if the VariableDescriptor is supported, False otherwise.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.strategy.ConversionStrategy.to_string",
        "title": "Variable Descriptors > ConversionStrategy > to_string",
        "section": "ConversionStrategy > to_string",
        "text": "abstract to_string(variable: VariableDescriptor | str | None) -> str | None\n\nConvert a VariableDescriptor to its string representation.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe VariableDescriptor to convert, or a string representation.\n\nReturns\n\npython:str\n\nThe string representation of the VariableDescriptor.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.strategy.ConversionStrategy.to_variable_descriptor",
        "title": "Variable Descriptors > ConversionStrategy > to_variable_descriptor",
        "section": "ConversionStrategy > to_variable_descriptor",
        "text": "abstract to_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConvert a string to its corresponding VariableDescriptor.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe string representation to convert, or a VariableDescriptor.\n\nReturns\n\nVariableDescriptor\n\nThe corresponding VariableDescriptor instance.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#mappingconversionstrategy",
        "title": "Variable Descriptors > MappingConversionStrategy",
        "section": "MappingConversionStrategy",
        "text": "Bases: ConversionStrategy\nIntermediate base class for implementing VariableDescriptor conversion strategies.\nThis class simplifies the creation of concrete strategy classes by providing\ndefault implementations for common methods. Classes inheriting from this base\nclass only need to define a _mapping dictionary that maps VariableDescriptor\ninstances to their corresponding string representations.\nGet the reverse mapping of _mapping.\nto_string(variable: VariableDescriptor | str) -> str\nConverts a VariableDescriptor to its string representation. Raises a ValueError if the variable is not supported.\nto_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\nConverts a string to its corresponding VariableDescriptor.\nsupports(variable: VariableDescriptor) -> bool\nChecks if the given VariableDescriptor is supported by the strategy.\nIf a VariableDescriptor is not supported during conversion to a string.\nCheck if the given VariableDescriptor is supported by the strategy.\nThe VariableDescriptor to check.\nTrue if the VariableDescriptor is supported, False otherwise.\nConvert a VariableDescriptor to its string representation.\nIf the input is already a string, it is returned as-is. If the input\nis a VariableDescriptor and is supported by the strategy, its string\nrepresentation is returned. Otherwise, a ValueError is raised.\nThe VariableDescriptor to convert, or a string representation.\nThe string representation of the VariableDescriptor.\nIf the VariableDescriptor is not supported by the strategy.\nConvert a string to its corresponding VariableDescriptor.\nIf the input is already a VariableDescriptor, it is returned as-is.\nOtherwise, the string is converted to a VariableDescriptor using the\nreverse mapping.\nThe string representation to convert, or a VariableDescriptor.\nThe corresponding VariableDescriptor instance, or None if the\nstring is not found in the reverse mapping.\nA reusable base class for implementing conversion strategies based on a simple mapping dictionary. Useful for integrating with systems like Fluent, CFX, or external APIs.\nMappingConversionStrategy\nConversionStrategy\n_reverse_mapping\npython:dict\nValueError\nVariableDescriptor\nVariableDescriptor\npython:str\npython:str\nValueError\nVariableDescriptor\npython:str\nVariableDescriptor"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.strategy.MappingConversionStrategy",
        "title": "Variable Descriptors > MappingConversionStrategy > MappingConversionStrategy",
        "section": "MappingConversionStrategy > MappingConversionStrategy",
        "text": "class ansys.units.variable_descriptor.strategy.MappingConversionStrategy\n\nBases: ConversionStrategy\n\nIntermediate base class for implementing VariableDescriptor conversion strategies.\n\nThis class simplifies the creation of concrete strategy classes by providing\ndefault implementations for common methods. Classes inheriting from this base\nclass only need to define a _mapping dictionary that maps VariableDescriptor\ninstances to their corresponding string representations.\n\nAttributes\n\n_reverse_mapping\n\npython:dict\n\nGet the reverse mapping of _mapping.\n\nMethods\n\n\n\n\n\nto_string(variable: VariableDescriptor | str) -> str\n\nConverts a VariableDescriptor to its string representation. Raises a ValueError if the variable is not supported.\n\nto_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConverts a string to its corresponding VariableDescriptor.\n\nsupports(variable: VariableDescriptor) -> bool\n\nChecks if the given VariableDescriptor is supported by the strategy.\n\nRaises\n\nValueError\n\nIf a VariableDescriptor is not supported during conversion to a string.\n\n!! processed by numpydoc !!\n\n\n\nsupports(variable: VariableDescriptor) -> bool\n\nCheck if the given VariableDescriptor is supported by the strategy.\n\nParameters\n\nvariable\n\nVariableDescriptor\n\nThe VariableDescriptor to check.\n\nReturns\n\nbool\n\nTrue if the VariableDescriptor is supported, False otherwise.\n\n!! processed by numpydoc !!\n\n\n\nto_string(variable: VariableDescriptor | str | None) -> str | None\n\nConvert a VariableDescriptor to its string representation.\n\nIf the input is already a string, it is returned as-is. If the input\nis a VariableDescriptor and is supported by the strategy, its string\nrepresentation is returned. Otherwise, a ValueError is raised.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe VariableDescriptor to convert, or a string representation.\n\nReturns\n\npython:str\n\nThe string representation of the VariableDescriptor.\n\nRaises\n\nValueError\n\nIf the VariableDescriptor is not supported by the strategy.\n\n!! processed by numpydoc !!\n\n\n\nto_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConvert a string to its corresponding VariableDescriptor.\n\nIf the input is already a VariableDescriptor, it is returned as-is.\nOtherwise, the string is converted to a VariableDescriptor using the\nreverse mapping.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe string representation to convert, or a VariableDescriptor.\n\nReturns\n\nVariableDescriptor\n\nThe corresponding VariableDescriptor instance, or None if the\nstring is not found in the reverse mapping.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.strategy.MappingConversionStrategy.supports",
        "title": "Variable Descriptors > MappingConversionStrategy > supports",
        "section": "MappingConversionStrategy > supports",
        "text": "supports(variable: VariableDescriptor) -> bool\n\nCheck if the given VariableDescriptor is supported by the strategy.\n\nParameters\n\nvariable\n\nVariableDescriptor\n\nThe VariableDescriptor to check.\n\nReturns\n\nbool\n\nTrue if the VariableDescriptor is supported, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.strategy.MappingConversionStrategy.to_string",
        "title": "Variable Descriptors > MappingConversionStrategy > to_string",
        "section": "MappingConversionStrategy > to_string",
        "text": "to_string(variable: VariableDescriptor | str | None) -> str | None\n\nConvert a VariableDescriptor to its string representation.\n\nIf the input is already a string, it is returned as-is. If the input\nis a VariableDescriptor and is supported by the strategy, its string\nrepresentation is returned. Otherwise, a ValueError is raised.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe VariableDescriptor to convert, or a string representation.\n\nReturns\n\npython:str\n\nThe string representation of the VariableDescriptor.\n\nRaises\n\nValueError\n\nIf the VariableDescriptor is not supported by the strategy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#ansys.units.variable_descriptor.strategy.MappingConversionStrategy.to_variable_descriptor",
        "title": "Variable Descriptors > MappingConversionStrategy > to_variable_descriptor",
        "section": "MappingConversionStrategy > to_variable_descriptor",
        "text": "to_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConvert a string to its corresponding VariableDescriptor.\n\nIf the input is already a VariableDescriptor, it is returned as-is.\nOtherwise, the string is converted to a VariableDescriptor using the\nreverse mapping.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe string representation to convert, or a VariableDescriptor.\n\nReturns\n\nVariableDescriptor\n\nThe corresponding VariableDescriptor instance, or None if the\nstring is not found in the reverse mapping.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#example",
        "title": "Variable Descriptors > Example",
        "section": "Example",
        "text": "This example demonstrates converting a descriptor to a Fluent-style variable name using a custom strategy.\nYou can also define your own mappings for custom naming schemes by subclassing MappingConversionStrategy.\nExample\nMappingConversionStrategy"
    },
    {
        "objectID": "user_guide/variable_descriptor",
        "href": "user_guide/variable_descriptor.html#use-cases",
        "title": "Variable Descriptors > Use Cases",
        "section": "Use Cases",
        "text": "Abstracting physical quantities from product-specific naming\nProviding consistent and validated input/output definitions\nBridging Ansys APIs, user interfaces, and internal computation frameworks\nUse Cases"
    },
    {
        "objectID": "user_guide/quantity_dimensions",
        "href": "user_guide/quantity_dimensions.html#quantity-dimensions",
        "title": "Quantity Dimensions",
        "section": "Quantity Dimensions",
        "text": "The ansys.units.quantity_dimensions module defines standard physical quantity dimensions, covering SI base quantities (such as mass and time) and many commonly used derived quantities (such as force, pressure, energy).\nQuantity Dimensions\nansys.units.quantity_dimensions"
    },
    {
        "objectID": "user_guide/quantity_dimensions",
        "href": "user_guide/quantity_dimensions.html#overview",
        "title": "Quantity Dimensions > Overview",
        "section": "Overview",
        "text": "A quantity dimension describes the physical nature of a value, such as length, time, or force. These dimensions are used internally in dimensional analysis, unit validation, and conversion.\nThis module provides a set of immutable, predefined dimension objects via the QuantityDimensions class. Each attribute of this class represents a Dimensions object composed from SI base dimensions.\nThese objects support symbolic operations such as multiplication, division, and exponentiation to allow for composition and comparison of dimensions.\nOverview\nQuantityDimensions\nDimensions"
    },
    {
        "objectID": "user_guide/quantity_dimensions",
        "href": "user_guide/quantity_dimensions.html#usage",
        "title": "Quantity Dimensions > Usage",
        "section": "Usage",
        "text": "You do not create QuantityDimensions instances directly. Instead, you use the class-level attributes:\nUsage\nQuantityDimensions"
    },
    {
        "objectID": "user_guide/quantity_dimensions",
        "href": "user_guide/quantity_dimensions.html#vector-quantities",
        "title": "Quantity Dimensions > Vector Quantities",
        "section": "Vector Quantities",
        "text": "Certain quantities, such as velocity or momentum, are marked as vector quantities. For these, additional attributes are automatically generated:\n<NAME>_X, <NAME>_Y, <NAME>_Z - Cartesian components\n<NAME>_MAGNITUDE - scalar magnitude\nExample:\nThese variants share the same dimensional structure as the base quantity.\nVector Quantities\n<NAME>_X\n<NAME>_Y\n<NAME>_Z\n<NAME>_MAGNITUDE"
    },
    {
        "objectID": "user_guide/quantity_dimensions",
        "href": "user_guide/quantity_dimensions.html#use-cases",
        "title": "Quantity Dimensions > Use Cases",
        "section": "Use Cases",
        "text": "Validating consistency of physical equations and formulas\nEnabling unit-aware computation and conversions\nProviding structure to variable descriptors and unit systems\nUse Cases"
    },
    {
        "objectID": "api/config",
        "href": "api/config.html#configuration-of-quantity-data",
        "title": "Configuration of quantity data",
        "section": "Configuration of quantity data",
        "text": "The cfg.yaml file contains these tables predefining quantity data:\ndimension_order\nmultipliers\nunit_systems\nbase_units\nderived_units\napi_quantity_map\nTo use custom data, such as units, unit systems, and multipliers, or to update, add,\nor remove any predefined quantity data, you must manually modify the cfg.yaml file.\nConfiguration of quantity data\ncfg.yaml\ndimension_order\nmultipliers\nunit_systems\nbase_units\nderived_units\napi_quantity_map\ncfg.yaml"
    },
    {
        "objectID": "api/dimensions",
        "href": "api/dimensions.html#dimensions",
        "title": "Dimensions",
        "section": "Dimensions",
        "text": "Bases: object\nA representation of an arbitrary number of dimensions, where each dimension is a\npair consisting of a base dimension and exponent.\nA dictionary of BaseDimensions and exponent is required\nfor a non-dimensionless object.\nIf any keys are duplicated in copy_from and dimensions then the\nassociated values from dimensions are used.\nDictionary of {BaseDimensions: exponent, …}.\nThe unit system for the dimensions.\nA previous instance of Dimensions.\nBases: ValueError\nRaised on initialization if a dimension is not of type BaseDimensions.\nDimensions\nobject\nBaseDimensions\ncopy_from\ndimensions\ndimensions\npython:dict\noptional\nBaseDimensions\nUnitSystem\noptional\nDimensions\noptional\nValueError\nBaseDimensions"
    },
    {
        "objectID": "api/dimensions",
        "href": "api/dimensions.html#ansys.units.dimensions.Dimensions",
        "title": "Dimensions > Dimensions > Dimensions",
        "section": "Dimensions > Dimensions",
        "text": "class ansys.units.dimensions.Dimensions(dimensions: dict[BaseDimensions, int | float] | None = None, copy_from: Dimensions | None = None)\n\nBases: object\n\nA representation of an arbitrary number of dimensions, where each dimension is a\npair consisting of a base dimension and exponent.\n\nA dictionary of BaseDimensions and exponent is required\nfor a non-dimensionless object.\n\nIf any keys are duplicated in copy_from and dimensions then the\nassociated values from dimensions are used.\n\nParameters\n\ndimensions\n\npython:dict, optional\n\nDictionary of {BaseDimensions: exponent, …}.\n\nsystem\n\nUnitSystem, optional\n\nThe unit system for the dimensions.\n\ncopy_from\n\nDimensions, optional\n\nA previous instance of Dimensions.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/dimensions",
        "href": "api/dimensions.html#ansys.units.dimensions.IncorrectDimensions",
        "title": "Dimensions > Dimensions > IncorrectDimensions",
        "section": "Dimensions > IncorrectDimensions",
        "text": "exception ansys.units.dimensions.IncorrectDimensions\n\nBases: ValueError\n\nRaised on initialization if a dimension is not of type BaseDimensions.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/sg_execution_times",
        "href": "examples/sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:00.000 total execution time for 0 files from examples:\nExample\nTime\nMem (MB)\nN/A\nN/A\nN/A\nComputation times"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#unit-systems",
        "title": "Unit systems",
        "section": "Unit systems",
        "text": "Bases: object\nA class representing base units for a unit system.\nPredefined unit systems work automatically and are configured when the\npackage is initialized, whereas you can add user-defined systems at any time.\nUnits mapped to base dimensions types.\nPredefined unit system.\nMake a copy of a unit system.\nMass unit of the unit system.\nLength unit of the unit system.\nTime unit of the unit system.\nTemperature unit of the unit system.\nTemperature unit of the unit system.\nAngle unit of the unit system.\nChemical Amount unit of the unit system.\nLight unit of the unit system.\nCurrent unit of the unit system.\nSolid Angle unit of the unit system.\nAngle unit of the unit system.\nChemical Amount unit of the unit system.\nCurrent unit of the unit system.\nLength unit of the unit system.\nLight unit of the unit system.\nMass unit of the unit system.\nSolid Angle unit of the unit system.\nTemperature unit of the unit system.\nTemperature unit of the unit system.\nTime unit of the unit system.\nChange the units of the unit system.\nUnits mapped to base dimensions types.\nBases: ValueError\nRaised when a unit is provided that does not have a valid type of base unit.\nBases: ValueError\nRaised when a unit system is initialized with an unsupported unit system.\nBases: ValueError\nRaised when a unit system unit is not a configured base unit.\nUnit systems\nobject\nMASS\nLENGTH\nTIME\nTEMPERATURE\nTEMPERATURE_DIFFERENCE\nANGLE\nCHEMICAL_AMOUNT\nLIGHT\nCURRENT\nSOLID_ANGLE\nValueError\nValueError\nValueError"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem",
        "title": "Unit systems > Unit systems > UnitSystem",
        "section": "Unit systems > UnitSystem",
        "text": "class ansys.units.systems.UnitSystem(base_units: dict[BaseDimensions, any] | None = None, system: str | None = None, copy_from: UnitSystem | None = None)\n\nBases: object\n\nA class representing base units for a unit system.\n\nPredefined unit systems work automatically and are configured when the\npackage is initialized, whereas you can add user-defined systems at any time.\n\nParameters\n\nbase_units: dict, optional\n\nUnits mapped to base dimensions types.\n\nunit_sys: str, Unit, optional\n\nPredefined unit system.\n\ncopy_from: UnitSystem, optional\n\nMake a copy of a unit system.\n\nAttributes\n\nMASS\n\nMass unit of the unit system.\n\nLENGTH\n\nLength unit of the unit system.\n\nTIME\n\nTime unit of the unit system.\n\nTEMPERATURE\n\nTemperature unit of the unit system.\n\nTEMPERATURE_DIFFERENCE\n\nTemperature unit of the unit system.\n\nANGLE\n\nAngle unit of the unit system.\n\nCHEMICAL_AMOUNT\n\nChemical Amount unit of the unit system.\n\nLIGHT\n\nLight unit of the unit system.\n\nCURRENT\n\nCurrent unit of the unit system.\n\nSOLID_ANGLE\n\nSolid Angle unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty ANGLE\n\nAngle unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty CHEMICAL_AMOUNT\n\nChemical Amount unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty CURRENT\n\nCurrent unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty LENGTH\n\nLength unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty LIGHT\n\nLight unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty MASS\n\nMass unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty SOLID_ANGLE\n\nSolid Angle unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty TEMPERATURE\n\nTemperature unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty TEMPERATURE_DIFFERENCE\n\nTemperature unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nproperty TIME\n\nTime unit of the unit system.\n\n!! processed by numpydoc !!\n\n\n\nupdate(base_units: dict[slice(<enum 'BaseDimensions'>, <built-in function any>, None)])\n\nChange the units of the unit system.\n\nParameters\n\nbase_units: dict\n\nUnits mapped to base dimensions types.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.ANGLE",
        "title": "Unit systems > Unit systems > ANGLE",
        "section": "Unit systems > ANGLE",
        "text": "property ANGLE\n\nAngle unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.CHEMICAL_AMOUNT",
        "title": "Unit systems > Unit systems > CHEMICAL_AMOUNT",
        "section": "Unit systems > CHEMICAL_AMOUNT",
        "text": "property CHEMICAL_AMOUNT\n\nChemical Amount unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.CURRENT",
        "title": "Unit systems > Unit systems > CURRENT",
        "section": "Unit systems > CURRENT",
        "text": "property CURRENT\n\nCurrent unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.LENGTH",
        "title": "Unit systems > Unit systems > LENGTH",
        "section": "Unit systems > LENGTH",
        "text": "property LENGTH\n\nLength unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.LIGHT",
        "title": "Unit systems > Unit systems > LIGHT",
        "section": "Unit systems > LIGHT",
        "text": "property LIGHT\n\nLight unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.MASS",
        "title": "Unit systems > Unit systems > MASS",
        "section": "Unit systems > MASS",
        "text": "property MASS\n\nMass unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.SOLID_ANGLE",
        "title": "Unit systems > Unit systems > SOLID_ANGLE",
        "section": "Unit systems > SOLID_ANGLE",
        "text": "property SOLID_ANGLE\n\nSolid Angle unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.TEMPERATURE",
        "title": "Unit systems > Unit systems > TEMPERATURE",
        "section": "Unit systems > TEMPERATURE",
        "text": "property TEMPERATURE\n\nTemperature unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.TEMPERATURE_DIFFERENCE",
        "title": "Unit systems > Unit systems > TEMPERATURE_DIFFERENCE",
        "section": "Unit systems > TEMPERATURE_DIFFERENCE",
        "text": "property TEMPERATURE_DIFFERENCE\n\nTemperature unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.TIME",
        "title": "Unit systems > Unit systems > TIME",
        "section": "Unit systems > TIME",
        "text": "property TIME\n\nTime unit of the unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.UnitSystem.update",
        "title": "Unit systems > Unit systems > update",
        "section": "Unit systems > update",
        "text": "update(base_units: dict[slice(<enum 'BaseDimensions'>, <built-in function any>, None)])\n\nChange the units of the unit system.\n\nParameters\n\nbase_units: dict\n\nUnits mapped to base dimensions types.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.IncorrectUnitType",
        "title": "Unit systems > Unit systems > IncorrectUnitType",
        "section": "Unit systems > IncorrectUnitType",
        "text": "exception ansys.units.systems.IncorrectUnitType(unit, unit_type)\n\nBases: ValueError\n\nRaised when a unit is provided that does not have a valid type of base unit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.InvalidUnitSystem",
        "title": "Unit systems > Unit systems > InvalidUnitSystem",
        "section": "Unit systems > InvalidUnitSystem",
        "text": "exception ansys.units.systems.InvalidUnitSystem(sys)\n\nBases: ValueError\n\nRaised when a unit system is initialized with an unsupported unit system.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/systems",
        "href": "api/systems.html#ansys.units.systems.NotBaseUnit",
        "title": "Unit systems > Unit systems > NotBaseUnit",
        "section": "Unit systems > NotBaseUnit",
        "text": "exception ansys.units.systems.NotBaseUnit(unit)\n\nBases: ValueError\n\nRaised when a unit system unit is not a configured base unit.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "sg_execution_times",
        "href": "sg_execution_times.html#computation-times",
        "title": "Computation times",
        "section": "Computation times",
        "text": "00:00.010 total execution time for 1 file from all galleries:\nExample\nTime\nMem (MB)\nsphx_glr_examples_00-pyunits_basic_usage.py (../../examples/00-pyunits/basic_usage.py)\n00:00.010\n0.0\nComputation times\n../../examples/00-pyunits/basic_usage.py"
    },
    {
        "objectID": "user_guide/strings",
        "href": "user_guide/strings.html#unit-string-format",
        "title": "Unit string format",
        "section": "Unit string format",
        "text": "PyAnsys Units supports specifying units as strings for many input parameters and\ncan also provide string representations of units. The basic form of a unit\nstring follows this convention:\nwhere\nmultiplier prefix is optional and must be one of the prefixes defined on\npackage initialization such as k, M or c.\nunit must be one of the base or derived units as defined in the\nUnitRegistry.\nexponent is optional and must be preceded by the caret ^ symbol followed\nby the numerical exponent.\nMore complex unit strings can be built up by concatenation of these basic strings\nwith spaces in between. Spaces between the substrings indicate that the units\nare multiplied together. Some examples are as follows:\nYou can inspect the unit tests and documentation examples to see more usage of\nunit strings.\nUnit string format\nmultiplier prefix\nk\nM\nc\nunit\nUnitRegistry\nexponent\n^"
    },
    {
        "objectID": "getting_started/installation",
        "href": "getting_started/installation.html#installation",
        "title": "Installation",
        "section": "Installation",
        "text": "The ansys-units package supports Python 3.10 through Python 3.13 on Windows\nand Linux.\nInstallation\nansys-units"
    },
    {
        "objectID": "getting_started/installation",
        "href": "getting_started/installation.html#install-the-package",
        "title": "Installation > Install the package",
        "section": "Install the package",
        "text": "Install the latest release from PyPI\nwith this command:\nIf you plan on doing local development of PyAnsys Units with Git, install the latest\nrelease with these commands:\nInstall the package"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#variable-descriptor",
        "title": "Variable descriptor",
        "section": "Variable descriptor",
        "text": "Package initialization for ansys.units.variable_descriptor.\nExports the VariableCatalog catalog and core interfaces for working with\nphysical quantities in a product-agnostic way.\nBases: ABC\nAbstract base class for VariableDescriptor conversion strategies.\nThis class defines the interface for all conversion strategies. Derived classes\nmust implement the methods defined here to handle the conversion of VariableDescriptor\nobjects to and from their string representations, as well as to check if a\nVariableDescriptor is supported.\nCheck if the given VariableDescriptor is supported by the strategy.\nThe VariableDescriptor to check.\nTrue if the VariableDescriptor is supported, False otherwise.\nIf the method is not implemented in a derived class.\nConvert a VariableDescriptor to its string representation.\nThe VariableDescriptor to convert, or a string representation.\nThe string representation of the VariableDescriptor.\nIf the method is not implemented in a derived class.\nConvert a string to its corresponding VariableDescriptor.\nThe string representation to convert, or a VariableDescriptor.\nThe corresponding VariableDescriptor instance.\nIf the method is not implemented in a derived class.\nBases: ConversionStrategy\nIntermediate base class for implementing VariableDescriptor conversion strategies.\nThis class simplifies the creation of concrete strategy classes by providing\ndefault implementations for common methods. Classes inheriting from this base\nclass only need to define a _mapping dictionary that maps VariableDescriptor\ninstances to their corresponding string representations.\nGet the reverse mapping of _mapping.\nto_string(variable: VariableDescriptor | str) -> str\nConverts a VariableDescriptor to its string representation. Raises a ValueError if the variable is not supported.\nto_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\nConverts a string to its corresponding VariableDescriptor.\nsupports(variable: VariableDescriptor) -> bool\nChecks if the given VariableDescriptor is supported by the strategy.\nIf a VariableDescriptor is not supported during conversion to a string.\nCheck if the given VariableDescriptor is supported by the strategy.\nThe VariableDescriptor to check.\nTrue if the VariableDescriptor is supported, False otherwise.\nConvert a VariableDescriptor to its string representation.\nIf the input is already a string, it is returned as-is. If the input\nis a VariableDescriptor and is supported by the strategy, its string\nrepresentation is returned. Otherwise, a ValueError is raised.\nThe VariableDescriptor to convert, or a string representation.\nThe string representation of the VariableDescriptor.\nIf the VariableDescriptor is not supported by the strategy.\nConvert a string to its corresponding VariableDescriptor.\nIf the input is already a VariableDescriptor, it is returned as-is.\nOtherwise, the string is converted to a VariableDescriptor using the\nreverse mapping.\nThe string representation to convert, or a VariableDescriptor.\nThe corresponding VariableDescriptor instance, or None if the\nstring is not found in the reverse mapping.\nBases: object\nA catalog of variable descriptors.\nAdd a variable to the catalog.\nThe name of the variable (must be uppercase).\nThe dimension of the variable.\nThe optional subcategory for the variable.\nThe variable name is not uppercase or already exists.\nReturn all defined\nVariableDescriptor\nobjects, organized by subcategory.\nA dictionary where keys are subcategory names (or “main” for the top-level catalog)\nand values are lists of VariableDescriptor instances.\nBases: object\nDictionary of variable descriptors for fluent-related quantities.\nBases: object\nDictionary of variable descriptors for mesh-related quantities.\nBases: object\nDefines a physical quantity variable descriptor.\nVariable descriptor\nABC\nVariableDescriptor\nNotImplementedError\nVariableDescriptor\npython:str\npython:str\nNotImplementedError\nVariableDescriptor\npython:str\nVariableDescriptor\nNotImplementedError\nConversionStrategy\n_reverse_mapping\npython:dict\nValueError\nVariableDescriptor\nVariableDescriptor\npython:str\npython:str\nValueError\nVariableDescriptor\npython:str\nVariableDescriptor\nobject\npython:str\nDimensions\nValueError\nVariableDescriptor\npython:dict\npython:str\npython:list\nVariableDescriptor\nVariableDescriptor\nobject\nobject\nobject"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.ConversionStrategy",
        "title": "Variable descriptor > Variable descriptor > ConversionStrategy",
        "section": "Variable descriptor > ConversionStrategy",
        "text": "class ansys.units.variable_descriptor.ConversionStrategy\n\nBases: ABC\n\nAbstract base class for VariableDescriptor conversion strategies.\n\nThis class defines the interface for all conversion strategies. Derived classes\nmust implement the methods defined here to handle the conversion of VariableDescriptor\nobjects to and from their string representations, as well as to check if a\nVariableDescriptor is supported.\n\n!! processed by numpydoc !!\n\n\n\nabstract supports(variable: VariableDescriptor) -> bool\n\nCheck if the given VariableDescriptor is supported by the strategy.\n\nParameters\n\nvariable\n\nVariableDescriptor\n\nThe VariableDescriptor to check.\n\nReturns\n\nbool\n\nTrue if the VariableDescriptor is supported, False otherwise.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!\n\n\n\nabstract to_string(variable: VariableDescriptor | str | None) -> str | None\n\nConvert a VariableDescriptor to its string representation.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe VariableDescriptor to convert, or a string representation.\n\nReturns\n\npython:str\n\nThe string representation of the VariableDescriptor.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!\n\n\n\nabstract to_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConvert a string to its corresponding VariableDescriptor.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe string representation to convert, or a VariableDescriptor.\n\nReturns\n\nVariableDescriptor\n\nThe corresponding VariableDescriptor instance.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.ConversionStrategy.supports",
        "title": "Variable descriptor > Variable descriptor > supports",
        "section": "Variable descriptor > supports",
        "text": "abstract supports(variable: VariableDescriptor) -> bool\n\nCheck if the given VariableDescriptor is supported by the strategy.\n\nParameters\n\nvariable\n\nVariableDescriptor\n\nThe VariableDescriptor to check.\n\nReturns\n\nbool\n\nTrue if the VariableDescriptor is supported, False otherwise.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.ConversionStrategy.to_string",
        "title": "Variable descriptor > Variable descriptor > to_string",
        "section": "Variable descriptor > to_string",
        "text": "abstract to_string(variable: VariableDescriptor | str | None) -> str | None\n\nConvert a VariableDescriptor to its string representation.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe VariableDescriptor to convert, or a string representation.\n\nReturns\n\npython:str\n\nThe string representation of the VariableDescriptor.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.ConversionStrategy.to_variable_descriptor",
        "title": "Variable descriptor > Variable descriptor > to_variable_descriptor",
        "section": "Variable descriptor > to_variable_descriptor",
        "text": "abstract to_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConvert a string to its corresponding VariableDescriptor.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe string representation to convert, or a VariableDescriptor.\n\nReturns\n\nVariableDescriptor\n\nThe corresponding VariableDescriptor instance.\n\nRaises\n\nNotImplementedError\n\nIf the method is not implemented in a derived class.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.MappingConversionStrategy",
        "title": "Variable descriptor > Variable descriptor > MappingConversionStrategy",
        "section": "Variable descriptor > MappingConversionStrategy",
        "text": "class ansys.units.variable_descriptor.MappingConversionStrategy\n\nBases: ConversionStrategy\n\nIntermediate base class for implementing VariableDescriptor conversion strategies.\n\nThis class simplifies the creation of concrete strategy classes by providing\ndefault implementations for common methods. Classes inheriting from this base\nclass only need to define a _mapping dictionary that maps VariableDescriptor\ninstances to their corresponding string representations.\n\nAttributes\n\n_reverse_mapping\n\npython:dict\n\nGet the reverse mapping of _mapping.\n\nMethods\n\n\n\n\n\nto_string(variable: VariableDescriptor | str) -> str\n\nConverts a VariableDescriptor to its string representation. Raises a ValueError if the variable is not supported.\n\nto_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConverts a string to its corresponding VariableDescriptor.\n\nsupports(variable: VariableDescriptor) -> bool\n\nChecks if the given VariableDescriptor is supported by the strategy.\n\nRaises\n\nValueError\n\nIf a VariableDescriptor is not supported during conversion to a string.\n\n!! processed by numpydoc !!\n\n\n\nsupports(variable: VariableDescriptor) -> bool\n\nCheck if the given VariableDescriptor is supported by the strategy.\n\nParameters\n\nvariable\n\nVariableDescriptor\n\nThe VariableDescriptor to check.\n\nReturns\n\nbool\n\nTrue if the VariableDescriptor is supported, False otherwise.\n\n!! processed by numpydoc !!\n\n\n\nto_string(variable: VariableDescriptor | str | None) -> str | None\n\nConvert a VariableDescriptor to its string representation.\n\nIf the input is already a string, it is returned as-is. If the input\nis a VariableDescriptor and is supported by the strategy, its string\nrepresentation is returned. Otherwise, a ValueError is raised.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe VariableDescriptor to convert, or a string representation.\n\nReturns\n\npython:str\n\nThe string representation of the VariableDescriptor.\n\nRaises\n\nValueError\n\nIf the VariableDescriptor is not supported by the strategy.\n\n!! processed by numpydoc !!\n\n\n\nto_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConvert a string to its corresponding VariableDescriptor.\n\nIf the input is already a VariableDescriptor, it is returned as-is.\nOtherwise, the string is converted to a VariableDescriptor using the\nreverse mapping.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe string representation to convert, or a VariableDescriptor.\n\nReturns\n\nVariableDescriptor\n\nThe corresponding VariableDescriptor instance, or None if the\nstring is not found in the reverse mapping.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.MappingConversionStrategy.supports",
        "title": "Variable descriptor > Variable descriptor > supports",
        "section": "Variable descriptor > supports",
        "text": "supports(variable: VariableDescriptor) -> bool\n\nCheck if the given VariableDescriptor is supported by the strategy.\n\nParameters\n\nvariable\n\nVariableDescriptor\n\nThe VariableDescriptor to check.\n\nReturns\n\nbool\n\nTrue if the VariableDescriptor is supported, False otherwise.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.MappingConversionStrategy.to_string",
        "title": "Variable descriptor > Variable descriptor > to_string",
        "section": "Variable descriptor > to_string",
        "text": "to_string(variable: VariableDescriptor | str | None) -> str | None\n\nConvert a VariableDescriptor to its string representation.\n\nIf the input is already a string, it is returned as-is. If the input\nis a VariableDescriptor and is supported by the strategy, its string\nrepresentation is returned. Otherwise, a ValueError is raised.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe VariableDescriptor to convert, or a string representation.\n\nReturns\n\npython:str\n\nThe string representation of the VariableDescriptor.\n\nRaises\n\nValueError\n\nIf the VariableDescriptor is not supported by the strategy.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.MappingConversionStrategy.to_variable_descriptor",
        "title": "Variable descriptor > Variable descriptor > to_variable_descriptor",
        "section": "Variable descriptor > to_variable_descriptor",
        "text": "to_variable_descriptor(variable: VariableDescriptor | str) -> VariableDescriptor\n\nConvert a string to its corresponding VariableDescriptor.\n\nIf the input is already a VariableDescriptor, it is returned as-is.\nOtherwise, the string is converted to a VariableDescriptor using the\nreverse mapping.\n\nParameters\n\nvariable\n\nVariableDescriptor | python:str\n\nThe string representation to convert, or a VariableDescriptor.\n\nReturns\n\nVariableDescriptor\n\nThe corresponding VariableDescriptor instance, or None if the\nstring is not found in the reverse mapping.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog",
        "title": "Variable descriptor > Variable descriptor > VariableCatalog",
        "section": "Variable descriptor > VariableCatalog",
        "text": "class ansys.units.variable_descriptor.VariableCatalog\n\nBases: object\n\nA catalog of variable descriptors.\n\n!! processed by numpydoc !!\n\n\n\nABSOLUTE_PRESSURE = VariableDescriptor(name='absolute_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nABSORBANCE = VariableDescriptor(name='absorbance', dimension={})\n\n\n\n\n\nABSORBED_DOSE_RATE = VariableDescriptor(name='absorbed_dose_rate', dimension={'LENGTH': 2.0, 'TIME': -3.0})\n\n\n\n\n\nACCELERATION = VariableDescriptor(name='acceleration', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACCELERATION_MAGNITUDE = VariableDescriptor(name='acceleration_magnitude', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACCELERATION_X = VariableDescriptor(name='acceleration_x', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACCELERATION_Y = VariableDescriptor(name='acceleration_y', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACCELERATION_Z = VariableDescriptor(name='acceleration_z', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nACOUSTICAL_ABSORPTION = VariableDescriptor(name='acoustical_absorption', dimension={})\n\n\n\n\n\nACTION = VariableDescriptor(name='action', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGLE = VariableDescriptor(name='angle', dimension={'ANGLE': 1.0})\n\n\n\n\n\nANGULAR_ACCELERATION = VariableDescriptor(name='angular_acceleration', dimension={'TIME': -2.0})\n\n\n\n\n\nANGULAR_MOMENTUM = VariableDescriptor(name='angular_momentum', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_MOMENTUM_MAGNITUDE = VariableDescriptor(name='angular_momentum_magnitude', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_MOMENTUM_X = VariableDescriptor(name='angular_momentum_x', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_MOMENTUM_Y = VariableDescriptor(name='angular_momentum_y', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_MOMENTUM_Z = VariableDescriptor(name='angular_momentum_z', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nANGULAR_VELOCITY = VariableDescriptor(name='angular_velocity', dimension={'TIME': -1.0})\n\n\n\n\n\nAREA = VariableDescriptor(name='area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nAREA_DENSITY = VariableDescriptor(name='area_density', dimension={'MASS': 1.0, 'LENGTH': -2.0})\n\n\n\n\n\nATOMIC_MASS = VariableDescriptor(name='atomic_mass', dimension={'MASS': 1.0})\n\n\n\n\n\nATOMIC_NUMBER = VariableDescriptor(name='atomic_number', dimension={})\n\n\n\n\n\nATTENUATION_COEFFICIENT = VariableDescriptor(name='attenuation_coefficient', dimension={'LENGTH': -1.0})\n\n\n\n\n\nAXIAL_VELOCITY = VariableDescriptor(name='axial_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nBIREFRINGENCE = VariableDescriptor(name='birefringence', dimension={})\n\n\n\n\n\nBULK_MODULUS = VariableDescriptor(name='bulk_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nCAPACITANCE = VariableDescriptor(name='capacitance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n\n\n\n\nCATALYTIC_EFFICIENCY = VariableDescriptor(name='catalytic_efficiency', dimension={'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0, 'TIME': -1.0})\n\n\n\n\n\nCELL_REYNOLDS_NUMBER = VariableDescriptor(name='cell_reynolds_number', dimension={})\n\n\n\n\n\nCHEMICAL_AMOUNT = VariableDescriptor(name='chemical_amount', dimension={'CHEMICAL_AMOUNT': 1.0})\n\n\n\n\n\nCOEFFICIENT_OF_RESTITUTION = VariableDescriptor(name='coefficient_of_restitution', dimension={})\n\n\n\n\n\nCOLOR = VariableDescriptor(name='color', dimension={})\n\n\n\n\n\nCOMPRESSIBILITY = VariableDescriptor(name='compressibility', dimension={'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0})\n\n\n\n\n\nCOMPRESSIVE_STRENGTH = VariableDescriptor(name='compressive_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nCONVECTIVE_COURANT_NUMBER = VariableDescriptor(name='convective_courant_number', dimension={})\n\n\n\n\n\nCORROSION_RESISTANCE = VariableDescriptor(name='corrosion_resistance', dimension={})\n\n\n\n\n\nCREEP = VariableDescriptor(name='creep', dimension={'TIME': -1.0})\n\n\n\n\n\nCURIE_TEMPERATURE = VariableDescriptor(name='curie_temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nCURRENT = VariableDescriptor(name='current', dimension={'CURRENT': 1.0})\n\n\n\n\n\nDENSITY = VariableDescriptor(name='density', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n\n\n\n\nDIAMAGNETISM = VariableDescriptor(name='diamagnetism', dimension={})\n\n\n\n\n\nDIELECTRIC_CONSTANT = VariableDescriptor(name='dielectric_constant', dimension={})\n\n\n\n\n\nDIELECTRIC_STRENGTH = VariableDescriptor(name='dielectric_strength', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0, 'CURRENT': -1.0})\n\n\n\n\n\nDUCTILITY = VariableDescriptor(name='ductility', dimension={})\n\n\n\n\n\nDURABILITY = VariableDescriptor(name='durability', dimension={})\n\n\n\n\n\nDYNAMIC_PRESSURE = VariableDescriptor(name='dynamic_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nDYNAMIC_VISCOSITY = VariableDescriptor(name='dynamic_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nEFFECTIVE_PRANDTL_NUMBER = VariableDescriptor(name='effective_prandtl_number', dimension={})\n\n\n\n\n\nEFFECTIVE_THERMAL_CONDUCTIVITY = VariableDescriptor(name='effective_thermal_conductivity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nEFFECTIVE_VISCOSITY = VariableDescriptor(name='effective_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nELASTICITY = VariableDescriptor(name='elasticity', dimension={})\n\n\n\n\n\nELECTRICAL_CAPACITANCE = VariableDescriptor(name='electrical_capacitance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n\n\n\n\nELECTRICAL_CONDUCTANCE = VariableDescriptor(name='electrical_conductance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 2.0})\n\n\n\n\n\nELECTRICAL_CONDUCTIVITY = VariableDescriptor(name='electrical_conductivity', dimension={'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 3.0, 'CURRENT': 2.0})\n\n\n\n\n\nELECTRICAL_IMPEDANCE = VariableDescriptor(name='electrical_impedance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRICAL_INDUCTANCE = VariableDescriptor(name='electrical_inductance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRICAL_POTENTIAL = VariableDescriptor(name='electrical_potential', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0})\n\n\n\n\n\nELECTRICAL_REACTANCE = VariableDescriptor(name='electrical_reactance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRICAL_RESISTANCE = VariableDescriptor(name='electrical_resistance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRICAL_RESISTIVITY = VariableDescriptor(name='electrical_resistivity', dimension={'MASS': 1.0, 'LENGTH': 3.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nELECTRIC_CHARGE = VariableDescriptor(name='electric_charge', dimension={'TIME': 1.0, 'CURRENT': 1.0})\n\n\n\n\n\nELECTRIC_SUSCEPTIBILITY = VariableDescriptor(name='electric_susceptibility', dimension={})\n\n\n\n\n\nELECTROCALORIC_COEFFICIENT = VariableDescriptor(name='electrocaloric_coefficient', dimension={'TEMPERATURE': 1.0, 'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 1.0})\n\n\n\n\n\nELECTROSTRICTION = VariableDescriptor(name='electrostriction', dimension={})\n\n\n\n\n\nELECTRO_OPTIC_EFFECT = VariableDescriptor(name='electro_optic_effect', dimension={})\n\n\n\n\n\nEMISSIVITY = VariableDescriptor(name='emissivity', dimension={})\n\n\n\n\n\nENERGY = VariableDescriptor(name='energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nENERGY_DENSITY = VariableDescriptor(name='energy_density', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nENERGY_FLUX_DENSITY = VariableDescriptor(name='energy_flux_density', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nENTHALPY = VariableDescriptor(name='enthalpy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nENTROPY = VariableDescriptor(name='entropy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nFATIGUE_LIMIT = VariableDescriptor(name='fatigue_limit', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nFLEXURAL_MODULUS = VariableDescriptor(name='flexural_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nFLEXURAL_STRENGTH = VariableDescriptor(name='flexural_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE = VariableDescriptor(name='force', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE_MAGNITUDE = VariableDescriptor(name='force_magnitude', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE_X = VariableDescriptor(name='force_x', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE_Y = VariableDescriptor(name='force_y', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFORCE_Z = VariableDescriptor(name='force_z', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFRACTURE_TOUGHNESS = VariableDescriptor(name='fracture_toughness', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nFREQUENCY = VariableDescriptor(name='frequency', dimension={'TIME': -1.0})\n\n\n\n\n\nFREQUENCY_DRIFT = VariableDescriptor(name='frequency_drift', dimension={'TIME': -2.0})\n\n\n\n\n\nFRICTION_COEFFICIENT = VariableDescriptor(name='friction_coefficient', dimension={})\n\n\n\n\n\nFUEL_EFFICIENCY = VariableDescriptor(name='fuel_efficiency', dimension={'LENGTH': -2.0})\n\n\n\n\n\nHALF_LIFE = VariableDescriptor(name='half_life', dimension={'TIME': 1.0})\n\n\n\n\n\nHALL_COEFFICIENT = VariableDescriptor(name='hall_coefficient', dimension={'LENGTH': 3.0, 'CURRENT': -1.0, 'TIME': -1.0})\n\n\n\n\n\nHARDNESS = VariableDescriptor(name='hardness', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nHEAT_CAPACITY = VariableDescriptor(name='heat_capacity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nHEAT_FLUX_DENSITY = VariableDescriptor(name='heat_flux_density', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nHEAT_OF_VAPORIZATION = VariableDescriptor(name='heat_of_vaporization', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nHYGROSCOPY = VariableDescriptor(name='hygroscopy', dimension={})\n\n\n\n\n\nHYSTERESIS = VariableDescriptor(name='hysteresis', dimension={})\n\n\n\n\n\nILLUMINANCE = VariableDescriptor(name='illuminance', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0})\n\n\n\n\n\nINTERNAL_ENERGY = VariableDescriptor(name='internal_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nJERK = VariableDescriptor(name='jerk', dimension={'LENGTH': 1.0, 'TIME': -3.0})\n\n\n\n\n\nKINEMATIC_VISCOSITY = VariableDescriptor(name='kinematic_viscosity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n\n\n\n\nLENGTH = VariableDescriptor(name='length', dimension={'LENGTH': 1.0})\n\n\n\n\n\nLIGHT = VariableDescriptor(name='light', dimension={'LIGHT': 1.0})\n\n\n\n\n\nLINEAR_MASS_DENSITY = VariableDescriptor(name='linear_mass_density', dimension={'MASS': 1.0, 'LENGTH': -1.0})\n\n\n\n\n\nLUMINANCE = VariableDescriptor(name='luminance', dimension={'LIGHT': 1.0, 'LENGTH': -2.0})\n\n\n\n\n\nLUMINOSITY = VariableDescriptor(name='luminosity', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0})\n\n\n\n\n\nLUMINOUS_EXPOSURE = VariableDescriptor(name='luminous_exposure', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0, 'TIME': 1.0})\n\n\n\n\n\nLUMINOUS_FLUX = VariableDescriptor(name='luminous_flux', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0})\n\n\n\n\n\nMAGNETIC_FLUX = VariableDescriptor(name='magnetic_flux', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n\n\n\n\nMAGNETIC_INDUCTION = VariableDescriptor(name='magnetic_induction', dimension={'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n\n\n\n\nMAGNETIC_PERMEABILITY = VariableDescriptor(name='magnetic_permeability', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n\n\n\n\nMAGNETIC_VECTOR_POTENTIAL = VariableDescriptor(name='magnetic_vector_potential', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n\n\n\n\nMAGNETOCALORIC_COEFFICIENT = VariableDescriptor(name='magnetocaloric_coefficient', dimension={'TEMPERATURE': 1.0, 'MASS': -1.0, 'TIME': 2.0, 'CURRENT': 1.0})\n\n\n\n\n\nMAGNETOELECTRIC_POLARIZABILITY = VariableDescriptor(name='magnetoelectric_polarizability', dimension={'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nMAGNETORESISTANCE = VariableDescriptor(name='magnetoresistance', dimension={})\n\n\n\n\n\nMAGNETOSTRICTION = VariableDescriptor(name='magnetostriction', dimension={})\n\n\n\n\n\nMAGNETOTHERMOELECTRIC_POWER = VariableDescriptor(name='magnetothermoelectric_power', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nMALLEABILITY = VariableDescriptor(name='malleability', dimension={})\n\n\n\n\n\nMASS = VariableDescriptor(name='mass', dimension={'MASS': 1.0})\n\n\n\n\n\nMASS_CONTROL = VariableDescriptor(name='mass_control', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nMASS_DIFFUSIVITY = VariableDescriptor(name='mass_diffusivity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n\n\n\n\nMASS_FLOW_RATE = VariableDescriptor(name='mass_flow_rate', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMAXIMUM_ENERGY_PRODUCT = VariableDescriptor(name='maximum_energy_product', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nMELTING_POINT = VariableDescriptor(name='melting_point', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nMESH_VELOCITY = VariableDescriptor(name='mesh_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMESH_VELOCITY_MAGNITUDE = VariableDescriptor(name='mesh_velocity_magnitude', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMESH_VELOCITY_X = VariableDescriptor(name='mesh_velocity_x', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMESH_VELOCITY_Y = VariableDescriptor(name='mesh_velocity_y', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMESH_VELOCITY_Z = VariableDescriptor(name='mesh_velocity_z', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOLALITY = VariableDescriptor(name='molality', dimension={'CHEMICAL_AMOUNT': 1.0, 'MASS': -1.0})\n\n\n\n\n\nMOLARITY = VariableDescriptor(name='molarity', dimension={'CHEMICAL_AMOUNT': 1.0, 'LENGTH': -3.0})\n\n\n\n\n\nMOLAR_ENERGY = VariableDescriptor(name='molar_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOLAR_ENTROPY = VariableDescriptor(name='molar_entropy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOLAR_HEAT_CAPACITY = VariableDescriptor(name='molar_heat_capacity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOLAR_MASS = VariableDescriptor(name='molar_mass', dimension={'MASS': 1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOLAR_VOLUME = VariableDescriptor(name='molar_volume', dimension={'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0})\n\n\n\n\n\nMOMENTUM = VariableDescriptor(name='momentum', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENTUM_MAGNITUDE = VariableDescriptor(name='momentum_magnitude', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENTUM_X = VariableDescriptor(name='momentum_x', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENTUM_Y = VariableDescriptor(name='momentum_y', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENTUM_Z = VariableDescriptor(name='momentum_z', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nMOMENT_OF_INERTIA = VariableDescriptor(name='moment_of_inertia', dimension={'MASS': 1.0, 'LENGTH': 2.0})\n\n\n\n\n\nNERNST_COEFFICIENT = VariableDescriptor(name='nernst_coefficient', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nNEUTRON_CROSS_SECTION = VariableDescriptor(name='neutron_cross_section', dimension={'LENGTH': 2.0})\n\n\n\n\n\nNORMALIZED_Q_CRITERION = VariableDescriptor(name='normalized_q_criterion', dimension={})\n\n\n\n\n\nOPTICAL_ACTIVITY = VariableDescriptor(name='optical_activity', dimension={'LENGTH': 1.0, 'MASS': -1.0})\n\n\n\n\n\nPERMEABILITY = VariableDescriptor(name='permeability', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n\n\n\n\nPERMITTIVITY = VariableDescriptor(name='permittivity', dimension={'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n\n\n\n\nPH = VariableDescriptor(name='ph', dimension={})\n\n\n\n\n\nPHOTOELASTICITY = VariableDescriptor(name='photoelasticity', dimension={'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0})\n\n\n\n\n\nPHOTOSENSITIVITY = VariableDescriptor(name='photosensitivity', dimension={})\n\n\n\n\n\nPIEZOELECTRIC_CONSTANTS = VariableDescriptor(name='piezoelectric_constants', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'CURRENT': -1.0})\n\n\n\n\n\nPIEZOMAGNETISM = VariableDescriptor(name='piezomagnetism', dimension={'CURRENT': -1.0, 'LENGTH': 1.0})\n\n\n\n\n\nPLASTICITY = VariableDescriptor(name='plasticity', dimension={})\n\n\n\n\n\nPOISSON_RATIO = VariableDescriptor(name='poisson_ratio', dimension={})\n\n\n\n\n\nPOSITION = VariableDescriptor(name='position', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOSITION_MAGNITUDE = VariableDescriptor(name='position_magnitude', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOSITION_X = VariableDescriptor(name='position_x', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOSITION_Y = VariableDescriptor(name='position_y', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOSITION_Z = VariableDescriptor(name='position_z', dimension={'LENGTH': 1.0})\n\n\n\n\n\nPOWER = VariableDescriptor(name='power', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nPRANDTL_NUMBER = VariableDescriptor(name='prandtl_number', dimension={})\n\n\n\n\n\nPRESSURE = VariableDescriptor(name='pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nPRESSURE_COEFFICIENT = VariableDescriptor(name='pressure_coefficient', dimension={})\n\n\n\n\n\nPRODUCTION_OF_TURBULENT_KINETIC_ENERGY = VariableDescriptor(name='production_of_turbulent_kinetic_energy', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -3.0})\n\n\n\n\n\nPYROELECTRICITY = VariableDescriptor(name='pyroelectricity', dimension={'CURRENT': 1.0, 'LENGTH': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nPYROMAGNETIC_COEFFICIENT = VariableDescriptor(name='pyromagnetic_coefficient', dimension={'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nQ_CRITERION = VariableDescriptor(name='q_criterion', dimension={'TIME': -2.0})\n\n\n\n\n\nRADIAL_VELOCITY = VariableDescriptor(name='radial_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nRADIANCE = VariableDescriptor(name='radiance', dimension={'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n\n\n\n\nRADIANT_EXPOSURE = VariableDescriptor(name='radiant_exposure', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nRADIANT_INTENSITY = VariableDescriptor(name='radiant_intensity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n\n\n\n\nREACTIVITY = VariableDescriptor(name='reactivity', dimension={})\n\n\n\n\n\nREFLECTIVITY = VariableDescriptor(name='reflectivity', dimension={})\n\n\n\n\n\nREFRACTIVE_INDEX = VariableDescriptor(name='refractive_index', dimension={})\n\n\n\n\n\nRELATIVE_ATOMIC_MASS = VariableDescriptor(name='relative_atomic_mass', dimension={})\n\n\n\n\n\nRESILIENCE = VariableDescriptor(name='resilience', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSCATTERING = VariableDescriptor(name='scattering', dimension={})\n\n\n\n\n\nSEEBECK_COEFFICIENT = VariableDescriptor(name='seebeck_coefficient', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nSHEAR_MODULUS = VariableDescriptor(name='shear_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSHEAR_STRENGTH = VariableDescriptor(name='shear_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSKIN_FRICTION_COEFFICIENT = VariableDescriptor(name='skin_friction_coefficient', dimension={})\n\n\n\n\n\nSLIP = VariableDescriptor(name='slip', dimension={})\n\n\n\n\n\nSNAP = VariableDescriptor(name='snap', dimension={'LENGTH': 1.0, 'TIME': -4.0})\n\n\n\n\n\nSOLID_ANGLE = VariableDescriptor(name='solid_angle', dimension={'SOLID_ANGLE': 1.0})\n\n\n\n\n\nSOUND_REFLECTION = VariableDescriptor(name='sound_reflection', dimension={})\n\n\n\n\n\nSOUND_TRANSFER = VariableDescriptor(name='sound_transfer', dimension={})\n\n\n\n\n\nSPECIFIC_ACTIVITY = VariableDescriptor(name='specific_activity', dimension={'MASS': -1.0, 'TIME': -1.0})\n\n\n\n\n\nSPECIFIC_ANGULAR_MOMENTUM = VariableDescriptor(name='specific_angular_momentum', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n\n\n\n\nSPECIFIC_DISSIPATION_RATE = VariableDescriptor(name='specific_dissipation_rate', dimension={'TIME': -1.0})\n\n\n\n\n\nSPECIFIC_ENERGY = VariableDescriptor(name='specific_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_ENTHALPY = VariableDescriptor(name='specific_enthalpy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_ENTROPY = VariableDescriptor(name='specific_entropy', dimension={'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nSPECIFIC_HEAT_CAPACITY = VariableDescriptor(name='specific_heat_capacity', dimension={'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nSPECIFIC_INTERNAL_ENERGY = VariableDescriptor(name='specific_internal_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_INTERNAL_SURFACE_AREA = VariableDescriptor(name='specific_internal_surface_area', dimension={'LENGTH': -1.0})\n\n\n\n\n\nSPECIFIC_MODULUS = VariableDescriptor(name='specific_modulus', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_STRENGTH = VariableDescriptor(name='specific_strength', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_TOTAL_ENERGY = VariableDescriptor(name='specific_total_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_TOTAL_ENTHALPY = VariableDescriptor(name='specific_total_enthalpy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECIFIC_VOLUME = VariableDescriptor(name='specific_volume', dimension={'LENGTH': 3.0, 'MASS': -1.0})\n\n\n\n\n\nSPECIFIC_WEIGHT = VariableDescriptor(name='specific_weight', dimension={'MASS': 1.0, 'LENGTH': -2.0, 'TIME': -2.0})\n\n\n\n\n\nSPECTRAL_INTENSITY = VariableDescriptor(name='spectral_intensity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n\n\n\n\nSPECTRAL_IRRADIANCE = VariableDescriptor(name='spectral_irradiance', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nSPECTRAL_POWER = VariableDescriptor(name='spectral_power', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nSPEED_OF_SOUND = VariableDescriptor(name='speed_of_sound', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nSPIN_HALL_EFFECT = VariableDescriptor(name='spin_hall_effect', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n\n\n\n\nSTANDARD_ATOMIC_WEIGHT = VariableDescriptor(name='standard_atomic_weight', dimension={})\n\n\n\n\n\nSTATIC_PRESSURE = VariableDescriptor(name='static_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSTRAIN_RATE = VariableDescriptor(name='strain_rate', dimension={'TIME': -1.0})\n\n\n\n\n\nSTRESS = VariableDescriptor(name='stress', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nSURFACE_ENERGY = VariableDescriptor(name='surface_energy', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nSURFACE_HEAT_FLUX = VariableDescriptor(name='surface_heat_flux', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n\n\n\n\nSURFACE_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='surface_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nSURFACE_NUSSELT_NUMBER = VariableDescriptor(name='surface_nusselt_number', dimension={})\n\n\n\n\n\nSURFACE_ROUGHNESS = VariableDescriptor(name='surface_roughness', dimension={'LENGTH': 1.0})\n\n\n\n\n\nSURFACE_STANTON_NUMBER = VariableDescriptor(name='surface_stanton_number', dimension={})\n\n\n\n\n\nSURFACE_TENSION = VariableDescriptor(name='surface_tension', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTANGENTIAL_VELOCITY = VariableDescriptor(name='tangential_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nTEMPERATURE = VariableDescriptor(name='temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nTEMPERATURE_DIFFERENCE = VariableDescriptor(name='temperature_difference', dimension={'TEMPERATURE_DIFFERENCE': 1.0})\n\n\n\n\n\nTEMPERATURE_GRADIENT = VariableDescriptor(name='temperature_gradient', dimension={'TEMPERATURE': 1.0, 'LENGTH': -1.0})\n\n\n\n\n\nTENSILE_STRENGTH = VariableDescriptor(name='tensile_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nTHERMAL_CONDUCTIVITY = VariableDescriptor(name='thermal_conductivity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nTHERMAL_DIFFUSIVITY = VariableDescriptor(name='thermal_diffusivity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n\n\n\n\nTHERMAL_EXPANSION_COEFFICIENT = VariableDescriptor(name='thermal_expansion_coefficient', dimension={'TEMPERATURE': -1.0})\n\n\n\n\n\nTHERMAL_RESISTANCE = VariableDescriptor(name='thermal_resistance', dimension={'TEMPERATURE': 1.0, 'LENGTH': -2.0, 'MASS': -1.0, 'TIME': 3.0})\n\n\n\n\n\nTHIRD_ORDER_ELASTICITY = VariableDescriptor(name='third_order_elasticity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nTIME = VariableDescriptor(name='time', dimension={'TIME': 1.0})\n\n\n\n\n\nTORQUE = VariableDescriptor(name='torque', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTORQUE_MAGNITUDE = VariableDescriptor(name='torque_magnitude', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTORQUE_X = VariableDescriptor(name='torque_x', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTORQUE_Y = VariableDescriptor(name='torque_y', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTORQUE_Z = VariableDescriptor(name='torque_z', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTOTAL_ENERGY = VariableDescriptor(name='total_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTOTAL_PRESSURE = VariableDescriptor(name='total_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nTOTAL_TEMPERATURE = VariableDescriptor(name='total_temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nTOUGHNESS = VariableDescriptor(name='toughness', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n\n\n\n\nTRANSMITTANCE = VariableDescriptor(name='transmittance', dimension={})\n\n\n\n\n\nTURBULENT_DISSIPATION_RATE = VariableDescriptor(name='turbulent_dissipation_rate', dimension={'LENGTH': 2.0, 'TIME': 3.0})\n\n\n\n\n\nTURBULENT_INTENSITY = VariableDescriptor(name='turbulent_intensity', dimension={})\n\n\n\n\n\nTURBULENT_KINETIC_ENERGY = VariableDescriptor(name='turbulent_kinetic_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nTURBULENT_REYNOLDS_NUMBER = VariableDescriptor(name='turbulent_reynolds_number', dimension={})\n\n\n\n\n\nTURBULENT_VISCOSITY = VariableDescriptor(name='turbulent_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nTURBULENT_VISCOSITY_RATIO = VariableDescriptor(name='turbulent_viscosity_ratio', dimension={})\n\n\n\n\n\nVAPOR_PRESSURE = VariableDescriptor(name='vapor_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nVELOCITY = VariableDescriptor(name='velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVELOCITY_MAGNITUDE = VariableDescriptor(name='velocity_magnitude', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVELOCITY_X = VariableDescriptor(name='velocity_x', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVELOCITY_Y = VariableDescriptor(name='velocity_y', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVELOCITY_Z = VariableDescriptor(name='velocity_z', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n\n\n\n\nVISCOSITY = VariableDescriptor(name='viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n\n\n\n\nVOLUME = VariableDescriptor(name='volume', dimension={'LENGTH': 3.0})\n\n\n\n\n\nVOLUMETRIC_FLOW = VariableDescriptor(name='volumetric_flow', dimension={'LENGTH': 3.0, 'TIME': -1.0})\n\n\n\n\n\nVORTICITY = VariableDescriptor(name='vorticity', dimension={'TIME': -1.0})\n\n\n\n\n\nVORTICITY_MAGNITUDE = VariableDescriptor(name='vorticity_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nVORTICITY_X = VariableDescriptor(name='vorticity_x', dimension={'TIME': -1.0})\n\n\n\n\n\nVORTICITY_Y = VariableDescriptor(name='vorticity_y', dimension={'TIME': -1.0})\n\n\n\n\n\nVORTICITY_Z = VariableDescriptor(name='vorticity_z', dimension={'TIME': -1.0})\n\n\n\n\n\nWALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='wall_adjacent_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nWALL_ADJACENT_TEMPERATURE = VariableDescriptor(name='wall_adjacent_temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nWALL_SHEAR_STRESS = VariableDescriptor(name='wall_shear_stress', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_SHEAR_STRESS_MAGNITUDE = VariableDescriptor(name='wall_shear_stress_magnitude', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_SHEAR_STRESS_X = VariableDescriptor(name='wall_shear_stress_x', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_SHEAR_STRESS_Y = VariableDescriptor(name='wall_shear_stress_y', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_SHEAR_STRESS_Z = VariableDescriptor(name='wall_shear_stress_z', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nWALL_TEMPERATURE = VariableDescriptor(name='wall_temperature', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nWALL_TEMPERATURE_THIN = VariableDescriptor(name='wall_temperature_thin', dimension={'TEMPERATURE': 1.0})\n\n\n\n\n\nWALL_Y_PLUS = VariableDescriptor(name='wall_y_plus', dimension={})\n\n\n\n\n\nWALL_Y_STAR = VariableDescriptor(name='wall_y_star', dimension={})\n\n\n\n\n\nWAVENUMBER = VariableDescriptor(name='wavenumber', dimension={'LENGTH': -1.0})\n\n\n\n\n\nYANK = VariableDescriptor(name='yank', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0})\n\n\n\n\n\nYIELD_STRENGTH = VariableDescriptor(name='yield_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nYOUNG_MODULUS = VariableDescriptor(name='young_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n\n\n\n\nclassmethod add(variable: str, dimension: Dimensions, subcategory: str | None = None) -> None\n\nAdd a variable to the catalog.\n\nParameters\n\nvariable\n\npython:str\n\nThe name of the variable (must be uppercase).\n\ndimension\n\nDimensions\n\nThe dimension of the variable.\n\nsubcategory: str|None\n\nThe optional subcategory for the variable.\n\nRaises\n\nValueError\n\nThe variable name is not uppercase or already exists.\n\n!! processed by numpydoc !!\n\n\n\nclassmethod all() -> dict[str, list[VariableDescriptor]]\n\nReturn all defined\nVariableDescriptor\nobjects, organized by subcategory.\n\nReturns\n\npython:dict[python:str, python:list[VariableDescriptor]]\n\nA dictionary where keys are subcategory names (or “main” for the top-level catalog)\nand values are lists of VariableDescriptor instances.\n\n!! processed by numpydoc !!\n\n\n\nclass fluent\n\nBases: object\n\nDictionary of variable descriptors for fluent-related quantities.\n\n!! processed by numpydoc !!\n\n\n\nDENSITY_ALL = VariableDescriptor(name='density_all', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n\n\n\n\nDVELOCITY_DX = VariableDescriptor(name='dvelocity_dx', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_MAGNITUDE = VariableDescriptor(name='dvelocity_dx_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_X = VariableDescriptor(name='dvelocity_dx_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_Y = VariableDescriptor(name='dvelocity_dx_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_Z = VariableDescriptor(name='dvelocity_dx_z', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY = VariableDescriptor(name='dvelocity_dy', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_MAGNITUDE = VariableDescriptor(name='dvelocity_dy_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_X = VariableDescriptor(name='dvelocity_dy_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_Y = VariableDescriptor(name='dvelocity_dy_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_Z = VariableDescriptor(name='dvelocity_dy_z', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ = VariableDescriptor(name='dvelocity_dz', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_MAGNITUDE = VariableDescriptor(name='dvelocity_dz_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_X = VariableDescriptor(name='dvelocity_dz_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_Y = VariableDescriptor(name='dvelocity_dz_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_Z = VariableDescriptor(name='dvelocity_dz_z', dimension={'TIME': -1.0})\n\n\n\n\n\nHELICITY = VariableDescriptor(name='helicity', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nLAMBDA_2_CRITERION = VariableDescriptor(name='lambda_2_criterion', dimension={'TIME': -2.0})\n\n\n\n\n\nMASS_IMBALANCE = VariableDescriptor(name='mass_imbalance', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nPRESSURE_HESSIAN_INDICATOR = VariableDescriptor(name='pressure_hessian_indicator', dimension={})\n\n\n\n\n\nTOTAL_ENTHALPY_DEVIATION = VariableDescriptor(name='total_enthalpy_deviation', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nVELOCITY_ANGLE = VariableDescriptor(name='velocity_angle', dimension={'ANGLE': 1.0})\n\n\n\n\n\nY_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='y_plus_based_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n\n\n\n\nclass mesh\n\nBases: object\n\nDictionary of variable descriptors for mesh-related quantities.\n\n!! processed by numpydoc !!\n\n\n\nACTIVE_CELL_PARTITION = VariableDescriptor(name='active_cell_partition', dimension={})\n\n\n\n\n\nANISOTROPIC_ADAPTION_CELLS = VariableDescriptor(name='anisotropic_adaption_cells', dimension={})\n\n\n\n\n\nBOUNDARY_CELL_DISTANCE = VariableDescriptor(name='boundary_cell_distance', dimension={})\n\n\n\n\n\nBOUNDARY_LAYER_CELLS = VariableDescriptor(name='boundary_layer_cells', dimension={})\n\n\n\n\n\nBOUNDARY_NORMAL_DISTANCE = VariableDescriptor(name='boundary_normal_distance', dimension={})\n\n\n\n\n\nBOUNDARY_VOLUME_DISTANCE = VariableDescriptor(name='boundary_volume_distance', dimension={})\n\n\n\n\n\nCELL_ELEMENT_TYPE = VariableDescriptor(name='cell_element_type', dimension={})\n\n\n\n\n\nCELL_EQUIANGLE_SKEW = VariableDescriptor(name='cell_equiangle_skew', dimension={})\n\n\n\n\n\nCELL_EQUIVOLUME_SKEW = VariableDescriptor(name='cell_equivolume_skew', dimension={})\n\n\n\n\n\nCELL_ID = VariableDescriptor(name='cell_id', dimension={})\n\n\n\n\n\nCELL_PARENT_INDEX = VariableDescriptor(name='cell_parent_index', dimension={})\n\n\n\n\n\nCELL_REFINE_LEVEL = VariableDescriptor(name='cell_refine_level', dimension={})\n\n\n\n\n\nCELL_VOLUME = VariableDescriptor(name='cell_volume', dimension={'LENGTH': 3.0})\n\n\n\n\n\nCELL_VOLUME_CHANGE = VariableDescriptor(name='cell_volume_change', dimension={})\n\n\n\n\n\nCELL_WEIGHT = VariableDescriptor(name='cell_weight', dimension={})\n\n\n\n\n\nCELL_ZONE_INDEX = VariableDescriptor(name='cell_zone_index', dimension={})\n\n\n\n\n\nCELL_ZONE_TYPE = VariableDescriptor(name='cell_zone_type', dimension={})\n\n\n\n\n\nELEMENT_ASPECT_RATIO = VariableDescriptor(name='element_aspect_ratio', dimension={})\n\n\n\n\n\nELEMENT_WALL_DISTANCE = VariableDescriptor(name='element_wall_distance', dimension={'LENGTH': 1.0})\n\n\n\n\n\nFACE_AREA_MAGNITUDE = VariableDescriptor(name='face_area_magnitude', dimension={'LENGTH': 2.0})\n\n\n\n\n\nFACE_HANDEDNESS = VariableDescriptor(name='face_handedness', dimension={})\n\n\n\n\n\nINTERFACE_OVERLAP_FRACTION = VariableDescriptor(name='interface_overlap_fraction', dimension={})\n\n\n\n\n\nMARK_POOR_ELEMENTS = VariableDescriptor(name='mark_poor_elements', dimension={})\n\n\n\n\n\nPARTITION_NEIGHBOURS = VariableDescriptor(name='partition_neighbours', dimension={})\n\n\n\n\n\nSMOOTHED_CELL_REFINE_LEVEL = VariableDescriptor(name='smoothed_cell_refine_level', dimension={})\n\n\n\n\n\nSTORED_CELL_PARTITIION = VariableDescriptor(name='stored_cell_partitiion', dimension={})\n\n\n\n\n\nX_FACE_AREA = VariableDescriptor(name='x_face_area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nY_FACE_AREA = VariableDescriptor(name='y_face_area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nZ_FACE_AREA = VariableDescriptor(name='z_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ABSOLUTE_PRESSURE",
        "title": "Variable descriptor > Variable descriptor > ABSOLUTE_PRESSURE",
        "section": "Variable descriptor > ABSOLUTE_PRESSURE",
        "text": "ABSOLUTE_PRESSURE = VariableDescriptor(name='absolute_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ABSORBANCE",
        "title": "Variable descriptor > Variable descriptor > ABSORBANCE",
        "section": "Variable descriptor > ABSORBANCE",
        "text": "ABSORBANCE = VariableDescriptor(name='absorbance', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ABSORBED_DOSE_RATE",
        "title": "Variable descriptor > Variable descriptor > ABSORBED_DOSE_RATE",
        "section": "Variable descriptor > ABSORBED_DOSE_RATE",
        "text": "ABSORBED_DOSE_RATE = VariableDescriptor(name='absorbed_dose_rate', dimension={'LENGTH': 2.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ACCELERATION",
        "title": "Variable descriptor > Variable descriptor > ACCELERATION",
        "section": "Variable descriptor > ACCELERATION",
        "text": "ACCELERATION = VariableDescriptor(name='acceleration', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ACCELERATION_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > ACCELERATION_MAGNITUDE",
        "section": "Variable descriptor > ACCELERATION_MAGNITUDE",
        "text": "ACCELERATION_MAGNITUDE = VariableDescriptor(name='acceleration_magnitude', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ACCELERATION_X",
        "title": "Variable descriptor > Variable descriptor > ACCELERATION_X",
        "section": "Variable descriptor > ACCELERATION_X",
        "text": "ACCELERATION_X = VariableDescriptor(name='acceleration_x', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ACCELERATION_Y",
        "title": "Variable descriptor > Variable descriptor > ACCELERATION_Y",
        "section": "Variable descriptor > ACCELERATION_Y",
        "text": "ACCELERATION_Y = VariableDescriptor(name='acceleration_y', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ACCELERATION_Z",
        "title": "Variable descriptor > Variable descriptor > ACCELERATION_Z",
        "section": "Variable descriptor > ACCELERATION_Z",
        "text": "ACCELERATION_Z = VariableDescriptor(name='acceleration_z', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ACOUSTICAL_ABSORPTION",
        "title": "Variable descriptor > Variable descriptor > ACOUSTICAL_ABSORPTION",
        "section": "Variable descriptor > ACOUSTICAL_ABSORPTION",
        "text": "ACOUSTICAL_ABSORPTION = VariableDescriptor(name='acoustical_absorption', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ACTION",
        "title": "Variable descriptor > Variable descriptor > ACTION",
        "section": "Variable descriptor > ACTION",
        "text": "ACTION = VariableDescriptor(name='action', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ANGLE",
        "title": "Variable descriptor > Variable descriptor > ANGLE",
        "section": "Variable descriptor > ANGLE",
        "text": "ANGLE = VariableDescriptor(name='angle', dimension={'ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ANGULAR_ACCELERATION",
        "title": "Variable descriptor > Variable descriptor > ANGULAR_ACCELERATION",
        "section": "Variable descriptor > ANGULAR_ACCELERATION",
        "text": "ANGULAR_ACCELERATION = VariableDescriptor(name='angular_acceleration', dimension={'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM",
        "title": "Variable descriptor > Variable descriptor > ANGULAR_MOMENTUM",
        "section": "Variable descriptor > ANGULAR_MOMENTUM",
        "text": "ANGULAR_MOMENTUM = VariableDescriptor(name='angular_momentum', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > ANGULAR_MOMENTUM_MAGNITUDE",
        "section": "Variable descriptor > ANGULAR_MOMENTUM_MAGNITUDE",
        "text": "ANGULAR_MOMENTUM_MAGNITUDE = VariableDescriptor(name='angular_momentum_magnitude', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM_X",
        "title": "Variable descriptor > Variable descriptor > ANGULAR_MOMENTUM_X",
        "section": "Variable descriptor > ANGULAR_MOMENTUM_X",
        "text": "ANGULAR_MOMENTUM_X = VariableDescriptor(name='angular_momentum_x', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM_Y",
        "title": "Variable descriptor > Variable descriptor > ANGULAR_MOMENTUM_Y",
        "section": "Variable descriptor > ANGULAR_MOMENTUM_Y",
        "text": "ANGULAR_MOMENTUM_Y = VariableDescriptor(name='angular_momentum_y', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ANGULAR_MOMENTUM_Z",
        "title": "Variable descriptor > Variable descriptor > ANGULAR_MOMENTUM_Z",
        "section": "Variable descriptor > ANGULAR_MOMENTUM_Z",
        "text": "ANGULAR_MOMENTUM_Z = VariableDescriptor(name='angular_momentum_z', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ANGULAR_VELOCITY",
        "title": "Variable descriptor > Variable descriptor > ANGULAR_VELOCITY",
        "section": "Variable descriptor > ANGULAR_VELOCITY",
        "text": "ANGULAR_VELOCITY = VariableDescriptor(name='angular_velocity', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.AREA",
        "title": "Variable descriptor > Variable descriptor > AREA",
        "section": "Variable descriptor > AREA",
        "text": "AREA = VariableDescriptor(name='area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.AREA_DENSITY",
        "title": "Variable descriptor > Variable descriptor > AREA_DENSITY",
        "section": "Variable descriptor > AREA_DENSITY",
        "text": "AREA_DENSITY = VariableDescriptor(name='area_density', dimension={'MASS': 1.0, 'LENGTH': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ATOMIC_MASS",
        "title": "Variable descriptor > Variable descriptor > ATOMIC_MASS",
        "section": "Variable descriptor > ATOMIC_MASS",
        "text": "ATOMIC_MASS = VariableDescriptor(name='atomic_mass', dimension={'MASS': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ATOMIC_NUMBER",
        "title": "Variable descriptor > Variable descriptor > ATOMIC_NUMBER",
        "section": "Variable descriptor > ATOMIC_NUMBER",
        "text": "ATOMIC_NUMBER = VariableDescriptor(name='atomic_number', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ATTENUATION_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > ATTENUATION_COEFFICIENT",
        "section": "Variable descriptor > ATTENUATION_COEFFICIENT",
        "text": "ATTENUATION_COEFFICIENT = VariableDescriptor(name='attenuation_coefficient', dimension={'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.AXIAL_VELOCITY",
        "title": "Variable descriptor > Variable descriptor > AXIAL_VELOCITY",
        "section": "Variable descriptor > AXIAL_VELOCITY",
        "text": "AXIAL_VELOCITY = VariableDescriptor(name='axial_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.BIREFRINGENCE",
        "title": "Variable descriptor > Variable descriptor > BIREFRINGENCE",
        "section": "Variable descriptor > BIREFRINGENCE",
        "text": "BIREFRINGENCE = VariableDescriptor(name='birefringence', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.BULK_MODULUS",
        "title": "Variable descriptor > Variable descriptor > BULK_MODULUS",
        "section": "Variable descriptor > BULK_MODULUS",
        "text": "BULK_MODULUS = VariableDescriptor(name='bulk_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CAPACITANCE",
        "title": "Variable descriptor > Variable descriptor > CAPACITANCE",
        "section": "Variable descriptor > CAPACITANCE",
        "text": "CAPACITANCE = VariableDescriptor(name='capacitance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CATALYTIC_EFFICIENCY",
        "title": "Variable descriptor > Variable descriptor > CATALYTIC_EFFICIENCY",
        "section": "Variable descriptor > CATALYTIC_EFFICIENCY",
        "text": "CATALYTIC_EFFICIENCY = VariableDescriptor(name='catalytic_efficiency', dimension={'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CELL_REYNOLDS_NUMBER",
        "title": "Variable descriptor > Variable descriptor > CELL_REYNOLDS_NUMBER",
        "section": "Variable descriptor > CELL_REYNOLDS_NUMBER",
        "text": "CELL_REYNOLDS_NUMBER = VariableDescriptor(name='cell_reynolds_number', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CHEMICAL_AMOUNT",
        "title": "Variable descriptor > Variable descriptor > CHEMICAL_AMOUNT",
        "section": "Variable descriptor > CHEMICAL_AMOUNT",
        "text": "CHEMICAL_AMOUNT = VariableDescriptor(name='chemical_amount', dimension={'CHEMICAL_AMOUNT': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.COEFFICIENT_OF_RESTITUTION",
        "title": "Variable descriptor > Variable descriptor > COEFFICIENT_OF_RESTITUTION",
        "section": "Variable descriptor > COEFFICIENT_OF_RESTITUTION",
        "text": "COEFFICIENT_OF_RESTITUTION = VariableDescriptor(name='coefficient_of_restitution', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.COLOR",
        "title": "Variable descriptor > Variable descriptor > COLOR",
        "section": "Variable descriptor > COLOR",
        "text": "COLOR = VariableDescriptor(name='color', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.COMPRESSIBILITY",
        "title": "Variable descriptor > Variable descriptor > COMPRESSIBILITY",
        "section": "Variable descriptor > COMPRESSIBILITY",
        "text": "COMPRESSIBILITY = VariableDescriptor(name='compressibility', dimension={'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.COMPRESSIVE_STRENGTH",
        "title": "Variable descriptor > Variable descriptor > COMPRESSIVE_STRENGTH",
        "section": "Variable descriptor > COMPRESSIVE_STRENGTH",
        "text": "COMPRESSIVE_STRENGTH = VariableDescriptor(name='compressive_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CONVECTIVE_COURANT_NUMBER",
        "title": "Variable descriptor > Variable descriptor > CONVECTIVE_COURANT_NUMBER",
        "section": "Variable descriptor > CONVECTIVE_COURANT_NUMBER",
        "text": "CONVECTIVE_COURANT_NUMBER = VariableDescriptor(name='convective_courant_number', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CORROSION_RESISTANCE",
        "title": "Variable descriptor > Variable descriptor > CORROSION_RESISTANCE",
        "section": "Variable descriptor > CORROSION_RESISTANCE",
        "text": "CORROSION_RESISTANCE = VariableDescriptor(name='corrosion_resistance', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CREEP",
        "title": "Variable descriptor > Variable descriptor > CREEP",
        "section": "Variable descriptor > CREEP",
        "text": "CREEP = VariableDescriptor(name='creep', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CURIE_TEMPERATURE",
        "title": "Variable descriptor > Variable descriptor > CURIE_TEMPERATURE",
        "section": "Variable descriptor > CURIE_TEMPERATURE",
        "text": "CURIE_TEMPERATURE = VariableDescriptor(name='curie_temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.CURRENT",
        "title": "Variable descriptor > Variable descriptor > CURRENT",
        "section": "Variable descriptor > CURRENT",
        "text": "CURRENT = VariableDescriptor(name='current', dimension={'CURRENT': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.DENSITY",
        "title": "Variable descriptor > Variable descriptor > DENSITY",
        "section": "Variable descriptor > DENSITY",
        "text": "DENSITY = VariableDescriptor(name='density', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.DIAMAGNETISM",
        "title": "Variable descriptor > Variable descriptor > DIAMAGNETISM",
        "section": "Variable descriptor > DIAMAGNETISM",
        "text": "DIAMAGNETISM = VariableDescriptor(name='diamagnetism', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.DIELECTRIC_CONSTANT",
        "title": "Variable descriptor > Variable descriptor > DIELECTRIC_CONSTANT",
        "section": "Variable descriptor > DIELECTRIC_CONSTANT",
        "text": "DIELECTRIC_CONSTANT = VariableDescriptor(name='dielectric_constant', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.DIELECTRIC_STRENGTH",
        "title": "Variable descriptor > Variable descriptor > DIELECTRIC_STRENGTH",
        "section": "Variable descriptor > DIELECTRIC_STRENGTH",
        "text": "DIELECTRIC_STRENGTH = VariableDescriptor(name='dielectric_strength', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.DUCTILITY",
        "title": "Variable descriptor > Variable descriptor > DUCTILITY",
        "section": "Variable descriptor > DUCTILITY",
        "text": "DUCTILITY = VariableDescriptor(name='ductility', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.DURABILITY",
        "title": "Variable descriptor > Variable descriptor > DURABILITY",
        "section": "Variable descriptor > DURABILITY",
        "text": "DURABILITY = VariableDescriptor(name='durability', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.DYNAMIC_PRESSURE",
        "title": "Variable descriptor > Variable descriptor > DYNAMIC_PRESSURE",
        "section": "Variable descriptor > DYNAMIC_PRESSURE",
        "text": "DYNAMIC_PRESSURE = VariableDescriptor(name='dynamic_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.DYNAMIC_VISCOSITY",
        "title": "Variable descriptor > Variable descriptor > DYNAMIC_VISCOSITY",
        "section": "Variable descriptor > DYNAMIC_VISCOSITY",
        "text": "DYNAMIC_VISCOSITY = VariableDescriptor(name='dynamic_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.EFFECTIVE_PRANDTL_NUMBER",
        "title": "Variable descriptor > Variable descriptor > EFFECTIVE_PRANDTL_NUMBER",
        "section": "Variable descriptor > EFFECTIVE_PRANDTL_NUMBER",
        "text": "EFFECTIVE_PRANDTL_NUMBER = VariableDescriptor(name='effective_prandtl_number', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.EFFECTIVE_THERMAL_CONDUCTIVITY",
        "title": "Variable descriptor > Variable descriptor > EFFECTIVE_THERMAL_CONDUCTIVITY",
        "section": "Variable descriptor > EFFECTIVE_THERMAL_CONDUCTIVITY",
        "text": "EFFECTIVE_THERMAL_CONDUCTIVITY = VariableDescriptor(name='effective_thermal_conductivity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.EFFECTIVE_VISCOSITY",
        "title": "Variable descriptor > Variable descriptor > EFFECTIVE_VISCOSITY",
        "section": "Variable descriptor > EFFECTIVE_VISCOSITY",
        "text": "EFFECTIVE_VISCOSITY = VariableDescriptor(name='effective_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELASTICITY",
        "title": "Variable descriptor > Variable descriptor > ELASTICITY",
        "section": "Variable descriptor > ELASTICITY",
        "text": "ELASTICITY = VariableDescriptor(name='elasticity', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_CAPACITANCE",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_CAPACITANCE",
        "section": "Variable descriptor > ELECTRICAL_CAPACITANCE",
        "text": "ELECTRICAL_CAPACITANCE = VariableDescriptor(name='electrical_capacitance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_CONDUCTANCE",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_CONDUCTANCE",
        "section": "Variable descriptor > ELECTRICAL_CONDUCTANCE",
        "text": "ELECTRICAL_CONDUCTANCE = VariableDescriptor(name='electrical_conductance', dimension={'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_CONDUCTIVITY",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_CONDUCTIVITY",
        "section": "Variable descriptor > ELECTRICAL_CONDUCTIVITY",
        "text": "ELECTRICAL_CONDUCTIVITY = VariableDescriptor(name='electrical_conductivity', dimension={'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 3.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_IMPEDANCE",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_IMPEDANCE",
        "section": "Variable descriptor > ELECTRICAL_IMPEDANCE",
        "text": "ELECTRICAL_IMPEDANCE = VariableDescriptor(name='electrical_impedance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_INDUCTANCE",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_INDUCTANCE",
        "section": "Variable descriptor > ELECTRICAL_INDUCTANCE",
        "text": "ELECTRICAL_INDUCTANCE = VariableDescriptor(name='electrical_inductance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_POTENTIAL",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_POTENTIAL",
        "section": "Variable descriptor > ELECTRICAL_POTENTIAL",
        "text": "ELECTRICAL_POTENTIAL = VariableDescriptor(name='electrical_potential', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_REACTANCE",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_REACTANCE",
        "section": "Variable descriptor > ELECTRICAL_REACTANCE",
        "text": "ELECTRICAL_REACTANCE = VariableDescriptor(name='electrical_reactance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_RESISTANCE",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_RESISTANCE",
        "section": "Variable descriptor > ELECTRICAL_RESISTANCE",
        "text": "ELECTRICAL_RESISTANCE = VariableDescriptor(name='electrical_resistance', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRICAL_RESISTIVITY",
        "title": "Variable descriptor > Variable descriptor > ELECTRICAL_RESISTIVITY",
        "section": "Variable descriptor > ELECTRICAL_RESISTIVITY",
        "text": "ELECTRICAL_RESISTIVITY = VariableDescriptor(name='electrical_resistivity', dimension={'MASS': 1.0, 'LENGTH': 3.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRIC_CHARGE",
        "title": "Variable descriptor > Variable descriptor > ELECTRIC_CHARGE",
        "section": "Variable descriptor > ELECTRIC_CHARGE",
        "text": "ELECTRIC_CHARGE = VariableDescriptor(name='electric_charge', dimension={'TIME': 1.0, 'CURRENT': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRIC_SUSCEPTIBILITY",
        "title": "Variable descriptor > Variable descriptor > ELECTRIC_SUSCEPTIBILITY",
        "section": "Variable descriptor > ELECTRIC_SUSCEPTIBILITY",
        "text": "ELECTRIC_SUSCEPTIBILITY = VariableDescriptor(name='electric_susceptibility', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTROCALORIC_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > ELECTROCALORIC_COEFFICIENT",
        "section": "Variable descriptor > ELECTROCALORIC_COEFFICIENT",
        "text": "ELECTROCALORIC_COEFFICIENT = VariableDescriptor(name='electrocaloric_coefficient', dimension={'TEMPERATURE': 1.0, 'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTROSTRICTION",
        "title": "Variable descriptor > Variable descriptor > ELECTROSTRICTION",
        "section": "Variable descriptor > ELECTROSTRICTION",
        "text": "ELECTROSTRICTION = VariableDescriptor(name='electrostriction', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ELECTRO_OPTIC_EFFECT",
        "title": "Variable descriptor > Variable descriptor > ELECTRO_OPTIC_EFFECT",
        "section": "Variable descriptor > ELECTRO_OPTIC_EFFECT",
        "text": "ELECTRO_OPTIC_EFFECT = VariableDescriptor(name='electro_optic_effect', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.EMISSIVITY",
        "title": "Variable descriptor > Variable descriptor > EMISSIVITY",
        "section": "Variable descriptor > EMISSIVITY",
        "text": "EMISSIVITY = VariableDescriptor(name='emissivity', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ENERGY",
        "title": "Variable descriptor > Variable descriptor > ENERGY",
        "section": "Variable descriptor > ENERGY",
        "text": "ENERGY = VariableDescriptor(name='energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ENERGY_DENSITY",
        "title": "Variable descriptor > Variable descriptor > ENERGY_DENSITY",
        "section": "Variable descriptor > ENERGY_DENSITY",
        "text": "ENERGY_DENSITY = VariableDescriptor(name='energy_density', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ENERGY_FLUX_DENSITY",
        "title": "Variable descriptor > Variable descriptor > ENERGY_FLUX_DENSITY",
        "section": "Variable descriptor > ENERGY_FLUX_DENSITY",
        "text": "ENERGY_FLUX_DENSITY = VariableDescriptor(name='energy_flux_density', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ENTHALPY",
        "title": "Variable descriptor > Variable descriptor > ENTHALPY",
        "section": "Variable descriptor > ENTHALPY",
        "text": "ENTHALPY = VariableDescriptor(name='enthalpy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ENTROPY",
        "title": "Variable descriptor > Variable descriptor > ENTROPY",
        "section": "Variable descriptor > ENTROPY",
        "text": "ENTROPY = VariableDescriptor(name='entropy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FATIGUE_LIMIT",
        "title": "Variable descriptor > Variable descriptor > FATIGUE_LIMIT",
        "section": "Variable descriptor > FATIGUE_LIMIT",
        "text": "FATIGUE_LIMIT = VariableDescriptor(name='fatigue_limit', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FLEXURAL_MODULUS",
        "title": "Variable descriptor > Variable descriptor > FLEXURAL_MODULUS",
        "section": "Variable descriptor > FLEXURAL_MODULUS",
        "text": "FLEXURAL_MODULUS = VariableDescriptor(name='flexural_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FLEXURAL_STRENGTH",
        "title": "Variable descriptor > Variable descriptor > FLEXURAL_STRENGTH",
        "section": "Variable descriptor > FLEXURAL_STRENGTH",
        "text": "FLEXURAL_STRENGTH = VariableDescriptor(name='flexural_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FORCE",
        "title": "Variable descriptor > Variable descriptor > FORCE",
        "section": "Variable descriptor > FORCE",
        "text": "FORCE = VariableDescriptor(name='force', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FORCE_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > FORCE_MAGNITUDE",
        "section": "Variable descriptor > FORCE_MAGNITUDE",
        "text": "FORCE_MAGNITUDE = VariableDescriptor(name='force_magnitude', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FORCE_X",
        "title": "Variable descriptor > Variable descriptor > FORCE_X",
        "section": "Variable descriptor > FORCE_X",
        "text": "FORCE_X = VariableDescriptor(name='force_x', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FORCE_Y",
        "title": "Variable descriptor > Variable descriptor > FORCE_Y",
        "section": "Variable descriptor > FORCE_Y",
        "text": "FORCE_Y = VariableDescriptor(name='force_y', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FORCE_Z",
        "title": "Variable descriptor > Variable descriptor > FORCE_Z",
        "section": "Variable descriptor > FORCE_Z",
        "text": "FORCE_Z = VariableDescriptor(name='force_z', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FRACTURE_TOUGHNESS",
        "title": "Variable descriptor > Variable descriptor > FRACTURE_TOUGHNESS",
        "section": "Variable descriptor > FRACTURE_TOUGHNESS",
        "text": "FRACTURE_TOUGHNESS = VariableDescriptor(name='fracture_toughness', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FREQUENCY",
        "title": "Variable descriptor > Variable descriptor > FREQUENCY",
        "section": "Variable descriptor > FREQUENCY",
        "text": "FREQUENCY = VariableDescriptor(name='frequency', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FREQUENCY_DRIFT",
        "title": "Variable descriptor > Variable descriptor > FREQUENCY_DRIFT",
        "section": "Variable descriptor > FREQUENCY_DRIFT",
        "text": "FREQUENCY_DRIFT = VariableDescriptor(name='frequency_drift', dimension={'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FRICTION_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > FRICTION_COEFFICIENT",
        "section": "Variable descriptor > FRICTION_COEFFICIENT",
        "text": "FRICTION_COEFFICIENT = VariableDescriptor(name='friction_coefficient', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.FUEL_EFFICIENCY",
        "title": "Variable descriptor > Variable descriptor > FUEL_EFFICIENCY",
        "section": "Variable descriptor > FUEL_EFFICIENCY",
        "text": "FUEL_EFFICIENCY = VariableDescriptor(name='fuel_efficiency', dimension={'LENGTH': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.HALF_LIFE",
        "title": "Variable descriptor > Variable descriptor > HALF_LIFE",
        "section": "Variable descriptor > HALF_LIFE",
        "text": "HALF_LIFE = VariableDescriptor(name='half_life', dimension={'TIME': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.HALL_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > HALL_COEFFICIENT",
        "section": "Variable descriptor > HALL_COEFFICIENT",
        "text": "HALL_COEFFICIENT = VariableDescriptor(name='hall_coefficient', dimension={'LENGTH': 3.0, 'CURRENT': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.HARDNESS",
        "title": "Variable descriptor > Variable descriptor > HARDNESS",
        "section": "Variable descriptor > HARDNESS",
        "text": "HARDNESS = VariableDescriptor(name='hardness', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.HEAT_CAPACITY",
        "title": "Variable descriptor > Variable descriptor > HEAT_CAPACITY",
        "section": "Variable descriptor > HEAT_CAPACITY",
        "text": "HEAT_CAPACITY = VariableDescriptor(name='heat_capacity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.HEAT_FLUX_DENSITY",
        "title": "Variable descriptor > Variable descriptor > HEAT_FLUX_DENSITY",
        "section": "Variable descriptor > HEAT_FLUX_DENSITY",
        "text": "HEAT_FLUX_DENSITY = VariableDescriptor(name='heat_flux_density', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.HEAT_OF_VAPORIZATION",
        "title": "Variable descriptor > Variable descriptor > HEAT_OF_VAPORIZATION",
        "section": "Variable descriptor > HEAT_OF_VAPORIZATION",
        "text": "HEAT_OF_VAPORIZATION = VariableDescriptor(name='heat_of_vaporization', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.HYGROSCOPY",
        "title": "Variable descriptor > Variable descriptor > HYGROSCOPY",
        "section": "Variable descriptor > HYGROSCOPY",
        "text": "HYGROSCOPY = VariableDescriptor(name='hygroscopy', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.HYSTERESIS",
        "title": "Variable descriptor > Variable descriptor > HYSTERESIS",
        "section": "Variable descriptor > HYSTERESIS",
        "text": "HYSTERESIS = VariableDescriptor(name='hysteresis', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.ILLUMINANCE",
        "title": "Variable descriptor > Variable descriptor > ILLUMINANCE",
        "section": "Variable descriptor > ILLUMINANCE",
        "text": "ILLUMINANCE = VariableDescriptor(name='illuminance', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.INTERNAL_ENERGY",
        "title": "Variable descriptor > Variable descriptor > INTERNAL_ENERGY",
        "section": "Variable descriptor > INTERNAL_ENERGY",
        "text": "INTERNAL_ENERGY = VariableDescriptor(name='internal_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.JERK",
        "title": "Variable descriptor > Variable descriptor > JERK",
        "section": "Variable descriptor > JERK",
        "text": "JERK = VariableDescriptor(name='jerk', dimension={'LENGTH': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.KINEMATIC_VISCOSITY",
        "title": "Variable descriptor > Variable descriptor > KINEMATIC_VISCOSITY",
        "section": "Variable descriptor > KINEMATIC_VISCOSITY",
        "text": "KINEMATIC_VISCOSITY = VariableDescriptor(name='kinematic_viscosity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.LENGTH",
        "title": "Variable descriptor > Variable descriptor > LENGTH",
        "section": "Variable descriptor > LENGTH",
        "text": "LENGTH = VariableDescriptor(name='length', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.LIGHT",
        "title": "Variable descriptor > Variable descriptor > LIGHT",
        "section": "Variable descriptor > LIGHT",
        "text": "LIGHT = VariableDescriptor(name='light', dimension={'LIGHT': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.LINEAR_MASS_DENSITY",
        "title": "Variable descriptor > Variable descriptor > LINEAR_MASS_DENSITY",
        "section": "Variable descriptor > LINEAR_MASS_DENSITY",
        "text": "LINEAR_MASS_DENSITY = VariableDescriptor(name='linear_mass_density', dimension={'MASS': 1.0, 'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.LUMINANCE",
        "title": "Variable descriptor > Variable descriptor > LUMINANCE",
        "section": "Variable descriptor > LUMINANCE",
        "text": "LUMINANCE = VariableDescriptor(name='luminance', dimension={'LIGHT': 1.0, 'LENGTH': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.LUMINOSITY",
        "title": "Variable descriptor > Variable descriptor > LUMINOSITY",
        "section": "Variable descriptor > LUMINOSITY",
        "text": "LUMINOSITY = VariableDescriptor(name='luminosity', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.LUMINOUS_EXPOSURE",
        "title": "Variable descriptor > Variable descriptor > LUMINOUS_EXPOSURE",
        "section": "Variable descriptor > LUMINOUS_EXPOSURE",
        "text": "LUMINOUS_EXPOSURE = VariableDescriptor(name='luminous_exposure', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0, 'TIME': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.LUMINOUS_FLUX",
        "title": "Variable descriptor > Variable descriptor > LUMINOUS_FLUX",
        "section": "Variable descriptor > LUMINOUS_FLUX",
        "text": "LUMINOUS_FLUX = VariableDescriptor(name='luminous_flux', dimension={'LIGHT': 1.0, 'SOLID_ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETIC_FLUX",
        "title": "Variable descriptor > Variable descriptor > MAGNETIC_FLUX",
        "section": "Variable descriptor > MAGNETIC_FLUX",
        "text": "MAGNETIC_FLUX = VariableDescriptor(name='magnetic_flux', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETIC_INDUCTION",
        "title": "Variable descriptor > Variable descriptor > MAGNETIC_INDUCTION",
        "section": "Variable descriptor > MAGNETIC_INDUCTION",
        "text": "MAGNETIC_INDUCTION = VariableDescriptor(name='magnetic_induction', dimension={'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETIC_PERMEABILITY",
        "title": "Variable descriptor > Variable descriptor > MAGNETIC_PERMEABILITY",
        "section": "Variable descriptor > MAGNETIC_PERMEABILITY",
        "text": "MAGNETIC_PERMEABILITY = VariableDescriptor(name='magnetic_permeability', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETIC_VECTOR_POTENTIAL",
        "title": "Variable descriptor > Variable descriptor > MAGNETIC_VECTOR_POTENTIAL",
        "section": "Variable descriptor > MAGNETIC_VECTOR_POTENTIAL",
        "text": "MAGNETIC_VECTOR_POTENTIAL = VariableDescriptor(name='magnetic_vector_potential', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETOCALORIC_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > MAGNETOCALORIC_COEFFICIENT",
        "section": "Variable descriptor > MAGNETOCALORIC_COEFFICIENT",
        "text": "MAGNETOCALORIC_COEFFICIENT = VariableDescriptor(name='magnetocaloric_coefficient', dimension={'TEMPERATURE': 1.0, 'MASS': -1.0, 'TIME': 2.0, 'CURRENT': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETOELECTRIC_POLARIZABILITY",
        "title": "Variable descriptor > Variable descriptor > MAGNETOELECTRIC_POLARIZABILITY",
        "section": "Variable descriptor > MAGNETOELECTRIC_POLARIZABILITY",
        "text": "MAGNETOELECTRIC_POLARIZABILITY = VariableDescriptor(name='magnetoelectric_polarizability', dimension={'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETORESISTANCE",
        "title": "Variable descriptor > Variable descriptor > MAGNETORESISTANCE",
        "section": "Variable descriptor > MAGNETORESISTANCE",
        "text": "MAGNETORESISTANCE = VariableDescriptor(name='magnetoresistance', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETOSTRICTION",
        "title": "Variable descriptor > Variable descriptor > MAGNETOSTRICTION",
        "section": "Variable descriptor > MAGNETOSTRICTION",
        "text": "MAGNETOSTRICTION = VariableDescriptor(name='magnetostriction', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAGNETOTHERMOELECTRIC_POWER",
        "title": "Variable descriptor > Variable descriptor > MAGNETOTHERMOELECTRIC_POWER",
        "section": "Variable descriptor > MAGNETOTHERMOELECTRIC_POWER",
        "text": "MAGNETOTHERMOELECTRIC_POWER = VariableDescriptor(name='magnetothermoelectric_power', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MALLEABILITY",
        "title": "Variable descriptor > Variable descriptor > MALLEABILITY",
        "section": "Variable descriptor > MALLEABILITY",
        "text": "MALLEABILITY = VariableDescriptor(name='malleability', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MASS",
        "title": "Variable descriptor > Variable descriptor > MASS",
        "section": "Variable descriptor > MASS",
        "text": "MASS = VariableDescriptor(name='mass', dimension={'MASS': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MASS_CONTROL",
        "title": "Variable descriptor > Variable descriptor > MASS_CONTROL",
        "section": "Variable descriptor > MASS_CONTROL",
        "text": "MASS_CONTROL = VariableDescriptor(name='mass_control', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MASS_DIFFUSIVITY",
        "title": "Variable descriptor > Variable descriptor > MASS_DIFFUSIVITY",
        "section": "Variable descriptor > MASS_DIFFUSIVITY",
        "text": "MASS_DIFFUSIVITY = VariableDescriptor(name='mass_diffusivity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MASS_FLOW_RATE",
        "title": "Variable descriptor > Variable descriptor > MASS_FLOW_RATE",
        "section": "Variable descriptor > MASS_FLOW_RATE",
        "text": "MASS_FLOW_RATE = VariableDescriptor(name='mass_flow_rate', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MAXIMUM_ENERGY_PRODUCT",
        "title": "Variable descriptor > Variable descriptor > MAXIMUM_ENERGY_PRODUCT",
        "section": "Variable descriptor > MAXIMUM_ENERGY_PRODUCT",
        "text": "MAXIMUM_ENERGY_PRODUCT = VariableDescriptor(name='maximum_energy_product', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MELTING_POINT",
        "title": "Variable descriptor > Variable descriptor > MELTING_POINT",
        "section": "Variable descriptor > MELTING_POINT",
        "text": "MELTING_POINT = VariableDescriptor(name='melting_point', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MESH_VELOCITY",
        "title": "Variable descriptor > Variable descriptor > MESH_VELOCITY",
        "section": "Variable descriptor > MESH_VELOCITY",
        "text": "MESH_VELOCITY = VariableDescriptor(name='mesh_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MESH_VELOCITY_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > MESH_VELOCITY_MAGNITUDE",
        "section": "Variable descriptor > MESH_VELOCITY_MAGNITUDE",
        "text": "MESH_VELOCITY_MAGNITUDE = VariableDescriptor(name='mesh_velocity_magnitude', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MESH_VELOCITY_X",
        "title": "Variable descriptor > Variable descriptor > MESH_VELOCITY_X",
        "section": "Variable descriptor > MESH_VELOCITY_X",
        "text": "MESH_VELOCITY_X = VariableDescriptor(name='mesh_velocity_x', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MESH_VELOCITY_Y",
        "title": "Variable descriptor > Variable descriptor > MESH_VELOCITY_Y",
        "section": "Variable descriptor > MESH_VELOCITY_Y",
        "text": "MESH_VELOCITY_Y = VariableDescriptor(name='mesh_velocity_y', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MESH_VELOCITY_Z",
        "title": "Variable descriptor > Variable descriptor > MESH_VELOCITY_Z",
        "section": "Variable descriptor > MESH_VELOCITY_Z",
        "text": "MESH_VELOCITY_Z = VariableDescriptor(name='mesh_velocity_z', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOLALITY",
        "title": "Variable descriptor > Variable descriptor > MOLALITY",
        "section": "Variable descriptor > MOLALITY",
        "text": "MOLALITY = VariableDescriptor(name='molality', dimension={'CHEMICAL_AMOUNT': 1.0, 'MASS': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOLARITY",
        "title": "Variable descriptor > Variable descriptor > MOLARITY",
        "section": "Variable descriptor > MOLARITY",
        "text": "MOLARITY = VariableDescriptor(name='molarity', dimension={'CHEMICAL_AMOUNT': 1.0, 'LENGTH': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOLAR_ENERGY",
        "title": "Variable descriptor > Variable descriptor > MOLAR_ENERGY",
        "section": "Variable descriptor > MOLAR_ENERGY",
        "text": "MOLAR_ENERGY = VariableDescriptor(name='molar_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOLAR_ENTROPY",
        "title": "Variable descriptor > Variable descriptor > MOLAR_ENTROPY",
        "section": "Variable descriptor > MOLAR_ENTROPY",
        "text": "MOLAR_ENTROPY = VariableDescriptor(name='molar_entropy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOLAR_HEAT_CAPACITY",
        "title": "Variable descriptor > Variable descriptor > MOLAR_HEAT_CAPACITY",
        "section": "Variable descriptor > MOLAR_HEAT_CAPACITY",
        "text": "MOLAR_HEAT_CAPACITY = VariableDescriptor(name='molar_heat_capacity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOLAR_MASS",
        "title": "Variable descriptor > Variable descriptor > MOLAR_MASS",
        "section": "Variable descriptor > MOLAR_MASS",
        "text": "MOLAR_MASS = VariableDescriptor(name='molar_mass', dimension={'MASS': 1.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOLAR_VOLUME",
        "title": "Variable descriptor > Variable descriptor > MOLAR_VOLUME",
        "section": "Variable descriptor > MOLAR_VOLUME",
        "text": "MOLAR_VOLUME = VariableDescriptor(name='molar_volume', dimension={'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOMENTUM",
        "title": "Variable descriptor > Variable descriptor > MOMENTUM",
        "section": "Variable descriptor > MOMENTUM",
        "text": "MOMENTUM = VariableDescriptor(name='momentum', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOMENTUM_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > MOMENTUM_MAGNITUDE",
        "section": "Variable descriptor > MOMENTUM_MAGNITUDE",
        "text": "MOMENTUM_MAGNITUDE = VariableDescriptor(name='momentum_magnitude', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOMENTUM_X",
        "title": "Variable descriptor > Variable descriptor > MOMENTUM_X",
        "section": "Variable descriptor > MOMENTUM_X",
        "text": "MOMENTUM_X = VariableDescriptor(name='momentum_x', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOMENTUM_Y",
        "title": "Variable descriptor > Variable descriptor > MOMENTUM_Y",
        "section": "Variable descriptor > MOMENTUM_Y",
        "text": "MOMENTUM_Y = VariableDescriptor(name='momentum_y', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOMENTUM_Z",
        "title": "Variable descriptor > Variable descriptor > MOMENTUM_Z",
        "section": "Variable descriptor > MOMENTUM_Z",
        "text": "MOMENTUM_Z = VariableDescriptor(name='momentum_z', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.MOMENT_OF_INERTIA",
        "title": "Variable descriptor > Variable descriptor > MOMENT_OF_INERTIA",
        "section": "Variable descriptor > MOMENT_OF_INERTIA",
        "text": "MOMENT_OF_INERTIA = VariableDescriptor(name='moment_of_inertia', dimension={'MASS': 1.0, 'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.NERNST_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > NERNST_COEFFICIENT",
        "section": "Variable descriptor > NERNST_COEFFICIENT",
        "text": "NERNST_COEFFICIENT = VariableDescriptor(name='nernst_coefficient', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.NEUTRON_CROSS_SECTION",
        "title": "Variable descriptor > Variable descriptor > NEUTRON_CROSS_SECTION",
        "section": "Variable descriptor > NEUTRON_CROSS_SECTION",
        "text": "NEUTRON_CROSS_SECTION = VariableDescriptor(name='neutron_cross_section', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.NORMALIZED_Q_CRITERION",
        "title": "Variable descriptor > Variable descriptor > NORMALIZED_Q_CRITERION",
        "section": "Variable descriptor > NORMALIZED_Q_CRITERION",
        "text": "NORMALIZED_Q_CRITERION = VariableDescriptor(name='normalized_q_criterion', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.OPTICAL_ACTIVITY",
        "title": "Variable descriptor > Variable descriptor > OPTICAL_ACTIVITY",
        "section": "Variable descriptor > OPTICAL_ACTIVITY",
        "text": "OPTICAL_ACTIVITY = VariableDescriptor(name='optical_activity', dimension={'LENGTH': 1.0, 'MASS': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PERMEABILITY",
        "title": "Variable descriptor > Variable descriptor > PERMEABILITY",
        "section": "Variable descriptor > PERMEABILITY",
        "text": "PERMEABILITY = VariableDescriptor(name='permeability', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PERMITTIVITY",
        "title": "Variable descriptor > Variable descriptor > PERMITTIVITY",
        "section": "Variable descriptor > PERMITTIVITY",
        "text": "PERMITTIVITY = VariableDescriptor(name='permittivity', dimension={'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 4.0, 'CURRENT': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PH",
        "title": "Variable descriptor > Variable descriptor > PH",
        "section": "Variable descriptor > PH",
        "text": "PH = VariableDescriptor(name='ph', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PHOTOELASTICITY",
        "title": "Variable descriptor > Variable descriptor > PHOTOELASTICITY",
        "section": "Variable descriptor > PHOTOELASTICITY",
        "text": "PHOTOELASTICITY = VariableDescriptor(name='photoelasticity', dimension={'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PHOTOSENSITIVITY",
        "title": "Variable descriptor > Variable descriptor > PHOTOSENSITIVITY",
        "section": "Variable descriptor > PHOTOSENSITIVITY",
        "text": "PHOTOSENSITIVITY = VariableDescriptor(name='photosensitivity', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PIEZOELECTRIC_CONSTANTS",
        "title": "Variable descriptor > Variable descriptor > PIEZOELECTRIC_CONSTANTS",
        "section": "Variable descriptor > PIEZOELECTRIC_CONSTANTS",
        "text": "PIEZOELECTRIC_CONSTANTS = VariableDescriptor(name='piezoelectric_constants', dimension={'LENGTH': 2.0, 'TIME': -1.0, 'CURRENT': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PIEZOMAGNETISM",
        "title": "Variable descriptor > Variable descriptor > PIEZOMAGNETISM",
        "section": "Variable descriptor > PIEZOMAGNETISM",
        "text": "PIEZOMAGNETISM = VariableDescriptor(name='piezomagnetism', dimension={'CURRENT': -1.0, 'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PLASTICITY",
        "title": "Variable descriptor > Variable descriptor > PLASTICITY",
        "section": "Variable descriptor > PLASTICITY",
        "text": "PLASTICITY = VariableDescriptor(name='plasticity', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.POISSON_RATIO",
        "title": "Variable descriptor > Variable descriptor > POISSON_RATIO",
        "section": "Variable descriptor > POISSON_RATIO",
        "text": "POISSON_RATIO = VariableDescriptor(name='poisson_ratio', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.POSITION",
        "title": "Variable descriptor > Variable descriptor > POSITION",
        "section": "Variable descriptor > POSITION",
        "text": "POSITION = VariableDescriptor(name='position', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.POSITION_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > POSITION_MAGNITUDE",
        "section": "Variable descriptor > POSITION_MAGNITUDE",
        "text": "POSITION_MAGNITUDE = VariableDescriptor(name='position_magnitude', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.POSITION_X",
        "title": "Variable descriptor > Variable descriptor > POSITION_X",
        "section": "Variable descriptor > POSITION_X",
        "text": "POSITION_X = VariableDescriptor(name='position_x', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.POSITION_Y",
        "title": "Variable descriptor > Variable descriptor > POSITION_Y",
        "section": "Variable descriptor > POSITION_Y",
        "text": "POSITION_Y = VariableDescriptor(name='position_y', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.POSITION_Z",
        "title": "Variable descriptor > Variable descriptor > POSITION_Z",
        "section": "Variable descriptor > POSITION_Z",
        "text": "POSITION_Z = VariableDescriptor(name='position_z', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.POWER",
        "title": "Variable descriptor > Variable descriptor > POWER",
        "section": "Variable descriptor > POWER",
        "text": "POWER = VariableDescriptor(name='power', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PRANDTL_NUMBER",
        "title": "Variable descriptor > Variable descriptor > PRANDTL_NUMBER",
        "section": "Variable descriptor > PRANDTL_NUMBER",
        "text": "PRANDTL_NUMBER = VariableDescriptor(name='prandtl_number', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PRESSURE",
        "title": "Variable descriptor > Variable descriptor > PRESSURE",
        "section": "Variable descriptor > PRESSURE",
        "text": "PRESSURE = VariableDescriptor(name='pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PRESSURE_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > PRESSURE_COEFFICIENT",
        "section": "Variable descriptor > PRESSURE_COEFFICIENT",
        "text": "PRESSURE_COEFFICIENT = VariableDescriptor(name='pressure_coefficient', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "title": "Variable descriptor > Variable descriptor > PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "section": "Variable descriptor > PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "text": "PRODUCTION_OF_TURBULENT_KINETIC_ENERGY = VariableDescriptor(name='production_of_turbulent_kinetic_energy', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PYROELECTRICITY",
        "title": "Variable descriptor > Variable descriptor > PYROELECTRICITY",
        "section": "Variable descriptor > PYROELECTRICITY",
        "text": "PYROELECTRICITY = VariableDescriptor(name='pyroelectricity', dimension={'CURRENT': 1.0, 'LENGTH': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.PYROMAGNETIC_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > PYROMAGNETIC_COEFFICIENT",
        "section": "Variable descriptor > PYROMAGNETIC_COEFFICIENT",
        "text": "PYROMAGNETIC_COEFFICIENT = VariableDescriptor(name='pyromagnetic_coefficient', dimension={'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.Q_CRITERION",
        "title": "Variable descriptor > Variable descriptor > Q_CRITERION",
        "section": "Variable descriptor > Q_CRITERION",
        "text": "Q_CRITERION = VariableDescriptor(name='q_criterion', dimension={'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.RADIAL_VELOCITY",
        "title": "Variable descriptor > Variable descriptor > RADIAL_VELOCITY",
        "section": "Variable descriptor > RADIAL_VELOCITY",
        "text": "RADIAL_VELOCITY = VariableDescriptor(name='radial_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.RADIANCE",
        "title": "Variable descriptor > Variable descriptor > RADIANCE",
        "section": "Variable descriptor > RADIANCE",
        "text": "RADIANCE = VariableDescriptor(name='radiance', dimension={'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.RADIANT_EXPOSURE",
        "title": "Variable descriptor > Variable descriptor > RADIANT_EXPOSURE",
        "section": "Variable descriptor > RADIANT_EXPOSURE",
        "text": "RADIANT_EXPOSURE = VariableDescriptor(name='radiant_exposure', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.RADIANT_INTENSITY",
        "title": "Variable descriptor > Variable descriptor > RADIANT_INTENSITY",
        "section": "Variable descriptor > RADIANT_INTENSITY",
        "text": "RADIANT_INTENSITY = VariableDescriptor(name='radiant_intensity', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.REACTIVITY",
        "title": "Variable descriptor > Variable descriptor > REACTIVITY",
        "section": "Variable descriptor > REACTIVITY",
        "text": "REACTIVITY = VariableDescriptor(name='reactivity', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.REFLECTIVITY",
        "title": "Variable descriptor > Variable descriptor > REFLECTIVITY",
        "section": "Variable descriptor > REFLECTIVITY",
        "text": "REFLECTIVITY = VariableDescriptor(name='reflectivity', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.REFRACTIVE_INDEX",
        "title": "Variable descriptor > Variable descriptor > REFRACTIVE_INDEX",
        "section": "Variable descriptor > REFRACTIVE_INDEX",
        "text": "REFRACTIVE_INDEX = VariableDescriptor(name='refractive_index', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.RELATIVE_ATOMIC_MASS",
        "title": "Variable descriptor > Variable descriptor > RELATIVE_ATOMIC_MASS",
        "section": "Variable descriptor > RELATIVE_ATOMIC_MASS",
        "text": "RELATIVE_ATOMIC_MASS = VariableDescriptor(name='relative_atomic_mass', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.RESILIENCE",
        "title": "Variable descriptor > Variable descriptor > RESILIENCE",
        "section": "Variable descriptor > RESILIENCE",
        "text": "RESILIENCE = VariableDescriptor(name='resilience', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SCATTERING",
        "title": "Variable descriptor > Variable descriptor > SCATTERING",
        "section": "Variable descriptor > SCATTERING",
        "text": "SCATTERING = VariableDescriptor(name='scattering', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SEEBECK_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > SEEBECK_COEFFICIENT",
        "section": "Variable descriptor > SEEBECK_COEFFICIENT",
        "text": "SEEBECK_COEFFICIENT = VariableDescriptor(name='seebeck_coefficient', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SHEAR_MODULUS",
        "title": "Variable descriptor > Variable descriptor > SHEAR_MODULUS",
        "section": "Variable descriptor > SHEAR_MODULUS",
        "text": "SHEAR_MODULUS = VariableDescriptor(name='shear_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SHEAR_STRENGTH",
        "title": "Variable descriptor > Variable descriptor > SHEAR_STRENGTH",
        "section": "Variable descriptor > SHEAR_STRENGTH",
        "text": "SHEAR_STRENGTH = VariableDescriptor(name='shear_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SKIN_FRICTION_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > SKIN_FRICTION_COEFFICIENT",
        "section": "Variable descriptor > SKIN_FRICTION_COEFFICIENT",
        "text": "SKIN_FRICTION_COEFFICIENT = VariableDescriptor(name='skin_friction_coefficient', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SLIP",
        "title": "Variable descriptor > Variable descriptor > SLIP",
        "section": "Variable descriptor > SLIP",
        "text": "SLIP = VariableDescriptor(name='slip', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SNAP",
        "title": "Variable descriptor > Variable descriptor > SNAP",
        "section": "Variable descriptor > SNAP",
        "text": "SNAP = VariableDescriptor(name='snap', dimension={'LENGTH': 1.0, 'TIME': -4.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SOLID_ANGLE",
        "title": "Variable descriptor > Variable descriptor > SOLID_ANGLE",
        "section": "Variable descriptor > SOLID_ANGLE",
        "text": "SOLID_ANGLE = VariableDescriptor(name='solid_angle', dimension={'SOLID_ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SOUND_REFLECTION",
        "title": "Variable descriptor > Variable descriptor > SOUND_REFLECTION",
        "section": "Variable descriptor > SOUND_REFLECTION",
        "text": "SOUND_REFLECTION = VariableDescriptor(name='sound_reflection', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SOUND_TRANSFER",
        "title": "Variable descriptor > Variable descriptor > SOUND_TRANSFER",
        "section": "Variable descriptor > SOUND_TRANSFER",
        "text": "SOUND_TRANSFER = VariableDescriptor(name='sound_transfer', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_ACTIVITY",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_ACTIVITY",
        "section": "Variable descriptor > SPECIFIC_ACTIVITY",
        "text": "SPECIFIC_ACTIVITY = VariableDescriptor(name='specific_activity', dimension={'MASS': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_ANGULAR_MOMENTUM",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_ANGULAR_MOMENTUM",
        "section": "Variable descriptor > SPECIFIC_ANGULAR_MOMENTUM",
        "text": "SPECIFIC_ANGULAR_MOMENTUM = VariableDescriptor(name='specific_angular_momentum', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_DISSIPATION_RATE",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_DISSIPATION_RATE",
        "section": "Variable descriptor > SPECIFIC_DISSIPATION_RATE",
        "text": "SPECIFIC_DISSIPATION_RATE = VariableDescriptor(name='specific_dissipation_rate', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_ENERGY",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_ENERGY",
        "section": "Variable descriptor > SPECIFIC_ENERGY",
        "text": "SPECIFIC_ENERGY = VariableDescriptor(name='specific_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_ENTHALPY",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_ENTHALPY",
        "section": "Variable descriptor > SPECIFIC_ENTHALPY",
        "text": "SPECIFIC_ENTHALPY = VariableDescriptor(name='specific_enthalpy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_ENTROPY",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_ENTROPY",
        "section": "Variable descriptor > SPECIFIC_ENTROPY",
        "text": "SPECIFIC_ENTROPY = VariableDescriptor(name='specific_entropy', dimension={'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_HEAT_CAPACITY",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_HEAT_CAPACITY",
        "section": "Variable descriptor > SPECIFIC_HEAT_CAPACITY",
        "text": "SPECIFIC_HEAT_CAPACITY = VariableDescriptor(name='specific_heat_capacity', dimension={'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_INTERNAL_ENERGY",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_INTERNAL_ENERGY",
        "section": "Variable descriptor > SPECIFIC_INTERNAL_ENERGY",
        "text": "SPECIFIC_INTERNAL_ENERGY = VariableDescriptor(name='specific_internal_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_INTERNAL_SURFACE_AREA",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_INTERNAL_SURFACE_AREA",
        "section": "Variable descriptor > SPECIFIC_INTERNAL_SURFACE_AREA",
        "text": "SPECIFIC_INTERNAL_SURFACE_AREA = VariableDescriptor(name='specific_internal_surface_area', dimension={'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_MODULUS",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_MODULUS",
        "section": "Variable descriptor > SPECIFIC_MODULUS",
        "text": "SPECIFIC_MODULUS = VariableDescriptor(name='specific_modulus', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_STRENGTH",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_STRENGTH",
        "section": "Variable descriptor > SPECIFIC_STRENGTH",
        "text": "SPECIFIC_STRENGTH = VariableDescriptor(name='specific_strength', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_TOTAL_ENERGY",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_TOTAL_ENERGY",
        "section": "Variable descriptor > SPECIFIC_TOTAL_ENERGY",
        "text": "SPECIFIC_TOTAL_ENERGY = VariableDescriptor(name='specific_total_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_TOTAL_ENTHALPY",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_TOTAL_ENTHALPY",
        "section": "Variable descriptor > SPECIFIC_TOTAL_ENTHALPY",
        "text": "SPECIFIC_TOTAL_ENTHALPY = VariableDescriptor(name='specific_total_enthalpy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_VOLUME",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_VOLUME",
        "section": "Variable descriptor > SPECIFIC_VOLUME",
        "text": "SPECIFIC_VOLUME = VariableDescriptor(name='specific_volume', dimension={'LENGTH': 3.0, 'MASS': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECIFIC_WEIGHT",
        "title": "Variable descriptor > Variable descriptor > SPECIFIC_WEIGHT",
        "section": "Variable descriptor > SPECIFIC_WEIGHT",
        "text": "SPECIFIC_WEIGHT = VariableDescriptor(name='specific_weight', dimension={'MASS': 1.0, 'LENGTH': -2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECTRAL_INTENSITY",
        "title": "Variable descriptor > Variable descriptor > SPECTRAL_INTENSITY",
        "section": "Variable descriptor > SPECTRAL_INTENSITY",
        "text": "SPECTRAL_INTENSITY = VariableDescriptor(name='spectral_intensity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECTRAL_IRRADIANCE",
        "title": "Variable descriptor > Variable descriptor > SPECTRAL_IRRADIANCE",
        "section": "Variable descriptor > SPECTRAL_IRRADIANCE",
        "text": "SPECTRAL_IRRADIANCE = VariableDescriptor(name='spectral_irradiance', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPECTRAL_POWER",
        "title": "Variable descriptor > Variable descriptor > SPECTRAL_POWER",
        "section": "Variable descriptor > SPECTRAL_POWER",
        "text": "SPECTRAL_POWER = VariableDescriptor(name='spectral_power', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPEED_OF_SOUND",
        "title": "Variable descriptor > Variable descriptor > SPEED_OF_SOUND",
        "section": "Variable descriptor > SPEED_OF_SOUND",
        "text": "SPEED_OF_SOUND = VariableDescriptor(name='speed_of_sound', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SPIN_HALL_EFFECT",
        "title": "Variable descriptor > Variable descriptor > SPIN_HALL_EFFECT",
        "section": "Variable descriptor > SPIN_HALL_EFFECT",
        "text": "SPIN_HALL_EFFECT = VariableDescriptor(name='spin_hall_effect', dimension={'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.STANDARD_ATOMIC_WEIGHT",
        "title": "Variable descriptor > Variable descriptor > STANDARD_ATOMIC_WEIGHT",
        "section": "Variable descriptor > STANDARD_ATOMIC_WEIGHT",
        "text": "STANDARD_ATOMIC_WEIGHT = VariableDescriptor(name='standard_atomic_weight', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.STATIC_PRESSURE",
        "title": "Variable descriptor > Variable descriptor > STATIC_PRESSURE",
        "section": "Variable descriptor > STATIC_PRESSURE",
        "text": "STATIC_PRESSURE = VariableDescriptor(name='static_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.STRAIN_RATE",
        "title": "Variable descriptor > Variable descriptor > STRAIN_RATE",
        "section": "Variable descriptor > STRAIN_RATE",
        "text": "STRAIN_RATE = VariableDescriptor(name='strain_rate', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.STRESS",
        "title": "Variable descriptor > Variable descriptor > STRESS",
        "section": "Variable descriptor > STRESS",
        "text": "STRESS = VariableDescriptor(name='stress', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SURFACE_ENERGY",
        "title": "Variable descriptor > Variable descriptor > SURFACE_ENERGY",
        "section": "Variable descriptor > SURFACE_ENERGY",
        "text": "SURFACE_ENERGY = VariableDescriptor(name='surface_energy', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SURFACE_HEAT_FLUX",
        "title": "Variable descriptor > Variable descriptor > SURFACE_HEAT_FLUX",
        "section": "Variable descriptor > SURFACE_HEAT_FLUX",
        "text": "SURFACE_HEAT_FLUX = VariableDescriptor(name='surface_heat_flux', dimension={'MASS': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "section": "Variable descriptor > SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "text": "SURFACE_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='surface_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SURFACE_NUSSELT_NUMBER",
        "title": "Variable descriptor > Variable descriptor > SURFACE_NUSSELT_NUMBER",
        "section": "Variable descriptor > SURFACE_NUSSELT_NUMBER",
        "text": "SURFACE_NUSSELT_NUMBER = VariableDescriptor(name='surface_nusselt_number', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SURFACE_ROUGHNESS",
        "title": "Variable descriptor > Variable descriptor > SURFACE_ROUGHNESS",
        "section": "Variable descriptor > SURFACE_ROUGHNESS",
        "text": "SURFACE_ROUGHNESS = VariableDescriptor(name='surface_roughness', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SURFACE_STANTON_NUMBER",
        "title": "Variable descriptor > Variable descriptor > SURFACE_STANTON_NUMBER",
        "section": "Variable descriptor > SURFACE_STANTON_NUMBER",
        "text": "SURFACE_STANTON_NUMBER = VariableDescriptor(name='surface_stanton_number', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.SURFACE_TENSION",
        "title": "Variable descriptor > Variable descriptor > SURFACE_TENSION",
        "section": "Variable descriptor > SURFACE_TENSION",
        "text": "SURFACE_TENSION = VariableDescriptor(name='surface_tension', dimension={'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TANGENTIAL_VELOCITY",
        "title": "Variable descriptor > Variable descriptor > TANGENTIAL_VELOCITY",
        "section": "Variable descriptor > TANGENTIAL_VELOCITY",
        "text": "TANGENTIAL_VELOCITY = VariableDescriptor(name='tangential_velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TEMPERATURE",
        "title": "Variable descriptor > Variable descriptor > TEMPERATURE",
        "section": "Variable descriptor > TEMPERATURE",
        "text": "TEMPERATURE = VariableDescriptor(name='temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TEMPERATURE_DIFFERENCE",
        "title": "Variable descriptor > Variable descriptor > TEMPERATURE_DIFFERENCE",
        "section": "Variable descriptor > TEMPERATURE_DIFFERENCE",
        "text": "TEMPERATURE_DIFFERENCE = VariableDescriptor(name='temperature_difference', dimension={'TEMPERATURE_DIFFERENCE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TEMPERATURE_GRADIENT",
        "title": "Variable descriptor > Variable descriptor > TEMPERATURE_GRADIENT",
        "section": "Variable descriptor > TEMPERATURE_GRADIENT",
        "text": "TEMPERATURE_GRADIENT = VariableDescriptor(name='temperature_gradient', dimension={'TEMPERATURE': 1.0, 'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TENSILE_STRENGTH",
        "title": "Variable descriptor > Variable descriptor > TENSILE_STRENGTH",
        "section": "Variable descriptor > TENSILE_STRENGTH",
        "text": "TENSILE_STRENGTH = VariableDescriptor(name='tensile_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.THERMAL_CONDUCTIVITY",
        "title": "Variable descriptor > Variable descriptor > THERMAL_CONDUCTIVITY",
        "section": "Variable descriptor > THERMAL_CONDUCTIVITY",
        "text": "THERMAL_CONDUCTIVITY = VariableDescriptor(name='thermal_conductivity', dimension={'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.THERMAL_DIFFUSIVITY",
        "title": "Variable descriptor > Variable descriptor > THERMAL_DIFFUSIVITY",
        "section": "Variable descriptor > THERMAL_DIFFUSIVITY",
        "text": "THERMAL_DIFFUSIVITY = VariableDescriptor(name='thermal_diffusivity', dimension={'LENGTH': 2.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.THERMAL_EXPANSION_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > THERMAL_EXPANSION_COEFFICIENT",
        "section": "Variable descriptor > THERMAL_EXPANSION_COEFFICIENT",
        "text": "THERMAL_EXPANSION_COEFFICIENT = VariableDescriptor(name='thermal_expansion_coefficient', dimension={'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.THERMAL_RESISTANCE",
        "title": "Variable descriptor > Variable descriptor > THERMAL_RESISTANCE",
        "section": "Variable descriptor > THERMAL_RESISTANCE",
        "text": "THERMAL_RESISTANCE = VariableDescriptor(name='thermal_resistance', dimension={'TEMPERATURE': 1.0, 'LENGTH': -2.0, 'MASS': -1.0, 'TIME': 3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.THIRD_ORDER_ELASTICITY",
        "title": "Variable descriptor > Variable descriptor > THIRD_ORDER_ELASTICITY",
        "section": "Variable descriptor > THIRD_ORDER_ELASTICITY",
        "text": "THIRD_ORDER_ELASTICITY = VariableDescriptor(name='third_order_elasticity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TIME",
        "title": "Variable descriptor > Variable descriptor > TIME",
        "section": "Variable descriptor > TIME",
        "text": "TIME = VariableDescriptor(name='time', dimension={'TIME': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TORQUE",
        "title": "Variable descriptor > Variable descriptor > TORQUE",
        "section": "Variable descriptor > TORQUE",
        "text": "TORQUE = VariableDescriptor(name='torque', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TORQUE_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > TORQUE_MAGNITUDE",
        "section": "Variable descriptor > TORQUE_MAGNITUDE",
        "text": "TORQUE_MAGNITUDE = VariableDescriptor(name='torque_magnitude', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TORQUE_X",
        "title": "Variable descriptor > Variable descriptor > TORQUE_X",
        "section": "Variable descriptor > TORQUE_X",
        "text": "TORQUE_X = VariableDescriptor(name='torque_x', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TORQUE_Y",
        "title": "Variable descriptor > Variable descriptor > TORQUE_Y",
        "section": "Variable descriptor > TORQUE_Y",
        "text": "TORQUE_Y = VariableDescriptor(name='torque_y', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TORQUE_Z",
        "title": "Variable descriptor > Variable descriptor > TORQUE_Z",
        "section": "Variable descriptor > TORQUE_Z",
        "text": "TORQUE_Z = VariableDescriptor(name='torque_z', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TOTAL_ENERGY",
        "title": "Variable descriptor > Variable descriptor > TOTAL_ENERGY",
        "section": "Variable descriptor > TOTAL_ENERGY",
        "text": "TOTAL_ENERGY = VariableDescriptor(name='total_energy', dimension={'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TOTAL_PRESSURE",
        "title": "Variable descriptor > Variable descriptor > TOTAL_PRESSURE",
        "section": "Variable descriptor > TOTAL_PRESSURE",
        "text": "TOTAL_PRESSURE = VariableDescriptor(name='total_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TOTAL_TEMPERATURE",
        "title": "Variable descriptor > Variable descriptor > TOTAL_TEMPERATURE",
        "section": "Variable descriptor > TOTAL_TEMPERATURE",
        "text": "TOTAL_TEMPERATURE = VariableDescriptor(name='total_temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TOUGHNESS",
        "title": "Variable descriptor > Variable descriptor > TOUGHNESS",
        "section": "Variable descriptor > TOUGHNESS",
        "text": "TOUGHNESS = VariableDescriptor(name='toughness', dimension={'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TRANSMITTANCE",
        "title": "Variable descriptor > Variable descriptor > TRANSMITTANCE",
        "section": "Variable descriptor > TRANSMITTANCE",
        "text": "TRANSMITTANCE = VariableDescriptor(name='transmittance', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TURBULENT_DISSIPATION_RATE",
        "title": "Variable descriptor > Variable descriptor > TURBULENT_DISSIPATION_RATE",
        "section": "Variable descriptor > TURBULENT_DISSIPATION_RATE",
        "text": "TURBULENT_DISSIPATION_RATE = VariableDescriptor(name='turbulent_dissipation_rate', dimension={'LENGTH': 2.0, 'TIME': 3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TURBULENT_INTENSITY",
        "title": "Variable descriptor > Variable descriptor > TURBULENT_INTENSITY",
        "section": "Variable descriptor > TURBULENT_INTENSITY",
        "text": "TURBULENT_INTENSITY = VariableDescriptor(name='turbulent_intensity', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TURBULENT_KINETIC_ENERGY",
        "title": "Variable descriptor > Variable descriptor > TURBULENT_KINETIC_ENERGY",
        "section": "Variable descriptor > TURBULENT_KINETIC_ENERGY",
        "text": "TURBULENT_KINETIC_ENERGY = VariableDescriptor(name='turbulent_kinetic_energy', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TURBULENT_REYNOLDS_NUMBER",
        "title": "Variable descriptor > Variable descriptor > TURBULENT_REYNOLDS_NUMBER",
        "section": "Variable descriptor > TURBULENT_REYNOLDS_NUMBER",
        "text": "TURBULENT_REYNOLDS_NUMBER = VariableDescriptor(name='turbulent_reynolds_number', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TURBULENT_VISCOSITY",
        "title": "Variable descriptor > Variable descriptor > TURBULENT_VISCOSITY",
        "section": "Variable descriptor > TURBULENT_VISCOSITY",
        "text": "TURBULENT_VISCOSITY = VariableDescriptor(name='turbulent_viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.TURBULENT_VISCOSITY_RATIO",
        "title": "Variable descriptor > Variable descriptor > TURBULENT_VISCOSITY_RATIO",
        "section": "Variable descriptor > TURBULENT_VISCOSITY_RATIO",
        "text": "TURBULENT_VISCOSITY_RATIO = VariableDescriptor(name='turbulent_viscosity_ratio', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VAPOR_PRESSURE",
        "title": "Variable descriptor > Variable descriptor > VAPOR_PRESSURE",
        "section": "Variable descriptor > VAPOR_PRESSURE",
        "text": "VAPOR_PRESSURE = VariableDescriptor(name='vapor_pressure', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VELOCITY",
        "title": "Variable descriptor > Variable descriptor > VELOCITY",
        "section": "Variable descriptor > VELOCITY",
        "text": "VELOCITY = VariableDescriptor(name='velocity', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VELOCITY_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > VELOCITY_MAGNITUDE",
        "section": "Variable descriptor > VELOCITY_MAGNITUDE",
        "text": "VELOCITY_MAGNITUDE = VariableDescriptor(name='velocity_magnitude', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VELOCITY_X",
        "title": "Variable descriptor > Variable descriptor > VELOCITY_X",
        "section": "Variable descriptor > VELOCITY_X",
        "text": "VELOCITY_X = VariableDescriptor(name='velocity_x', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VELOCITY_Y",
        "title": "Variable descriptor > Variable descriptor > VELOCITY_Y",
        "section": "Variable descriptor > VELOCITY_Y",
        "text": "VELOCITY_Y = VariableDescriptor(name='velocity_y', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VELOCITY_Z",
        "title": "Variable descriptor > Variable descriptor > VELOCITY_Z",
        "section": "Variable descriptor > VELOCITY_Z",
        "text": "VELOCITY_Z = VariableDescriptor(name='velocity_z', dimension={'LENGTH': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VISCOSITY",
        "title": "Variable descriptor > Variable descriptor > VISCOSITY",
        "section": "Variable descriptor > VISCOSITY",
        "text": "VISCOSITY = VariableDescriptor(name='viscosity', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VOLUME",
        "title": "Variable descriptor > Variable descriptor > VOLUME",
        "section": "Variable descriptor > VOLUME",
        "text": "VOLUME = VariableDescriptor(name='volume', dimension={'LENGTH': 3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VOLUMETRIC_FLOW",
        "title": "Variable descriptor > Variable descriptor > VOLUMETRIC_FLOW",
        "section": "Variable descriptor > VOLUMETRIC_FLOW",
        "text": "VOLUMETRIC_FLOW = VariableDescriptor(name='volumetric_flow', dimension={'LENGTH': 3.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VORTICITY",
        "title": "Variable descriptor > Variable descriptor > VORTICITY",
        "section": "Variable descriptor > VORTICITY",
        "text": "VORTICITY = VariableDescriptor(name='vorticity', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VORTICITY_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > VORTICITY_MAGNITUDE",
        "section": "Variable descriptor > VORTICITY_MAGNITUDE",
        "text": "VORTICITY_MAGNITUDE = VariableDescriptor(name='vorticity_magnitude', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VORTICITY_X",
        "title": "Variable descriptor > Variable descriptor > VORTICITY_X",
        "section": "Variable descriptor > VORTICITY_X",
        "text": "VORTICITY_X = VariableDescriptor(name='vorticity_x', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VORTICITY_Y",
        "title": "Variable descriptor > Variable descriptor > VORTICITY_Y",
        "section": "Variable descriptor > VORTICITY_Y",
        "text": "VORTICITY_Y = VariableDescriptor(name='vorticity_y', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.VORTICITY_Z",
        "title": "Variable descriptor > Variable descriptor > VORTICITY_Z",
        "section": "Variable descriptor > VORTICITY_Z",
        "text": "VORTICITY_Z = VariableDescriptor(name='vorticity_z', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "section": "Variable descriptor > WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "text": "WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='wall_adjacent_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_ADJACENT_TEMPERATURE",
        "title": "Variable descriptor > Variable descriptor > WALL_ADJACENT_TEMPERATURE",
        "section": "Variable descriptor > WALL_ADJACENT_TEMPERATURE",
        "text": "WALL_ADJACENT_TEMPERATURE = VariableDescriptor(name='wall_adjacent_temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS",
        "title": "Variable descriptor > Variable descriptor > WALL_SHEAR_STRESS",
        "section": "Variable descriptor > WALL_SHEAR_STRESS",
        "text": "WALL_SHEAR_STRESS = VariableDescriptor(name='wall_shear_stress', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > WALL_SHEAR_STRESS_MAGNITUDE",
        "section": "Variable descriptor > WALL_SHEAR_STRESS_MAGNITUDE",
        "text": "WALL_SHEAR_STRESS_MAGNITUDE = VariableDescriptor(name='wall_shear_stress_magnitude', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS_X",
        "title": "Variable descriptor > Variable descriptor > WALL_SHEAR_STRESS_X",
        "section": "Variable descriptor > WALL_SHEAR_STRESS_X",
        "text": "WALL_SHEAR_STRESS_X = VariableDescriptor(name='wall_shear_stress_x', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS_Y",
        "title": "Variable descriptor > Variable descriptor > WALL_SHEAR_STRESS_Y",
        "section": "Variable descriptor > WALL_SHEAR_STRESS_Y",
        "text": "WALL_SHEAR_STRESS_Y = VariableDescriptor(name='wall_shear_stress_y', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_SHEAR_STRESS_Z",
        "title": "Variable descriptor > Variable descriptor > WALL_SHEAR_STRESS_Z",
        "section": "Variable descriptor > WALL_SHEAR_STRESS_Z",
        "text": "WALL_SHEAR_STRESS_Z = VariableDescriptor(name='wall_shear_stress_z', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_TEMPERATURE",
        "title": "Variable descriptor > Variable descriptor > WALL_TEMPERATURE",
        "section": "Variable descriptor > WALL_TEMPERATURE",
        "text": "WALL_TEMPERATURE = VariableDescriptor(name='wall_temperature', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_TEMPERATURE_THIN",
        "title": "Variable descriptor > Variable descriptor > WALL_TEMPERATURE_THIN",
        "section": "Variable descriptor > WALL_TEMPERATURE_THIN",
        "text": "WALL_TEMPERATURE_THIN = VariableDescriptor(name='wall_temperature_thin', dimension={'TEMPERATURE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_Y_PLUS",
        "title": "Variable descriptor > Variable descriptor > WALL_Y_PLUS",
        "section": "Variable descriptor > WALL_Y_PLUS",
        "text": "WALL_Y_PLUS = VariableDescriptor(name='wall_y_plus', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WALL_Y_STAR",
        "title": "Variable descriptor > Variable descriptor > WALL_Y_STAR",
        "section": "Variable descriptor > WALL_Y_STAR",
        "text": "WALL_Y_STAR = VariableDescriptor(name='wall_y_star', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.WAVENUMBER",
        "title": "Variable descriptor > Variable descriptor > WAVENUMBER",
        "section": "Variable descriptor > WAVENUMBER",
        "text": "WAVENUMBER = VariableDescriptor(name='wavenumber', dimension={'LENGTH': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.YANK",
        "title": "Variable descriptor > Variable descriptor > YANK",
        "section": "Variable descriptor > YANK",
        "text": "YANK = VariableDescriptor(name='yank', dimension={'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.YIELD_STRENGTH",
        "title": "Variable descriptor > Variable descriptor > YIELD_STRENGTH",
        "section": "Variable descriptor > YIELD_STRENGTH",
        "text": "YIELD_STRENGTH = VariableDescriptor(name='yield_strength', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.YOUNG_MODULUS",
        "title": "Variable descriptor > Variable descriptor > YOUNG_MODULUS",
        "section": "Variable descriptor > YOUNG_MODULUS",
        "text": "YOUNG_MODULUS = VariableDescriptor(name='young_modulus', dimension={'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.add",
        "title": "Variable descriptor > Variable descriptor > add",
        "section": "Variable descriptor > add",
        "text": "classmethod add(variable: str, dimension: Dimensions, subcategory: str | None = None) -> None\n\nAdd a variable to the catalog.\n\nParameters\n\nvariable\n\npython:str\n\nThe name of the variable (must be uppercase).\n\ndimension\n\nDimensions\n\nThe dimension of the variable.\n\nsubcategory: str|None\n\nThe optional subcategory for the variable.\n\nRaises\n\nValueError\n\nThe variable name is not uppercase or already exists.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.all",
        "title": "Variable descriptor > Variable descriptor > all",
        "section": "Variable descriptor > all",
        "text": "classmethod all() -> dict[str, list[VariableDescriptor]]\n\nReturn all defined\nVariableDescriptor\nobjects, organized by subcategory.\n\nReturns\n\npython:dict[python:str, python:list[VariableDescriptor]]\n\nA dictionary where keys are subcategory names (or “main” for the top-level catalog)\nand values are lists of VariableDescriptor instances.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent",
        "title": "Variable descriptor > Variable descriptor > fluent",
        "section": "Variable descriptor > fluent",
        "text": "class fluent\n\nBases: object\n\nDictionary of variable descriptors for fluent-related quantities.\n\n!! processed by numpydoc !!\n\n\n\nDENSITY_ALL = VariableDescriptor(name='density_all', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n\n\n\n\nDVELOCITY_DX = VariableDescriptor(name='dvelocity_dx', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_MAGNITUDE = VariableDescriptor(name='dvelocity_dx_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_X = VariableDescriptor(name='dvelocity_dx_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_Y = VariableDescriptor(name='dvelocity_dx_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DX_Z = VariableDescriptor(name='dvelocity_dx_z', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY = VariableDescriptor(name='dvelocity_dy', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_MAGNITUDE = VariableDescriptor(name='dvelocity_dy_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_X = VariableDescriptor(name='dvelocity_dy_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_Y = VariableDescriptor(name='dvelocity_dy_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DY_Z = VariableDescriptor(name='dvelocity_dy_z', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ = VariableDescriptor(name='dvelocity_dz', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_MAGNITUDE = VariableDescriptor(name='dvelocity_dz_magnitude', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_X = VariableDescriptor(name='dvelocity_dz_x', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_Y = VariableDescriptor(name='dvelocity_dz_y', dimension={'TIME': -1.0})\n\n\n\n\n\nDVELOCITY_DZ_Z = VariableDescriptor(name='dvelocity_dz_z', dimension={'TIME': -1.0})\n\n\n\n\n\nHELICITY = VariableDescriptor(name='helicity', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n\n\n\n\nLAMBDA_2_CRITERION = VariableDescriptor(name='lambda_2_criterion', dimension={'TIME': -2.0})\n\n\n\n\n\nMASS_IMBALANCE = VariableDescriptor(name='mass_imbalance', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n\n\n\n\nPRESSURE_HESSIAN_INDICATOR = VariableDescriptor(name='pressure_hessian_indicator', dimension={})\n\n\n\n\n\nTOTAL_ENTHALPY_DEVIATION = VariableDescriptor(name='total_enthalpy_deviation', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n\n\n\n\nVELOCITY_ANGLE = VariableDescriptor(name='velocity_angle', dimension={'ANGLE': 1.0})\n\n\n\n\n\nY_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='y_plus_based_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DENSITY_ALL",
        "title": "Variable descriptor > Variable descriptor > DENSITY_ALL",
        "section": "Variable descriptor > DENSITY_ALL",
        "text": "DENSITY_ALL = VariableDescriptor(name='density_all', dimension={'MASS': 1.0, 'LENGTH': -3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DX",
        "section": "Variable descriptor > DVELOCITY_DX",
        "text": "DVELOCITY_DX = VariableDescriptor(name='dvelocity_dx', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DX_MAGNITUDE",
        "section": "Variable descriptor > DVELOCITY_DX_MAGNITUDE",
        "text": "DVELOCITY_DX_MAGNITUDE = VariableDescriptor(name='dvelocity_dx_magnitude', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX_X",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DX_X",
        "section": "Variable descriptor > DVELOCITY_DX_X",
        "text": "DVELOCITY_DX_X = VariableDescriptor(name='dvelocity_dx_x', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX_Y",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DX_Y",
        "section": "Variable descriptor > DVELOCITY_DX_Y",
        "text": "DVELOCITY_DX_Y = VariableDescriptor(name='dvelocity_dx_y', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DX_Z",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DX_Z",
        "section": "Variable descriptor > DVELOCITY_DX_Z",
        "text": "DVELOCITY_DX_Z = VariableDescriptor(name='dvelocity_dx_z', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DY",
        "section": "Variable descriptor > DVELOCITY_DY",
        "text": "DVELOCITY_DY = VariableDescriptor(name='dvelocity_dy', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DY_MAGNITUDE",
        "section": "Variable descriptor > DVELOCITY_DY_MAGNITUDE",
        "text": "DVELOCITY_DY_MAGNITUDE = VariableDescriptor(name='dvelocity_dy_magnitude', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY_X",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DY_X",
        "section": "Variable descriptor > DVELOCITY_DY_X",
        "text": "DVELOCITY_DY_X = VariableDescriptor(name='dvelocity_dy_x', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY_Y",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DY_Y",
        "section": "Variable descriptor > DVELOCITY_DY_Y",
        "text": "DVELOCITY_DY_Y = VariableDescriptor(name='dvelocity_dy_y', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DY_Z",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DY_Z",
        "section": "Variable descriptor > DVELOCITY_DY_Z",
        "text": "DVELOCITY_DY_Z = VariableDescriptor(name='dvelocity_dy_z', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DZ",
        "section": "Variable descriptor > DVELOCITY_DZ",
        "text": "DVELOCITY_DZ = VariableDescriptor(name='dvelocity_dz', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DZ_MAGNITUDE",
        "section": "Variable descriptor > DVELOCITY_DZ_MAGNITUDE",
        "text": "DVELOCITY_DZ_MAGNITUDE = VariableDescriptor(name='dvelocity_dz_magnitude', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ_X",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DZ_X",
        "section": "Variable descriptor > DVELOCITY_DZ_X",
        "text": "DVELOCITY_DZ_X = VariableDescriptor(name='dvelocity_dz_x', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ_Y",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DZ_Y",
        "section": "Variable descriptor > DVELOCITY_DZ_Y",
        "text": "DVELOCITY_DZ_Y = VariableDescriptor(name='dvelocity_dz_y', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.DVELOCITY_DZ_Z",
        "title": "Variable descriptor > Variable descriptor > DVELOCITY_DZ_Z",
        "section": "Variable descriptor > DVELOCITY_DZ_Z",
        "text": "DVELOCITY_DZ_Z = VariableDescriptor(name='dvelocity_dz_z', dimension={'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.HELICITY",
        "title": "Variable descriptor > Variable descriptor > HELICITY",
        "section": "Variable descriptor > HELICITY",
        "text": "HELICITY = VariableDescriptor(name='helicity', dimension={'LENGTH': 1.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.LAMBDA_2_CRITERION",
        "title": "Variable descriptor > Variable descriptor > LAMBDA_2_CRITERION",
        "section": "Variable descriptor > LAMBDA_2_CRITERION",
        "text": "LAMBDA_2_CRITERION = VariableDescriptor(name='lambda_2_criterion', dimension={'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.MASS_IMBALANCE",
        "title": "Variable descriptor > Variable descriptor > MASS_IMBALANCE",
        "section": "Variable descriptor > MASS_IMBALANCE",
        "text": "MASS_IMBALANCE = VariableDescriptor(name='mass_imbalance', dimension={'MASS': 1.0, 'TIME': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.PRESSURE_HESSIAN_INDICATOR",
        "title": "Variable descriptor > Variable descriptor > PRESSURE_HESSIAN_INDICATOR",
        "section": "Variable descriptor > PRESSURE_HESSIAN_INDICATOR",
        "text": "PRESSURE_HESSIAN_INDICATOR = VariableDescriptor(name='pressure_hessian_indicator', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.TOTAL_ENTHALPY_DEVIATION",
        "title": "Variable descriptor > Variable descriptor > TOTAL_ENTHALPY_DEVIATION",
        "section": "Variable descriptor > TOTAL_ENTHALPY_DEVIATION",
        "text": "TOTAL_ENTHALPY_DEVIATION = VariableDescriptor(name='total_enthalpy_deviation', dimension={'LENGTH': 2.0, 'TIME': -2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.VELOCITY_ANGLE",
        "title": "Variable descriptor > Variable descriptor > VELOCITY_ANGLE",
        "section": "Variable descriptor > VELOCITY_ANGLE",
        "text": "VELOCITY_ANGLE = VariableDescriptor(name='velocity_angle', dimension={'ANGLE': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.fluent.Y_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT",
        "title": "Variable descriptor > Variable descriptor > Y_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT",
        "section": "Variable descriptor > Y_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT",
        "text": "Y_PLUS_BASED_HEAT_TRANSFER_COEFFICIENT = VariableDescriptor(name='y_plus_based_heat_transfer_coefficient', dimension={'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh",
        "title": "Variable descriptor > Variable descriptor > mesh",
        "section": "Variable descriptor > mesh",
        "text": "class mesh\n\nBases: object\n\nDictionary of variable descriptors for mesh-related quantities.\n\n!! processed by numpydoc !!\n\n\n\nACTIVE_CELL_PARTITION = VariableDescriptor(name='active_cell_partition', dimension={})\n\n\n\n\n\nANISOTROPIC_ADAPTION_CELLS = VariableDescriptor(name='anisotropic_adaption_cells', dimension={})\n\n\n\n\n\nBOUNDARY_CELL_DISTANCE = VariableDescriptor(name='boundary_cell_distance', dimension={})\n\n\n\n\n\nBOUNDARY_LAYER_CELLS = VariableDescriptor(name='boundary_layer_cells', dimension={})\n\n\n\n\n\nBOUNDARY_NORMAL_DISTANCE = VariableDescriptor(name='boundary_normal_distance', dimension={})\n\n\n\n\n\nBOUNDARY_VOLUME_DISTANCE = VariableDescriptor(name='boundary_volume_distance', dimension={})\n\n\n\n\n\nCELL_ELEMENT_TYPE = VariableDescriptor(name='cell_element_type', dimension={})\n\n\n\n\n\nCELL_EQUIANGLE_SKEW = VariableDescriptor(name='cell_equiangle_skew', dimension={})\n\n\n\n\n\nCELL_EQUIVOLUME_SKEW = VariableDescriptor(name='cell_equivolume_skew', dimension={})\n\n\n\n\n\nCELL_ID = VariableDescriptor(name='cell_id', dimension={})\n\n\n\n\n\nCELL_PARENT_INDEX = VariableDescriptor(name='cell_parent_index', dimension={})\n\n\n\n\n\nCELL_REFINE_LEVEL = VariableDescriptor(name='cell_refine_level', dimension={})\n\n\n\n\n\nCELL_VOLUME = VariableDescriptor(name='cell_volume', dimension={'LENGTH': 3.0})\n\n\n\n\n\nCELL_VOLUME_CHANGE = VariableDescriptor(name='cell_volume_change', dimension={})\n\n\n\n\n\nCELL_WEIGHT = VariableDescriptor(name='cell_weight', dimension={})\n\n\n\n\n\nCELL_ZONE_INDEX = VariableDescriptor(name='cell_zone_index', dimension={})\n\n\n\n\n\nCELL_ZONE_TYPE = VariableDescriptor(name='cell_zone_type', dimension={})\n\n\n\n\n\nELEMENT_ASPECT_RATIO = VariableDescriptor(name='element_aspect_ratio', dimension={})\n\n\n\n\n\nELEMENT_WALL_DISTANCE = VariableDescriptor(name='element_wall_distance', dimension={'LENGTH': 1.0})\n\n\n\n\n\nFACE_AREA_MAGNITUDE = VariableDescriptor(name='face_area_magnitude', dimension={'LENGTH': 2.0})\n\n\n\n\n\nFACE_HANDEDNESS = VariableDescriptor(name='face_handedness', dimension={})\n\n\n\n\n\nINTERFACE_OVERLAP_FRACTION = VariableDescriptor(name='interface_overlap_fraction', dimension={})\n\n\n\n\n\nMARK_POOR_ELEMENTS = VariableDescriptor(name='mark_poor_elements', dimension={})\n\n\n\n\n\nPARTITION_NEIGHBOURS = VariableDescriptor(name='partition_neighbours', dimension={})\n\n\n\n\n\nSMOOTHED_CELL_REFINE_LEVEL = VariableDescriptor(name='smoothed_cell_refine_level', dimension={})\n\n\n\n\n\nSTORED_CELL_PARTITIION = VariableDescriptor(name='stored_cell_partitiion', dimension={})\n\n\n\n\n\nX_FACE_AREA = VariableDescriptor(name='x_face_area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nY_FACE_AREA = VariableDescriptor(name='y_face_area', dimension={'LENGTH': 2.0})\n\n\n\n\n\nZ_FACE_AREA = VariableDescriptor(name='z_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.ACTIVE_CELL_PARTITION",
        "title": "Variable descriptor > Variable descriptor > ACTIVE_CELL_PARTITION",
        "section": "Variable descriptor > ACTIVE_CELL_PARTITION",
        "text": "ACTIVE_CELL_PARTITION = VariableDescriptor(name='active_cell_partition', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.ANISOTROPIC_ADAPTION_CELLS",
        "title": "Variable descriptor > Variable descriptor > ANISOTROPIC_ADAPTION_CELLS",
        "section": "Variable descriptor > ANISOTROPIC_ADAPTION_CELLS",
        "text": "ANISOTROPIC_ADAPTION_CELLS = VariableDescriptor(name='anisotropic_adaption_cells', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.BOUNDARY_CELL_DISTANCE",
        "title": "Variable descriptor > Variable descriptor > BOUNDARY_CELL_DISTANCE",
        "section": "Variable descriptor > BOUNDARY_CELL_DISTANCE",
        "text": "BOUNDARY_CELL_DISTANCE = VariableDescriptor(name='boundary_cell_distance', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.BOUNDARY_LAYER_CELLS",
        "title": "Variable descriptor > Variable descriptor > BOUNDARY_LAYER_CELLS",
        "section": "Variable descriptor > BOUNDARY_LAYER_CELLS",
        "text": "BOUNDARY_LAYER_CELLS = VariableDescriptor(name='boundary_layer_cells', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.BOUNDARY_NORMAL_DISTANCE",
        "title": "Variable descriptor > Variable descriptor > BOUNDARY_NORMAL_DISTANCE",
        "section": "Variable descriptor > BOUNDARY_NORMAL_DISTANCE",
        "text": "BOUNDARY_NORMAL_DISTANCE = VariableDescriptor(name='boundary_normal_distance', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.BOUNDARY_VOLUME_DISTANCE",
        "title": "Variable descriptor > Variable descriptor > BOUNDARY_VOLUME_DISTANCE",
        "section": "Variable descriptor > BOUNDARY_VOLUME_DISTANCE",
        "text": "BOUNDARY_VOLUME_DISTANCE = VariableDescriptor(name='boundary_volume_distance', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_ELEMENT_TYPE",
        "title": "Variable descriptor > Variable descriptor > CELL_ELEMENT_TYPE",
        "section": "Variable descriptor > CELL_ELEMENT_TYPE",
        "text": "CELL_ELEMENT_TYPE = VariableDescriptor(name='cell_element_type', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_EQUIANGLE_SKEW",
        "title": "Variable descriptor > Variable descriptor > CELL_EQUIANGLE_SKEW",
        "section": "Variable descriptor > CELL_EQUIANGLE_SKEW",
        "text": "CELL_EQUIANGLE_SKEW = VariableDescriptor(name='cell_equiangle_skew', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_EQUIVOLUME_SKEW",
        "title": "Variable descriptor > Variable descriptor > CELL_EQUIVOLUME_SKEW",
        "section": "Variable descriptor > CELL_EQUIVOLUME_SKEW",
        "text": "CELL_EQUIVOLUME_SKEW = VariableDescriptor(name='cell_equivolume_skew', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_ID",
        "title": "Variable descriptor > Variable descriptor > CELL_ID",
        "section": "Variable descriptor > CELL_ID",
        "text": "CELL_ID = VariableDescriptor(name='cell_id', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_PARENT_INDEX",
        "title": "Variable descriptor > Variable descriptor > CELL_PARENT_INDEX",
        "section": "Variable descriptor > CELL_PARENT_INDEX",
        "text": "CELL_PARENT_INDEX = VariableDescriptor(name='cell_parent_index', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_REFINE_LEVEL",
        "title": "Variable descriptor > Variable descriptor > CELL_REFINE_LEVEL",
        "section": "Variable descriptor > CELL_REFINE_LEVEL",
        "text": "CELL_REFINE_LEVEL = VariableDescriptor(name='cell_refine_level', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_VOLUME",
        "title": "Variable descriptor > Variable descriptor > CELL_VOLUME",
        "section": "Variable descriptor > CELL_VOLUME",
        "text": "CELL_VOLUME = VariableDescriptor(name='cell_volume', dimension={'LENGTH': 3.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_VOLUME_CHANGE",
        "title": "Variable descriptor > Variable descriptor > CELL_VOLUME_CHANGE",
        "section": "Variable descriptor > CELL_VOLUME_CHANGE",
        "text": "CELL_VOLUME_CHANGE = VariableDescriptor(name='cell_volume_change', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_WEIGHT",
        "title": "Variable descriptor > Variable descriptor > CELL_WEIGHT",
        "section": "Variable descriptor > CELL_WEIGHT",
        "text": "CELL_WEIGHT = VariableDescriptor(name='cell_weight', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_ZONE_INDEX",
        "title": "Variable descriptor > Variable descriptor > CELL_ZONE_INDEX",
        "section": "Variable descriptor > CELL_ZONE_INDEX",
        "text": "CELL_ZONE_INDEX = VariableDescriptor(name='cell_zone_index', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.CELL_ZONE_TYPE",
        "title": "Variable descriptor > Variable descriptor > CELL_ZONE_TYPE",
        "section": "Variable descriptor > CELL_ZONE_TYPE",
        "text": "CELL_ZONE_TYPE = VariableDescriptor(name='cell_zone_type', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.ELEMENT_ASPECT_RATIO",
        "title": "Variable descriptor > Variable descriptor > ELEMENT_ASPECT_RATIO",
        "section": "Variable descriptor > ELEMENT_ASPECT_RATIO",
        "text": "ELEMENT_ASPECT_RATIO = VariableDescriptor(name='element_aspect_ratio', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.ELEMENT_WALL_DISTANCE",
        "title": "Variable descriptor > Variable descriptor > ELEMENT_WALL_DISTANCE",
        "section": "Variable descriptor > ELEMENT_WALL_DISTANCE",
        "text": "ELEMENT_WALL_DISTANCE = VariableDescriptor(name='element_wall_distance', dimension={'LENGTH': 1.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.FACE_AREA_MAGNITUDE",
        "title": "Variable descriptor > Variable descriptor > FACE_AREA_MAGNITUDE",
        "section": "Variable descriptor > FACE_AREA_MAGNITUDE",
        "text": "FACE_AREA_MAGNITUDE = VariableDescriptor(name='face_area_magnitude', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.FACE_HANDEDNESS",
        "title": "Variable descriptor > Variable descriptor > FACE_HANDEDNESS",
        "section": "Variable descriptor > FACE_HANDEDNESS",
        "text": "FACE_HANDEDNESS = VariableDescriptor(name='face_handedness', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.INTERFACE_OVERLAP_FRACTION",
        "title": "Variable descriptor > Variable descriptor > INTERFACE_OVERLAP_FRACTION",
        "section": "Variable descriptor > INTERFACE_OVERLAP_FRACTION",
        "text": "INTERFACE_OVERLAP_FRACTION = VariableDescriptor(name='interface_overlap_fraction', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.MARK_POOR_ELEMENTS",
        "title": "Variable descriptor > Variable descriptor > MARK_POOR_ELEMENTS",
        "section": "Variable descriptor > MARK_POOR_ELEMENTS",
        "text": "MARK_POOR_ELEMENTS = VariableDescriptor(name='mark_poor_elements', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.PARTITION_NEIGHBOURS",
        "title": "Variable descriptor > Variable descriptor > PARTITION_NEIGHBOURS",
        "section": "Variable descriptor > PARTITION_NEIGHBOURS",
        "text": "PARTITION_NEIGHBOURS = VariableDescriptor(name='partition_neighbours', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.SMOOTHED_CELL_REFINE_LEVEL",
        "title": "Variable descriptor > Variable descriptor > SMOOTHED_CELL_REFINE_LEVEL",
        "section": "Variable descriptor > SMOOTHED_CELL_REFINE_LEVEL",
        "text": "SMOOTHED_CELL_REFINE_LEVEL = VariableDescriptor(name='smoothed_cell_refine_level', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.STORED_CELL_PARTITIION",
        "title": "Variable descriptor > Variable descriptor > STORED_CELL_PARTITIION",
        "section": "Variable descriptor > STORED_CELL_PARTITIION",
        "text": "STORED_CELL_PARTITIION = VariableDescriptor(name='stored_cell_partitiion', dimension={})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.X_FACE_AREA",
        "title": "Variable descriptor > Variable descriptor > X_FACE_AREA",
        "section": "Variable descriptor > X_FACE_AREA",
        "text": "X_FACE_AREA = VariableDescriptor(name='x_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.Y_FACE_AREA",
        "title": "Variable descriptor > Variable descriptor > Y_FACE_AREA",
        "section": "Variable descriptor > Y_FACE_AREA",
        "text": "Y_FACE_AREA = VariableDescriptor(name='y_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableCatalog.mesh.Z_FACE_AREA",
        "title": "Variable descriptor > Variable descriptor > Z_FACE_AREA",
        "section": "Variable descriptor > Z_FACE_AREA",
        "text": "Z_FACE_AREA = VariableDescriptor(name='z_face_area', dimension={'LENGTH': 2.0})\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableDescriptor",
        "title": "Variable descriptor > Variable descriptor > VariableDescriptor",
        "section": "Variable descriptor > VariableDescriptor",
        "text": "class ansys.units.variable_descriptor.VariableDescriptor(name: str, dimension: Dimensions)\n\nBases: object\n\nDefines a physical quantity variable descriptor.\n\n!! processed by numpydoc !!\n\n\n\ndimension: Dimensions\n\n\n\n\n\nname: str\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableDescriptor.dimension",
        "title": "Variable descriptor > Variable descriptor > dimension",
        "section": "Variable descriptor > dimension",
        "text": "dimension: Dimensions\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#ansys.units.variable_descriptor.VariableDescriptor.name",
        "title": "Variable descriptor > Variable descriptor > name",
        "section": "Variable descriptor > name",
        "text": "name: str\n\n"
    },
    {
        "objectID": "api/variable_descriptor",
        "href": "api/variable_descriptor.html#example",
        "title": "Variable descriptor > Example",
        "section": "Example",
        "text": "Example"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#quantity-dimensions",
        "title": "Quantity dimensions",
        "section": "Quantity dimensions",
        "text": "Defines immutable objects representing SI base and derived physical dimensions.\nThis module provides globally defined Dimensions instances corresponding to the\nseven SI base quantities (e.g., mass, time) and many commonly used derived quantities\n(e.g., force, energy, pressure). These dimension definitions are used internally\nfor dimensional analysis, quantity construction, and validation.\nEach dimension is represented as a Dimensions object, which captures the\ndimensional exponents of base quantities such as mass, length, and time.\nThis module is not intended for direct modification at runtime. All objects\nare statically defined and immutable.\nBases: object\nDefines immutable dimension objects for standard physical quantities.\nThis class encapsulates SI base dimensions (e.g., MASS, TIME) and\ncommonly used derived dimensions (e.g., FORCE, PRESSURE, ENERGY),\nusing Dimensions instances.\nThese objects support arithmetic operations (multiplication, division,\nexponentiation) to enable dimensional composition and analysis.\nAll attributes are class-level constants and should be treated as immutable.\nQuantity dimensions\nobject"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions",
        "title": "Quantity dimensions > Quantity dimensions > QuantityDimensions",
        "section": "Quantity dimensions > QuantityDimensions",
        "text": "class ansys.units.quantity_dimensions.QuantityDimensions\n\nBases: object\n\nDefines immutable dimension objects for standard physical quantities.\n\nThis class encapsulates SI base dimensions (e.g., MASS, TIME) and\ncommonly used derived dimensions (e.g., FORCE, PRESSURE, ENERGY),\nusing Dimensions instances.\n\nThese objects support arithmetic operations (multiplication, division,\nexponentiation) to enable dimensional composition and analysis.\n\nAll attributes are class-level constants and should be treated as immutable.\n\nExamples\n\n>>> QuantityDimensions.VELOCITY\nDimensions(dimensions={BaseDimensions.LENGTH: 1.0, BaseDimensions.TIME: -1.0})\n\n!! processed by numpydoc !!\n\n\n\nABSOLUTE_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nABSORBANCE = {}\n\n\n\n\n\nABSORBED_DOSE_RATE = {'LENGTH': 2.0, 'TIME': -3.0}\n\n\n\n\n\nACCELERATION = {'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nACCELERATION_MAGNITUDE = {'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nACCELERATION_X = {'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nACCELERATION_Y = {'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nACCELERATION_Z = {'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nACOUSTICAL_ABSORPTION = {}\n\n\n\n\n\nACTION = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n\n\n\n\nANGLE = {'ANGLE': 1.0}\n\n\n\n\n\nANGULAR_ACCELERATION = {'TIME': -2.0}\n\n\n\n\n\nANGULAR_MOMENTUM = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n\n\n\n\nANGULAR_MOMENTUM_MAGNITUDE = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n\n\n\n\nANGULAR_MOMENTUM_X = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n\n\n\n\nANGULAR_MOMENTUM_Y = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n\n\n\n\nANGULAR_MOMENTUM_Z = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n\n\n\n\nANGULAR_VELOCITY = {'TIME': -1.0}\n\n\n\n\n\nAREA = {'LENGTH': 2.0}\n\n\n\n\n\nAREA_DENSITY = {'MASS': 1.0, 'LENGTH': -2.0}\n\n\n\n\n\nATOMIC_MASS = {'MASS': 1.0}\n\n\n\n\n\nATOMIC_NUMBER = {}\n\n\n\n\n\nATTENUATION_COEFFICIENT = {'LENGTH': -1.0}\n\n\n\n\n\nAXIAL_VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nBIREFRINGENCE = {}\n\n\n\n\n\nBULK_MODULUS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nCAPACITANCE = {'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0}\n\n\n\n\n\nCATALYTIC_EFFICIENCY = {'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0, 'TIME': -1.0}\n\n\n\n\n\nCELL_REYNOLDS_NUMBER = {}\n\n\n\n\n\nCHEMICAL_AMOUNT = {'CHEMICAL_AMOUNT': 1.0}\n\n\n\n\n\nCOEFFICIENT_OF_RESTITUTION = {}\n\n\n\n\n\nCOLOR = {}\n\n\n\n\n\nCOMPRESSIBILITY = {'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0}\n\n\n\n\n\nCOMPRESSIVE_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nCONVECTIVE_COURANT_NUMBER = {}\n\n\n\n\n\nCORROSION_RESISTANCE = {}\n\n\n\n\n\nCREEP = {'TIME': -1.0}\n\n\n\n\n\nCURIE_TEMPERATURE = {'TEMPERATURE': 1.0}\n\n\n\n\n\nCURRENT = {'CURRENT': 1.0}\n\n\n\n\n\nDENSITY = {'MASS': 1.0, 'LENGTH': -3.0}\n\n\n\n\n\nDIAMAGNETISM = {}\n\n\n\n\n\nDIELECTRIC_CONSTANT = {}\n\n\n\n\n\nDIELECTRIC_STRENGTH = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0, 'CURRENT': -1.0}\n\n\n\n\n\nDUCTILITY = {}\n\n\n\n\n\nDURABILITY = {}\n\n\n\n\n\nDYNAMIC_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nDYNAMIC_VISCOSITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0}\n\n\n\n\n\nEFFECTIVE_PRANDTL_NUMBER = {}\n\n\n\n\n\nEFFECTIVE_THERMAL_CONDUCTIVITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nEFFECTIVE_VISCOSITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0}\n\n\n\n\n\nELASTICITY = {}\n\n\n\n\n\nELECTRICAL_CAPACITANCE = {'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0}\n\n\n\n\n\nELECTRICAL_CONDUCTANCE = {'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 2.0}\n\n\n\n\n\nELECTRICAL_CONDUCTIVITY = {'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 3.0, 'CURRENT': 2.0}\n\n\n\n\n\nELECTRICAL_IMPEDANCE = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n\n\n\n\nELECTRICAL_INDUCTANCE = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -2.0}\n\n\n\n\n\nELECTRICAL_POTENTIAL = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0}\n\n\n\n\n\nELECTRICAL_REACTANCE = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n\n\n\n\nELECTRICAL_RESISTANCE = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n\n\n\n\nELECTRICAL_RESISTIVITY = {'MASS': 1.0, 'LENGTH': 3.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n\n\n\n\nELECTRIC_CHARGE = {'TIME': 1.0, 'CURRENT': 1.0}\n\n\n\n\n\nELECTRIC_SUSCEPTIBILITY = {}\n\n\n\n\n\nELECTROCALORIC_COEFFICIENT = {'TEMPERATURE': 1.0, 'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 1.0}\n\n\n\n\n\nELECTROSTRICTION = {}\n\n\n\n\n\nELECTRO_OPTIC_EFFECT = {}\n\n\n\n\n\nEMISSIVITY = {}\n\n\n\n\n\nENERGY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nENERGY_DENSITY = {'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nENERGY_FLUX_DENSITY = {'MASS': 1.0, 'TIME': -3.0}\n\n\n\n\n\nENTHALPY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nENTROPY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nFATIGUE_LIMIT = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nFLEXURAL_MODULUS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nFLEXURAL_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nFORCE = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nFORCE_MAGNITUDE = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nFORCE_X = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nFORCE_Y = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nFORCE_Z = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n\n\n\n\nFRACTURE_TOUGHNESS = {'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nFREQUENCY = {'TIME': -1.0}\n\n\n\n\n\nFREQUENCY_DRIFT = {'TIME': -2.0}\n\n\n\n\n\nFRICTION_COEFFICIENT = {}\n\n\n\n\n\nFUEL_EFFICIENCY = {'LENGTH': -2.0}\n\n\n\n\n\nHALF_LIFE = {'TIME': 1.0}\n\n\n\n\n\nHALL_COEFFICIENT = {'LENGTH': 3.0, 'CURRENT': -1.0, 'TIME': -1.0}\n\n\n\n\n\nHARDNESS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nHEAT_CAPACITY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nHEAT_FLUX_DENSITY = {'MASS': 1.0, 'TIME': -3.0}\n\n\n\n\n\nHEAT_OF_VAPORIZATION = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nHYGROSCOPY = {}\n\n\n\n\n\nHYSTERESIS = {}\n\n\n\n\n\nILLUMINANCE = {'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0}\n\n\n\n\n\nINTERNAL_ENERGY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nJERK = {'LENGTH': 1.0, 'TIME': -3.0}\n\n\n\n\n\nKINEMATIC_VISCOSITY = {'LENGTH': 2.0, 'TIME': -1.0}\n\n\n\n\n\nLENGTH = {'LENGTH': 1.0}\n\n\n\n\n\nLIGHT = {'LIGHT': 1.0}\n\n\n\n\n\nLINEAR_MASS_DENSITY = {'MASS': 1.0, 'LENGTH': -1.0}\n\n\n\n\n\nLUMINANCE = {'LIGHT': 1.0, 'LENGTH': -2.0}\n\n\n\n\n\nLUMINOSITY = {'LIGHT': 1.0, 'SOLID_ANGLE': 1.0}\n\n\n\n\n\nLUMINOUS_EXPOSURE = {'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0, 'TIME': 1.0}\n\n\n\n\n\nLUMINOUS_FLUX = {'LIGHT': 1.0, 'SOLID_ANGLE': 1.0}\n\n\n\n\n\nMAGNETIC_FLUX = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -1.0}\n\n\n\n\n\nMAGNETIC_INDUCTION = {'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0}\n\n\n\n\n\nMAGNETIC_PERMEABILITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0}\n\n\n\n\n\nMAGNETIC_VECTOR_POTENTIAL = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0}\n\n\n\n\n\nMAGNETOCALORIC_COEFFICIENT = {'TEMPERATURE': 1.0, 'MASS': -1.0, 'TIME': 2.0, 'CURRENT': 1.0}\n\n\n\n\n\nMAGNETOELECTRIC_POLARIZABILITY = {'LENGTH': -1.0, 'TIME': -1.0}\n\n\n\n\n\nMAGNETORESISTANCE = {}\n\n\n\n\n\nMAGNETOSTRICTION = {}\n\n\n\n\n\nMAGNETOTHERMOELECTRIC_POWER = {'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nMALLEABILITY = {}\n\n\n\n\n\nMASS = {'MASS': 1.0}\n\n\n\n\n\nMASS_CONTROL = {'MASS': 1.0, 'TIME': -3.0}\n\n\n\n\n\nMASS_DIFFUSIVITY = {'LENGTH': 2.0, 'TIME': -1.0}\n\n\n\n\n\nMASS_FLOW_RATE = {'MASS': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMAXIMUM_ENERGY_PRODUCT = {'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nMELTING_POINT = {'TEMPERATURE': 1.0}\n\n\n\n\n\nMESH_VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMESH_VELOCITY_MAGNITUDE = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMESH_VELOCITY_X = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMESH_VELOCITY_Y = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMESH_VELOCITY_Z = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMOLALITY = {'CHEMICAL_AMOUNT': 1.0, 'MASS': -1.0}\n\n\n\n\n\nMOLARITY = {'CHEMICAL_AMOUNT': 1.0, 'LENGTH': -3.0}\n\n\n\n\n\nMOLAR_ENERGY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'CHEMICAL_AMOUNT': -1.0}\n\n\n\n\n\nMOLAR_ENTROPY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0}\n\n\n\n\n\nMOLAR_HEAT_CAPACITY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0}\n\n\n\n\n\nMOLAR_MASS = {'MASS': 1.0, 'CHEMICAL_AMOUNT': -1.0}\n\n\n\n\n\nMOLAR_VOLUME = {'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0}\n\n\n\n\n\nMOMENTUM = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMOMENTUM_MAGNITUDE = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMOMENTUM_X = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMOMENTUM_Y = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMOMENTUM_Z = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nMOMENT_OF_INERTIA = {'MASS': 1.0, 'LENGTH': 2.0}\n\n\n\n\n\nNERNST_COEFFICIENT = {'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nNEUTRON_CROSS_SECTION = {'LENGTH': 2.0}\n\n\n\n\n\nNORMALIZED_Q_CRITERION = {}\n\n\n\n\n\nOPTICAL_ACTIVITY = {'LENGTH': 1.0, 'MASS': -1.0}\n\n\n\n\n\nPERMEABILITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0}\n\n\n\n\n\nPERMITTIVITY = {'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 4.0, 'CURRENT': 2.0}\n\n\n\n\n\nPH = {}\n\n\n\n\n\nPHOTOELASTICITY = {'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0}\n\n\n\n\n\nPHOTOSENSITIVITY = {}\n\n\n\n\n\nPIEZOELECTRIC_CONSTANTS = {'LENGTH': 2.0, 'TIME': -1.0, 'CURRENT': -1.0}\n\n\n\n\n\nPIEZOMAGNETISM = {'CURRENT': -1.0, 'LENGTH': 1.0}\n\n\n\n\n\nPLASTICITY = {}\n\n\n\n\n\nPOISSON_RATIO = {}\n\n\n\n\n\nPOSITION = {'LENGTH': 1.0}\n\n\n\n\n\nPOSITION_MAGNITUDE = {'LENGTH': 1.0}\n\n\n\n\n\nPOSITION_X = {'LENGTH': 1.0}\n\n\n\n\n\nPOSITION_Y = {'LENGTH': 1.0}\n\n\n\n\n\nPOSITION_Z = {'LENGTH': 1.0}\n\n\n\n\n\nPOWER = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0}\n\n\n\n\n\nPRANDTL_NUMBER = {}\n\n\n\n\n\nPRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nPRESSURE_COEFFICIENT = {}\n\n\n\n\n\nPRODUCTION_OF_TURBULENT_KINETIC_ENERGY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -3.0}\n\n\n\n\n\nPYROELECTRICITY = {'CURRENT': 1.0, 'LENGTH': -2.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nPYROMAGNETIC_COEFFICIENT = {'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nQ_CRITERION = {'TIME': -2.0}\n\n\n\n\n\nRADIAL_VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nRADIANCE = {'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0}\n\n\n\n\n\nRADIANT_EXPOSURE = {'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nRADIANT_INTENSITY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0}\n\n\n\n\n\nREACTIVITY = {}\n\n\n\n\n\nREFLECTIVITY = {}\n\n\n\n\n\nREFRACTIVE_INDEX = {}\n\n\n\n\n\nRELATIVE_ATOMIC_MASS = {}\n\n\n\n\n\nRESILIENCE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nSCATTERING = {}\n\n\n\n\n\nSEEBECK_COEFFICIENT = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nSHEAR_MODULUS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nSHEAR_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nSKIN_FRICTION_COEFFICIENT = {}\n\n\n\n\n\nSLIP = {}\n\n\n\n\n\nSNAP = {'LENGTH': 1.0, 'TIME': -4.0}\n\n\n\n\n\nSOLID_ANGLE = {'SOLID_ANGLE': 1.0}\n\n\n\n\n\nSOUND_REFLECTION = {}\n\n\n\n\n\nSOUND_TRANSFER = {}\n\n\n\n\n\nSPECIFIC_ACTIVITY = {'MASS': -1.0, 'TIME': -1.0}\n\n\n\n\n\nSPECIFIC_ANGULAR_MOMENTUM = {'LENGTH': 2.0, 'TIME': -1.0}\n\n\n\n\n\nSPECIFIC_DISSIPATION_RATE = {'TIME': -1.0}\n\n\n\n\n\nSPECIFIC_ENERGY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nSPECIFIC_ENTHALPY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nSPECIFIC_ENTROPY = {'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nSPECIFIC_HEAT_CAPACITY = {'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nSPECIFIC_INTERNAL_ENERGY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nSPECIFIC_INTERNAL_SURFACE_AREA = {'LENGTH': -1.0}\n\n\n\n\n\nSPECIFIC_MODULUS = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nSPECIFIC_STRENGTH = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nSPECIFIC_TOTAL_ENERGY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nSPECIFIC_TOTAL_ENTHALPY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nSPECIFIC_VOLUME = {'LENGTH': 3.0, 'MASS': -1.0}\n\n\n\n\n\nSPECIFIC_WEIGHT = {'MASS': 1.0, 'LENGTH': -2.0, 'TIME': -2.0}\n\n\n\n\n\nSPECTRAL_INTENSITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0}\n\n\n\n\n\nSPECTRAL_IRRADIANCE = {'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -3.0}\n\n\n\n\n\nSPECTRAL_POWER = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0}\n\n\n\n\n\nSPEED_OF_SOUND = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nSPIN_HALL_EFFECT = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n\n\n\n\nSTANDARD_ATOMIC_WEIGHT = {}\n\n\n\n\n\nSTATIC_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nSTRAIN_RATE = {'TIME': -1.0}\n\n\n\n\n\nSTRESS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nSURFACE_ENERGY = {'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nSURFACE_HEAT_FLUX = {'MASS': 1.0, 'TIME': -3.0}\n\n\n\n\n\nSURFACE_HEAT_TRANSFER_COEFFICIENT = {'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nSURFACE_NUSSELT_NUMBER = {}\n\n\n\n\n\nSURFACE_ROUGHNESS = {'LENGTH': 1.0}\n\n\n\n\n\nSURFACE_STANTON_NUMBER = {}\n\n\n\n\n\nSURFACE_TENSION = {'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nTANGENTIAL_VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nTEMPERATURE = {'TEMPERATURE': 1.0}\n\n\n\n\n\nTEMPERATURE_DIFFERENCE = {'TEMPERATURE_DIFFERENCE': 1.0}\n\n\n\n\n\nTEMPERATURE_GRADIENT = {'TEMPERATURE': 1.0, 'LENGTH': -1.0}\n\n\n\n\n\nTENSILE_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nTHERMAL_CONDUCTIVITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nTHERMAL_DIFFUSIVITY = {'LENGTH': 2.0, 'TIME': -1.0}\n\n\n\n\n\nTHERMAL_EXPANSION_COEFFICIENT = {'TEMPERATURE': -1.0}\n\n\n\n\n\nTHERMAL_RESISTANCE = {'TEMPERATURE': 1.0, 'LENGTH': -2.0, 'MASS': -1.0, 'TIME': 3.0}\n\n\n\n\n\nTHIRD_ORDER_ELASTICITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nTIME = {'TIME': 1.0}\n\n\n\n\n\nTORQUE = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nTORQUE_MAGNITUDE = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nTORQUE_X = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nTORQUE_Y = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nTORQUE_Z = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nTOTAL_ENERGY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nTOTAL_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nTOTAL_TEMPERATURE = {'TEMPERATURE': 1.0}\n\n\n\n\n\nTOUGHNESS = {'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0}\n\n\n\n\n\nTRANSMITTANCE = {}\n\n\n\n\n\nTURBULENT_DISSIPATION_RATE = {'LENGTH': 2.0, 'TIME': 3.0}\n\n\n\n\n\nTURBULENT_INTENSITY = {}\n\n\n\n\n\nTURBULENT_KINETIC_ENERGY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n\n\n\n\nTURBULENT_REYNOLDS_NUMBER = {}\n\n\n\n\n\nTURBULENT_VISCOSITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0}\n\n\n\n\n\nTURBULENT_VISCOSITY_RATIO = {}\n\n\n\n\n\nVAPOR_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nVELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nVELOCITY_MAGNITUDE = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nVELOCITY_X = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nVELOCITY_Y = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nVELOCITY_Z = {'LENGTH': 1.0, 'TIME': -1.0}\n\n\n\n\n\nVISCOSITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0}\n\n\n\n\n\nVOLUME = {'LENGTH': 3.0}\n\n\n\n\n\nVOLUMETRIC_FLOW = {'LENGTH': 3.0, 'TIME': -1.0}\n\n\n\n\n\nVORTICITY = {'TIME': -1.0}\n\n\n\n\n\nVORTICITY_MAGNITUDE = {'TIME': -1.0}\n\n\n\n\n\nVORTICITY_X = {'TIME': -1.0}\n\n\n\n\n\nVORTICITY_Y = {'TIME': -1.0}\n\n\n\n\n\nVORTICITY_Z = {'TIME': -1.0}\n\n\n\n\n\nWALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT = {'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0}\n\n\n\n\n\nWALL_ADJACENT_TEMPERATURE = {'TEMPERATURE': 1.0}\n\n\n\n\n\nWALL_SHEAR_STRESS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nWALL_SHEAR_STRESS_MAGNITUDE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nWALL_SHEAR_STRESS_X = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nWALL_SHEAR_STRESS_Y = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nWALL_SHEAR_STRESS_Z = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nWALL_TEMPERATURE = {'TEMPERATURE': 1.0}\n\n\n\n\n\nWALL_TEMPERATURE_THIN = {'TEMPERATURE': 1.0}\n\n\n\n\n\nWALL_Y_PLUS = {}\n\n\n\n\n\nWALL_Y_STAR = {}\n\n\n\n\n\nWAVENUMBER = {'LENGTH': -1.0}\n\n\n\n\n\nYANK = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0}\n\n\n\n\n\nYIELD_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n\n\n\n\nYOUNG_MODULUS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ABSOLUTE_PRESSURE",
        "title": "Quantity dimensions > Quantity dimensions > ABSOLUTE_PRESSURE",
        "section": "Quantity dimensions > ABSOLUTE_PRESSURE",
        "text": "ABSOLUTE_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ABSORBANCE",
        "title": "Quantity dimensions > Quantity dimensions > ABSORBANCE",
        "section": "Quantity dimensions > ABSORBANCE",
        "text": "ABSORBANCE = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ABSORBED_DOSE_RATE",
        "title": "Quantity dimensions > Quantity dimensions > ABSORBED_DOSE_RATE",
        "section": "Quantity dimensions > ABSORBED_DOSE_RATE",
        "text": "ABSORBED_DOSE_RATE = {'LENGTH': 2.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ACCELERATION",
        "title": "Quantity dimensions > Quantity dimensions > ACCELERATION",
        "section": "Quantity dimensions > ACCELERATION",
        "text": "ACCELERATION = {'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ACCELERATION_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > ACCELERATION_MAGNITUDE",
        "section": "Quantity dimensions > ACCELERATION_MAGNITUDE",
        "text": "ACCELERATION_MAGNITUDE = {'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ACCELERATION_X",
        "title": "Quantity dimensions > Quantity dimensions > ACCELERATION_X",
        "section": "Quantity dimensions > ACCELERATION_X",
        "text": "ACCELERATION_X = {'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ACCELERATION_Y",
        "title": "Quantity dimensions > Quantity dimensions > ACCELERATION_Y",
        "section": "Quantity dimensions > ACCELERATION_Y",
        "text": "ACCELERATION_Y = {'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ACCELERATION_Z",
        "title": "Quantity dimensions > Quantity dimensions > ACCELERATION_Z",
        "section": "Quantity dimensions > ACCELERATION_Z",
        "text": "ACCELERATION_Z = {'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ACOUSTICAL_ABSORPTION",
        "title": "Quantity dimensions > Quantity dimensions > ACOUSTICAL_ABSORPTION",
        "section": "Quantity dimensions > ACOUSTICAL_ABSORPTION",
        "text": "ACOUSTICAL_ABSORPTION = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ACTION",
        "title": "Quantity dimensions > Quantity dimensions > ACTION",
        "section": "Quantity dimensions > ACTION",
        "text": "ACTION = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ANGLE",
        "title": "Quantity dimensions > Quantity dimensions > ANGLE",
        "section": "Quantity dimensions > ANGLE",
        "text": "ANGLE = {'ANGLE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ANGULAR_ACCELERATION",
        "title": "Quantity dimensions > Quantity dimensions > ANGULAR_ACCELERATION",
        "section": "Quantity dimensions > ANGULAR_ACCELERATION",
        "text": "ANGULAR_ACCELERATION = {'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ANGULAR_MOMENTUM",
        "title": "Quantity dimensions > Quantity dimensions > ANGULAR_MOMENTUM",
        "section": "Quantity dimensions > ANGULAR_MOMENTUM",
        "text": "ANGULAR_MOMENTUM = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ANGULAR_MOMENTUM_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > ANGULAR_MOMENTUM_MAGNITUDE",
        "section": "Quantity dimensions > ANGULAR_MOMENTUM_MAGNITUDE",
        "text": "ANGULAR_MOMENTUM_MAGNITUDE = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ANGULAR_MOMENTUM_X",
        "title": "Quantity dimensions > Quantity dimensions > ANGULAR_MOMENTUM_X",
        "section": "Quantity dimensions > ANGULAR_MOMENTUM_X",
        "text": "ANGULAR_MOMENTUM_X = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ANGULAR_MOMENTUM_Y",
        "title": "Quantity dimensions > Quantity dimensions > ANGULAR_MOMENTUM_Y",
        "section": "Quantity dimensions > ANGULAR_MOMENTUM_Y",
        "text": "ANGULAR_MOMENTUM_Y = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ANGULAR_MOMENTUM_Z",
        "title": "Quantity dimensions > Quantity dimensions > ANGULAR_MOMENTUM_Z",
        "section": "Quantity dimensions > ANGULAR_MOMENTUM_Z",
        "text": "ANGULAR_MOMENTUM_Z = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ANGULAR_VELOCITY",
        "title": "Quantity dimensions > Quantity dimensions > ANGULAR_VELOCITY",
        "section": "Quantity dimensions > ANGULAR_VELOCITY",
        "text": "ANGULAR_VELOCITY = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.AREA",
        "title": "Quantity dimensions > Quantity dimensions > AREA",
        "section": "Quantity dimensions > AREA",
        "text": "AREA = {'LENGTH': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.AREA_DENSITY",
        "title": "Quantity dimensions > Quantity dimensions > AREA_DENSITY",
        "section": "Quantity dimensions > AREA_DENSITY",
        "text": "AREA_DENSITY = {'MASS': 1.0, 'LENGTH': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ATOMIC_MASS",
        "title": "Quantity dimensions > Quantity dimensions > ATOMIC_MASS",
        "section": "Quantity dimensions > ATOMIC_MASS",
        "text": "ATOMIC_MASS = {'MASS': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ATOMIC_NUMBER",
        "title": "Quantity dimensions > Quantity dimensions > ATOMIC_NUMBER",
        "section": "Quantity dimensions > ATOMIC_NUMBER",
        "text": "ATOMIC_NUMBER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ATTENUATION_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > ATTENUATION_COEFFICIENT",
        "section": "Quantity dimensions > ATTENUATION_COEFFICIENT",
        "text": "ATTENUATION_COEFFICIENT = {'LENGTH': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.AXIAL_VELOCITY",
        "title": "Quantity dimensions > Quantity dimensions > AXIAL_VELOCITY",
        "section": "Quantity dimensions > AXIAL_VELOCITY",
        "text": "AXIAL_VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.BIREFRINGENCE",
        "title": "Quantity dimensions > Quantity dimensions > BIREFRINGENCE",
        "section": "Quantity dimensions > BIREFRINGENCE",
        "text": "BIREFRINGENCE = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.BULK_MODULUS",
        "title": "Quantity dimensions > Quantity dimensions > BULK_MODULUS",
        "section": "Quantity dimensions > BULK_MODULUS",
        "text": "BULK_MODULUS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CAPACITANCE",
        "title": "Quantity dimensions > Quantity dimensions > CAPACITANCE",
        "section": "Quantity dimensions > CAPACITANCE",
        "text": "CAPACITANCE = {'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CATALYTIC_EFFICIENCY",
        "title": "Quantity dimensions > Quantity dimensions > CATALYTIC_EFFICIENCY",
        "section": "Quantity dimensions > CATALYTIC_EFFICIENCY",
        "text": "CATALYTIC_EFFICIENCY = {'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CELL_REYNOLDS_NUMBER",
        "title": "Quantity dimensions > Quantity dimensions > CELL_REYNOLDS_NUMBER",
        "section": "Quantity dimensions > CELL_REYNOLDS_NUMBER",
        "text": "CELL_REYNOLDS_NUMBER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CHEMICAL_AMOUNT",
        "title": "Quantity dimensions > Quantity dimensions > CHEMICAL_AMOUNT",
        "section": "Quantity dimensions > CHEMICAL_AMOUNT",
        "text": "CHEMICAL_AMOUNT = {'CHEMICAL_AMOUNT': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.COEFFICIENT_OF_RESTITUTION",
        "title": "Quantity dimensions > Quantity dimensions > COEFFICIENT_OF_RESTITUTION",
        "section": "Quantity dimensions > COEFFICIENT_OF_RESTITUTION",
        "text": "COEFFICIENT_OF_RESTITUTION = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.COLOR",
        "title": "Quantity dimensions > Quantity dimensions > COLOR",
        "section": "Quantity dimensions > COLOR",
        "text": "COLOR = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.COMPRESSIBILITY",
        "title": "Quantity dimensions > Quantity dimensions > COMPRESSIBILITY",
        "section": "Quantity dimensions > COMPRESSIBILITY",
        "text": "COMPRESSIBILITY = {'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.COMPRESSIVE_STRENGTH",
        "title": "Quantity dimensions > Quantity dimensions > COMPRESSIVE_STRENGTH",
        "section": "Quantity dimensions > COMPRESSIVE_STRENGTH",
        "text": "COMPRESSIVE_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CONVECTIVE_COURANT_NUMBER",
        "title": "Quantity dimensions > Quantity dimensions > CONVECTIVE_COURANT_NUMBER",
        "section": "Quantity dimensions > CONVECTIVE_COURANT_NUMBER",
        "text": "CONVECTIVE_COURANT_NUMBER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CORROSION_RESISTANCE",
        "title": "Quantity dimensions > Quantity dimensions > CORROSION_RESISTANCE",
        "section": "Quantity dimensions > CORROSION_RESISTANCE",
        "text": "CORROSION_RESISTANCE = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CREEP",
        "title": "Quantity dimensions > Quantity dimensions > CREEP",
        "section": "Quantity dimensions > CREEP",
        "text": "CREEP = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CURIE_TEMPERATURE",
        "title": "Quantity dimensions > Quantity dimensions > CURIE_TEMPERATURE",
        "section": "Quantity dimensions > CURIE_TEMPERATURE",
        "text": "CURIE_TEMPERATURE = {'TEMPERATURE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.CURRENT",
        "title": "Quantity dimensions > Quantity dimensions > CURRENT",
        "section": "Quantity dimensions > CURRENT",
        "text": "CURRENT = {'CURRENT': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.DENSITY",
        "title": "Quantity dimensions > Quantity dimensions > DENSITY",
        "section": "Quantity dimensions > DENSITY",
        "text": "DENSITY = {'MASS': 1.0, 'LENGTH': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.DIAMAGNETISM",
        "title": "Quantity dimensions > Quantity dimensions > DIAMAGNETISM",
        "section": "Quantity dimensions > DIAMAGNETISM",
        "text": "DIAMAGNETISM = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.DIELECTRIC_CONSTANT",
        "title": "Quantity dimensions > Quantity dimensions > DIELECTRIC_CONSTANT",
        "section": "Quantity dimensions > DIELECTRIC_CONSTANT",
        "text": "DIELECTRIC_CONSTANT = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.DIELECTRIC_STRENGTH",
        "title": "Quantity dimensions > Quantity dimensions > DIELECTRIC_STRENGTH",
        "section": "Quantity dimensions > DIELECTRIC_STRENGTH",
        "text": "DIELECTRIC_STRENGTH = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0, 'CURRENT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.DUCTILITY",
        "title": "Quantity dimensions > Quantity dimensions > DUCTILITY",
        "section": "Quantity dimensions > DUCTILITY",
        "text": "DUCTILITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.DURABILITY",
        "title": "Quantity dimensions > Quantity dimensions > DURABILITY",
        "section": "Quantity dimensions > DURABILITY",
        "text": "DURABILITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.DYNAMIC_PRESSURE",
        "title": "Quantity dimensions > Quantity dimensions > DYNAMIC_PRESSURE",
        "section": "Quantity dimensions > DYNAMIC_PRESSURE",
        "text": "DYNAMIC_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.DYNAMIC_VISCOSITY",
        "title": "Quantity dimensions > Quantity dimensions > DYNAMIC_VISCOSITY",
        "section": "Quantity dimensions > DYNAMIC_VISCOSITY",
        "text": "DYNAMIC_VISCOSITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.EFFECTIVE_PRANDTL_NUMBER",
        "title": "Quantity dimensions > Quantity dimensions > EFFECTIVE_PRANDTL_NUMBER",
        "section": "Quantity dimensions > EFFECTIVE_PRANDTL_NUMBER",
        "text": "EFFECTIVE_PRANDTL_NUMBER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.EFFECTIVE_THERMAL_CONDUCTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > EFFECTIVE_THERMAL_CONDUCTIVITY",
        "section": "Quantity dimensions > EFFECTIVE_THERMAL_CONDUCTIVITY",
        "text": "EFFECTIVE_THERMAL_CONDUCTIVITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.EFFECTIVE_VISCOSITY",
        "title": "Quantity dimensions > Quantity dimensions > EFFECTIVE_VISCOSITY",
        "section": "Quantity dimensions > EFFECTIVE_VISCOSITY",
        "text": "EFFECTIVE_VISCOSITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELASTICITY",
        "title": "Quantity dimensions > Quantity dimensions > ELASTICITY",
        "section": "Quantity dimensions > ELASTICITY",
        "text": "ELASTICITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_CAPACITANCE",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_CAPACITANCE",
        "section": "Quantity dimensions > ELECTRICAL_CAPACITANCE",
        "text": "ELECTRICAL_CAPACITANCE = {'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 4.0, 'CURRENT': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_CONDUCTANCE",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_CONDUCTANCE",
        "section": "Quantity dimensions > ELECTRICAL_CONDUCTANCE",
        "text": "ELECTRICAL_CONDUCTANCE = {'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_CONDUCTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_CONDUCTIVITY",
        "section": "Quantity dimensions > ELECTRICAL_CONDUCTIVITY",
        "text": "ELECTRICAL_CONDUCTIVITY = {'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 3.0, 'CURRENT': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_IMPEDANCE",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_IMPEDANCE",
        "section": "Quantity dimensions > ELECTRICAL_IMPEDANCE",
        "text": "ELECTRICAL_IMPEDANCE = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_INDUCTANCE",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_INDUCTANCE",
        "section": "Quantity dimensions > ELECTRICAL_INDUCTANCE",
        "text": "ELECTRICAL_INDUCTANCE = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_POTENTIAL",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_POTENTIAL",
        "section": "Quantity dimensions > ELECTRICAL_POTENTIAL",
        "text": "ELECTRICAL_POTENTIAL = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_REACTANCE",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_REACTANCE",
        "section": "Quantity dimensions > ELECTRICAL_REACTANCE",
        "text": "ELECTRICAL_REACTANCE = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_RESISTANCE",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_RESISTANCE",
        "section": "Quantity dimensions > ELECTRICAL_RESISTANCE",
        "text": "ELECTRICAL_RESISTANCE = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRICAL_RESISTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRICAL_RESISTIVITY",
        "section": "Quantity dimensions > ELECTRICAL_RESISTIVITY",
        "text": "ELECTRICAL_RESISTIVITY = {'MASS': 1.0, 'LENGTH': 3.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRIC_CHARGE",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRIC_CHARGE",
        "section": "Quantity dimensions > ELECTRIC_CHARGE",
        "text": "ELECTRIC_CHARGE = {'TIME': 1.0, 'CURRENT': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRIC_SUSCEPTIBILITY",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRIC_SUSCEPTIBILITY",
        "section": "Quantity dimensions > ELECTRIC_SUSCEPTIBILITY",
        "text": "ELECTRIC_SUSCEPTIBILITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTROCALORIC_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > ELECTROCALORIC_COEFFICIENT",
        "section": "Quantity dimensions > ELECTROCALORIC_COEFFICIENT",
        "text": "ELECTROCALORIC_COEFFICIENT = {'TEMPERATURE': 1.0, 'MASS': -1.0, 'LENGTH': -2.0, 'TIME': 3.0, 'CURRENT': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTROSTRICTION",
        "title": "Quantity dimensions > Quantity dimensions > ELECTROSTRICTION",
        "section": "Quantity dimensions > ELECTROSTRICTION",
        "text": "ELECTROSTRICTION = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ELECTRO_OPTIC_EFFECT",
        "title": "Quantity dimensions > Quantity dimensions > ELECTRO_OPTIC_EFFECT",
        "section": "Quantity dimensions > ELECTRO_OPTIC_EFFECT",
        "text": "ELECTRO_OPTIC_EFFECT = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.EMISSIVITY",
        "title": "Quantity dimensions > Quantity dimensions > EMISSIVITY",
        "section": "Quantity dimensions > EMISSIVITY",
        "text": "EMISSIVITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > ENERGY",
        "section": "Quantity dimensions > ENERGY",
        "text": "ENERGY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ENERGY_DENSITY",
        "title": "Quantity dimensions > Quantity dimensions > ENERGY_DENSITY",
        "section": "Quantity dimensions > ENERGY_DENSITY",
        "text": "ENERGY_DENSITY = {'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ENERGY_FLUX_DENSITY",
        "title": "Quantity dimensions > Quantity dimensions > ENERGY_FLUX_DENSITY",
        "section": "Quantity dimensions > ENERGY_FLUX_DENSITY",
        "text": "ENERGY_FLUX_DENSITY = {'MASS': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ENTHALPY",
        "title": "Quantity dimensions > Quantity dimensions > ENTHALPY",
        "section": "Quantity dimensions > ENTHALPY",
        "text": "ENTHALPY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ENTROPY",
        "title": "Quantity dimensions > Quantity dimensions > ENTROPY",
        "section": "Quantity dimensions > ENTROPY",
        "text": "ENTROPY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FATIGUE_LIMIT",
        "title": "Quantity dimensions > Quantity dimensions > FATIGUE_LIMIT",
        "section": "Quantity dimensions > FATIGUE_LIMIT",
        "text": "FATIGUE_LIMIT = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FLEXURAL_MODULUS",
        "title": "Quantity dimensions > Quantity dimensions > FLEXURAL_MODULUS",
        "section": "Quantity dimensions > FLEXURAL_MODULUS",
        "text": "FLEXURAL_MODULUS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FLEXURAL_STRENGTH",
        "title": "Quantity dimensions > Quantity dimensions > FLEXURAL_STRENGTH",
        "section": "Quantity dimensions > FLEXURAL_STRENGTH",
        "text": "FLEXURAL_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FORCE",
        "title": "Quantity dimensions > Quantity dimensions > FORCE",
        "section": "Quantity dimensions > FORCE",
        "text": "FORCE = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FORCE_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > FORCE_MAGNITUDE",
        "section": "Quantity dimensions > FORCE_MAGNITUDE",
        "text": "FORCE_MAGNITUDE = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FORCE_X",
        "title": "Quantity dimensions > Quantity dimensions > FORCE_X",
        "section": "Quantity dimensions > FORCE_X",
        "text": "FORCE_X = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FORCE_Y",
        "title": "Quantity dimensions > Quantity dimensions > FORCE_Y",
        "section": "Quantity dimensions > FORCE_Y",
        "text": "FORCE_Y = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FORCE_Z",
        "title": "Quantity dimensions > Quantity dimensions > FORCE_Z",
        "section": "Quantity dimensions > FORCE_Z",
        "text": "FORCE_Z = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FRACTURE_TOUGHNESS",
        "title": "Quantity dimensions > Quantity dimensions > FRACTURE_TOUGHNESS",
        "section": "Quantity dimensions > FRACTURE_TOUGHNESS",
        "text": "FRACTURE_TOUGHNESS = {'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FREQUENCY",
        "title": "Quantity dimensions > Quantity dimensions > FREQUENCY",
        "section": "Quantity dimensions > FREQUENCY",
        "text": "FREQUENCY = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FREQUENCY_DRIFT",
        "title": "Quantity dimensions > Quantity dimensions > FREQUENCY_DRIFT",
        "section": "Quantity dimensions > FREQUENCY_DRIFT",
        "text": "FREQUENCY_DRIFT = {'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FRICTION_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > FRICTION_COEFFICIENT",
        "section": "Quantity dimensions > FRICTION_COEFFICIENT",
        "text": "FRICTION_COEFFICIENT = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.FUEL_EFFICIENCY",
        "title": "Quantity dimensions > Quantity dimensions > FUEL_EFFICIENCY",
        "section": "Quantity dimensions > FUEL_EFFICIENCY",
        "text": "FUEL_EFFICIENCY = {'LENGTH': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.HALF_LIFE",
        "title": "Quantity dimensions > Quantity dimensions > HALF_LIFE",
        "section": "Quantity dimensions > HALF_LIFE",
        "text": "HALF_LIFE = {'TIME': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.HALL_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > HALL_COEFFICIENT",
        "section": "Quantity dimensions > HALL_COEFFICIENT",
        "text": "HALL_COEFFICIENT = {'LENGTH': 3.0, 'CURRENT': -1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.HARDNESS",
        "title": "Quantity dimensions > Quantity dimensions > HARDNESS",
        "section": "Quantity dimensions > HARDNESS",
        "text": "HARDNESS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.HEAT_CAPACITY",
        "title": "Quantity dimensions > Quantity dimensions > HEAT_CAPACITY",
        "section": "Quantity dimensions > HEAT_CAPACITY",
        "text": "HEAT_CAPACITY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.HEAT_FLUX_DENSITY",
        "title": "Quantity dimensions > Quantity dimensions > HEAT_FLUX_DENSITY",
        "section": "Quantity dimensions > HEAT_FLUX_DENSITY",
        "text": "HEAT_FLUX_DENSITY = {'MASS': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.HEAT_OF_VAPORIZATION",
        "title": "Quantity dimensions > Quantity dimensions > HEAT_OF_VAPORIZATION",
        "section": "Quantity dimensions > HEAT_OF_VAPORIZATION",
        "text": "HEAT_OF_VAPORIZATION = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.HYGROSCOPY",
        "title": "Quantity dimensions > Quantity dimensions > HYGROSCOPY",
        "section": "Quantity dimensions > HYGROSCOPY",
        "text": "HYGROSCOPY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.HYSTERESIS",
        "title": "Quantity dimensions > Quantity dimensions > HYSTERESIS",
        "section": "Quantity dimensions > HYSTERESIS",
        "text": "HYSTERESIS = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.ILLUMINANCE",
        "title": "Quantity dimensions > Quantity dimensions > ILLUMINANCE",
        "section": "Quantity dimensions > ILLUMINANCE",
        "text": "ILLUMINANCE = {'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.INTERNAL_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > INTERNAL_ENERGY",
        "section": "Quantity dimensions > INTERNAL_ENERGY",
        "text": "INTERNAL_ENERGY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.JERK",
        "title": "Quantity dimensions > Quantity dimensions > JERK",
        "section": "Quantity dimensions > JERK",
        "text": "JERK = {'LENGTH': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.KINEMATIC_VISCOSITY",
        "title": "Quantity dimensions > Quantity dimensions > KINEMATIC_VISCOSITY",
        "section": "Quantity dimensions > KINEMATIC_VISCOSITY",
        "text": "KINEMATIC_VISCOSITY = {'LENGTH': 2.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.LENGTH",
        "title": "Quantity dimensions > Quantity dimensions > LENGTH",
        "section": "Quantity dimensions > LENGTH",
        "text": "LENGTH = {'LENGTH': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.LIGHT",
        "title": "Quantity dimensions > Quantity dimensions > LIGHT",
        "section": "Quantity dimensions > LIGHT",
        "text": "LIGHT = {'LIGHT': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.LINEAR_MASS_DENSITY",
        "title": "Quantity dimensions > Quantity dimensions > LINEAR_MASS_DENSITY",
        "section": "Quantity dimensions > LINEAR_MASS_DENSITY",
        "text": "LINEAR_MASS_DENSITY = {'MASS': 1.0, 'LENGTH': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.LUMINANCE",
        "title": "Quantity dimensions > Quantity dimensions > LUMINANCE",
        "section": "Quantity dimensions > LUMINANCE",
        "text": "LUMINANCE = {'LIGHT': 1.0, 'LENGTH': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.LUMINOSITY",
        "title": "Quantity dimensions > Quantity dimensions > LUMINOSITY",
        "section": "Quantity dimensions > LUMINOSITY",
        "text": "LUMINOSITY = {'LIGHT': 1.0, 'SOLID_ANGLE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.LUMINOUS_EXPOSURE",
        "title": "Quantity dimensions > Quantity dimensions > LUMINOUS_EXPOSURE",
        "section": "Quantity dimensions > LUMINOUS_EXPOSURE",
        "text": "LUMINOUS_EXPOSURE = {'LIGHT': 1.0, 'SOLID_ANGLE': 1.0, 'LENGTH': -2.0, 'TIME': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.LUMINOUS_FLUX",
        "title": "Quantity dimensions > Quantity dimensions > LUMINOUS_FLUX",
        "section": "Quantity dimensions > LUMINOUS_FLUX",
        "text": "LUMINOUS_FLUX = {'LIGHT': 1.0, 'SOLID_ANGLE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETIC_FLUX",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETIC_FLUX",
        "section": "Quantity dimensions > MAGNETIC_FLUX",
        "text": "MAGNETIC_FLUX = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -2.0, 'CURRENT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETIC_INDUCTION",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETIC_INDUCTION",
        "section": "Quantity dimensions > MAGNETIC_INDUCTION",
        "text": "MAGNETIC_INDUCTION = {'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETIC_PERMEABILITY",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETIC_PERMEABILITY",
        "section": "Quantity dimensions > MAGNETIC_PERMEABILITY",
        "text": "MAGNETIC_PERMEABILITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETIC_VECTOR_POTENTIAL",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETIC_VECTOR_POTENTIAL",
        "section": "Quantity dimensions > MAGNETIC_VECTOR_POTENTIAL",
        "text": "MAGNETIC_VECTOR_POTENTIAL = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETOCALORIC_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETOCALORIC_COEFFICIENT",
        "section": "Quantity dimensions > MAGNETOCALORIC_COEFFICIENT",
        "text": "MAGNETOCALORIC_COEFFICIENT = {'TEMPERATURE': 1.0, 'MASS': -1.0, 'TIME': 2.0, 'CURRENT': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETOELECTRIC_POLARIZABILITY",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETOELECTRIC_POLARIZABILITY",
        "section": "Quantity dimensions > MAGNETOELECTRIC_POLARIZABILITY",
        "text": "MAGNETOELECTRIC_POLARIZABILITY = {'LENGTH': -1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETORESISTANCE",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETORESISTANCE",
        "section": "Quantity dimensions > MAGNETORESISTANCE",
        "text": "MAGNETORESISTANCE = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETOSTRICTION",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETOSTRICTION",
        "section": "Quantity dimensions > MAGNETOSTRICTION",
        "text": "MAGNETOSTRICTION = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAGNETOTHERMOELECTRIC_POWER",
        "title": "Quantity dimensions > Quantity dimensions > MAGNETOTHERMOELECTRIC_POWER",
        "section": "Quantity dimensions > MAGNETOTHERMOELECTRIC_POWER",
        "text": "MAGNETOTHERMOELECTRIC_POWER = {'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MALLEABILITY",
        "title": "Quantity dimensions > Quantity dimensions > MALLEABILITY",
        "section": "Quantity dimensions > MALLEABILITY",
        "text": "MALLEABILITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MASS",
        "title": "Quantity dimensions > Quantity dimensions > MASS",
        "section": "Quantity dimensions > MASS",
        "text": "MASS = {'MASS': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MASS_CONTROL",
        "title": "Quantity dimensions > Quantity dimensions > MASS_CONTROL",
        "section": "Quantity dimensions > MASS_CONTROL",
        "text": "MASS_CONTROL = {'MASS': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MASS_DIFFUSIVITY",
        "title": "Quantity dimensions > Quantity dimensions > MASS_DIFFUSIVITY",
        "section": "Quantity dimensions > MASS_DIFFUSIVITY",
        "text": "MASS_DIFFUSIVITY = {'LENGTH': 2.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MASS_FLOW_RATE",
        "title": "Quantity dimensions > Quantity dimensions > MASS_FLOW_RATE",
        "section": "Quantity dimensions > MASS_FLOW_RATE",
        "text": "MASS_FLOW_RATE = {'MASS': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MAXIMUM_ENERGY_PRODUCT",
        "title": "Quantity dimensions > Quantity dimensions > MAXIMUM_ENERGY_PRODUCT",
        "section": "Quantity dimensions > MAXIMUM_ENERGY_PRODUCT",
        "text": "MAXIMUM_ENERGY_PRODUCT = {'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MELTING_POINT",
        "title": "Quantity dimensions > Quantity dimensions > MELTING_POINT",
        "section": "Quantity dimensions > MELTING_POINT",
        "text": "MELTING_POINT = {'TEMPERATURE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MESH_VELOCITY",
        "title": "Quantity dimensions > Quantity dimensions > MESH_VELOCITY",
        "section": "Quantity dimensions > MESH_VELOCITY",
        "text": "MESH_VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MESH_VELOCITY_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > MESH_VELOCITY_MAGNITUDE",
        "section": "Quantity dimensions > MESH_VELOCITY_MAGNITUDE",
        "text": "MESH_VELOCITY_MAGNITUDE = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MESH_VELOCITY_X",
        "title": "Quantity dimensions > Quantity dimensions > MESH_VELOCITY_X",
        "section": "Quantity dimensions > MESH_VELOCITY_X",
        "text": "MESH_VELOCITY_X = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MESH_VELOCITY_Y",
        "title": "Quantity dimensions > Quantity dimensions > MESH_VELOCITY_Y",
        "section": "Quantity dimensions > MESH_VELOCITY_Y",
        "text": "MESH_VELOCITY_Y = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MESH_VELOCITY_Z",
        "title": "Quantity dimensions > Quantity dimensions > MESH_VELOCITY_Z",
        "section": "Quantity dimensions > MESH_VELOCITY_Z",
        "text": "MESH_VELOCITY_Z = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOLALITY",
        "title": "Quantity dimensions > Quantity dimensions > MOLALITY",
        "section": "Quantity dimensions > MOLALITY",
        "text": "MOLALITY = {'CHEMICAL_AMOUNT': 1.0, 'MASS': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOLARITY",
        "title": "Quantity dimensions > Quantity dimensions > MOLARITY",
        "section": "Quantity dimensions > MOLARITY",
        "text": "MOLARITY = {'CHEMICAL_AMOUNT': 1.0, 'LENGTH': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOLAR_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > MOLAR_ENERGY",
        "section": "Quantity dimensions > MOLAR_ENERGY",
        "text": "MOLAR_ENERGY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'CHEMICAL_AMOUNT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOLAR_ENTROPY",
        "title": "Quantity dimensions > Quantity dimensions > MOLAR_ENTROPY",
        "section": "Quantity dimensions > MOLAR_ENTROPY",
        "text": "MOLAR_ENTROPY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOLAR_HEAT_CAPACITY",
        "title": "Quantity dimensions > Quantity dimensions > MOLAR_HEAT_CAPACITY",
        "section": "Quantity dimensions > MOLAR_HEAT_CAPACITY",
        "text": "MOLAR_HEAT_CAPACITY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0, 'TEMPERATURE': -1.0, 'CHEMICAL_AMOUNT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOLAR_MASS",
        "title": "Quantity dimensions > Quantity dimensions > MOLAR_MASS",
        "section": "Quantity dimensions > MOLAR_MASS",
        "text": "MOLAR_MASS = {'MASS': 1.0, 'CHEMICAL_AMOUNT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOLAR_VOLUME",
        "title": "Quantity dimensions > Quantity dimensions > MOLAR_VOLUME",
        "section": "Quantity dimensions > MOLAR_VOLUME",
        "text": "MOLAR_VOLUME = {'LENGTH': 3.0, 'CHEMICAL_AMOUNT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOMENTUM",
        "title": "Quantity dimensions > Quantity dimensions > MOMENTUM",
        "section": "Quantity dimensions > MOMENTUM",
        "text": "MOMENTUM = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOMENTUM_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > MOMENTUM_MAGNITUDE",
        "section": "Quantity dimensions > MOMENTUM_MAGNITUDE",
        "text": "MOMENTUM_MAGNITUDE = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOMENTUM_X",
        "title": "Quantity dimensions > Quantity dimensions > MOMENTUM_X",
        "section": "Quantity dimensions > MOMENTUM_X",
        "text": "MOMENTUM_X = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOMENTUM_Y",
        "title": "Quantity dimensions > Quantity dimensions > MOMENTUM_Y",
        "section": "Quantity dimensions > MOMENTUM_Y",
        "text": "MOMENTUM_Y = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOMENTUM_Z",
        "title": "Quantity dimensions > Quantity dimensions > MOMENTUM_Z",
        "section": "Quantity dimensions > MOMENTUM_Z",
        "text": "MOMENTUM_Z = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.MOMENT_OF_INERTIA",
        "title": "Quantity dimensions > Quantity dimensions > MOMENT_OF_INERTIA",
        "section": "Quantity dimensions > MOMENT_OF_INERTIA",
        "text": "MOMENT_OF_INERTIA = {'MASS': 1.0, 'LENGTH': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.NERNST_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > NERNST_COEFFICIENT",
        "section": "Quantity dimensions > NERNST_COEFFICIENT",
        "text": "NERNST_COEFFICIENT = {'LENGTH': 2.0, 'TIME': -1.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.NEUTRON_CROSS_SECTION",
        "title": "Quantity dimensions > Quantity dimensions > NEUTRON_CROSS_SECTION",
        "section": "Quantity dimensions > NEUTRON_CROSS_SECTION",
        "text": "NEUTRON_CROSS_SECTION = {'LENGTH': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.NORMALIZED_Q_CRITERION",
        "title": "Quantity dimensions > Quantity dimensions > NORMALIZED_Q_CRITERION",
        "section": "Quantity dimensions > NORMALIZED_Q_CRITERION",
        "text": "NORMALIZED_Q_CRITERION = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.OPTICAL_ACTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > OPTICAL_ACTIVITY",
        "section": "Quantity dimensions > OPTICAL_ACTIVITY",
        "text": "OPTICAL_ACTIVITY = {'LENGTH': 1.0, 'MASS': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PERMEABILITY",
        "title": "Quantity dimensions > Quantity dimensions > PERMEABILITY",
        "section": "Quantity dimensions > PERMEABILITY",
        "text": "PERMEABILITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PERMITTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > PERMITTIVITY",
        "section": "Quantity dimensions > PERMITTIVITY",
        "text": "PERMITTIVITY = {'MASS': -1.0, 'LENGTH': -3.0, 'TIME': 4.0, 'CURRENT': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PH",
        "title": "Quantity dimensions > Quantity dimensions > PH",
        "section": "Quantity dimensions > PH",
        "text": "PH = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PHOTOELASTICITY",
        "title": "Quantity dimensions > Quantity dimensions > PHOTOELASTICITY",
        "section": "Quantity dimensions > PHOTOELASTICITY",
        "text": "PHOTOELASTICITY = {'MASS': -1.0, 'LENGTH': 1.0, 'TIME': 2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PHOTOSENSITIVITY",
        "title": "Quantity dimensions > Quantity dimensions > PHOTOSENSITIVITY",
        "section": "Quantity dimensions > PHOTOSENSITIVITY",
        "text": "PHOTOSENSITIVITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PIEZOELECTRIC_CONSTANTS",
        "title": "Quantity dimensions > Quantity dimensions > PIEZOELECTRIC_CONSTANTS",
        "section": "Quantity dimensions > PIEZOELECTRIC_CONSTANTS",
        "text": "PIEZOELECTRIC_CONSTANTS = {'LENGTH': 2.0, 'TIME': -1.0, 'CURRENT': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PIEZOMAGNETISM",
        "title": "Quantity dimensions > Quantity dimensions > PIEZOMAGNETISM",
        "section": "Quantity dimensions > PIEZOMAGNETISM",
        "text": "PIEZOMAGNETISM = {'CURRENT': -1.0, 'LENGTH': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PLASTICITY",
        "title": "Quantity dimensions > Quantity dimensions > PLASTICITY",
        "section": "Quantity dimensions > PLASTICITY",
        "text": "PLASTICITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.POISSON_RATIO",
        "title": "Quantity dimensions > Quantity dimensions > POISSON_RATIO",
        "section": "Quantity dimensions > POISSON_RATIO",
        "text": "POISSON_RATIO = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.POSITION",
        "title": "Quantity dimensions > Quantity dimensions > POSITION",
        "section": "Quantity dimensions > POSITION",
        "text": "POSITION = {'LENGTH': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.POSITION_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > POSITION_MAGNITUDE",
        "section": "Quantity dimensions > POSITION_MAGNITUDE",
        "text": "POSITION_MAGNITUDE = {'LENGTH': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.POSITION_X",
        "title": "Quantity dimensions > Quantity dimensions > POSITION_X",
        "section": "Quantity dimensions > POSITION_X",
        "text": "POSITION_X = {'LENGTH': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.POSITION_Y",
        "title": "Quantity dimensions > Quantity dimensions > POSITION_Y",
        "section": "Quantity dimensions > POSITION_Y",
        "text": "POSITION_Y = {'LENGTH': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.POSITION_Z",
        "title": "Quantity dimensions > Quantity dimensions > POSITION_Z",
        "section": "Quantity dimensions > POSITION_Z",
        "text": "POSITION_Z = {'LENGTH': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.POWER",
        "title": "Quantity dimensions > Quantity dimensions > POWER",
        "section": "Quantity dimensions > POWER",
        "text": "POWER = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PRANDTL_NUMBER",
        "title": "Quantity dimensions > Quantity dimensions > PRANDTL_NUMBER",
        "section": "Quantity dimensions > PRANDTL_NUMBER",
        "text": "PRANDTL_NUMBER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PRESSURE",
        "title": "Quantity dimensions > Quantity dimensions > PRESSURE",
        "section": "Quantity dimensions > PRESSURE",
        "text": "PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PRESSURE_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > PRESSURE_COEFFICIENT",
        "section": "Quantity dimensions > PRESSURE_COEFFICIENT",
        "text": "PRESSURE_COEFFICIENT = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "section": "Quantity dimensions > PRODUCTION_OF_TURBULENT_KINETIC_ENERGY",
        "text": "PRODUCTION_OF_TURBULENT_KINETIC_ENERGY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PYROELECTRICITY",
        "title": "Quantity dimensions > Quantity dimensions > PYROELECTRICITY",
        "section": "Quantity dimensions > PYROELECTRICITY",
        "text": "PYROELECTRICITY = {'CURRENT': 1.0, 'LENGTH': -2.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.PYROMAGNETIC_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > PYROMAGNETIC_COEFFICIENT",
        "section": "Quantity dimensions > PYROMAGNETIC_COEFFICIENT",
        "text": "PYROMAGNETIC_COEFFICIENT = {'MASS': 1.0, 'TIME': -2.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.Q_CRITERION",
        "title": "Quantity dimensions > Quantity dimensions > Q_CRITERION",
        "section": "Quantity dimensions > Q_CRITERION",
        "text": "Q_CRITERION = {'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.RADIAL_VELOCITY",
        "title": "Quantity dimensions > Quantity dimensions > RADIAL_VELOCITY",
        "section": "Quantity dimensions > RADIAL_VELOCITY",
        "text": "RADIAL_VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.RADIANCE",
        "title": "Quantity dimensions > Quantity dimensions > RADIANCE",
        "section": "Quantity dimensions > RADIANCE",
        "text": "RADIANCE = {'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.RADIANT_EXPOSURE",
        "title": "Quantity dimensions > Quantity dimensions > RADIANT_EXPOSURE",
        "section": "Quantity dimensions > RADIANT_EXPOSURE",
        "text": "RADIANT_EXPOSURE = {'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.RADIANT_INTENSITY",
        "title": "Quantity dimensions > Quantity dimensions > RADIANT_INTENSITY",
        "section": "Quantity dimensions > RADIANT_INTENSITY",
        "text": "RADIANT_INTENSITY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.REACTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > REACTIVITY",
        "section": "Quantity dimensions > REACTIVITY",
        "text": "REACTIVITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.REFLECTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > REFLECTIVITY",
        "section": "Quantity dimensions > REFLECTIVITY",
        "text": "REFLECTIVITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.REFRACTIVE_INDEX",
        "title": "Quantity dimensions > Quantity dimensions > REFRACTIVE_INDEX",
        "section": "Quantity dimensions > REFRACTIVE_INDEX",
        "text": "REFRACTIVE_INDEX = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.RELATIVE_ATOMIC_MASS",
        "title": "Quantity dimensions > Quantity dimensions > RELATIVE_ATOMIC_MASS",
        "section": "Quantity dimensions > RELATIVE_ATOMIC_MASS",
        "text": "RELATIVE_ATOMIC_MASS = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.RESILIENCE",
        "title": "Quantity dimensions > Quantity dimensions > RESILIENCE",
        "section": "Quantity dimensions > RESILIENCE",
        "text": "RESILIENCE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SCATTERING",
        "title": "Quantity dimensions > Quantity dimensions > SCATTERING",
        "section": "Quantity dimensions > SCATTERING",
        "text": "SCATTERING = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SEEBECK_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > SEEBECK_COEFFICIENT",
        "section": "Quantity dimensions > SEEBECK_COEFFICIENT",
        "text": "SEEBECK_COEFFICIENT = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -1.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SHEAR_MODULUS",
        "title": "Quantity dimensions > Quantity dimensions > SHEAR_MODULUS",
        "section": "Quantity dimensions > SHEAR_MODULUS",
        "text": "SHEAR_MODULUS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SHEAR_STRENGTH",
        "title": "Quantity dimensions > Quantity dimensions > SHEAR_STRENGTH",
        "section": "Quantity dimensions > SHEAR_STRENGTH",
        "text": "SHEAR_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SKIN_FRICTION_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > SKIN_FRICTION_COEFFICIENT",
        "section": "Quantity dimensions > SKIN_FRICTION_COEFFICIENT",
        "text": "SKIN_FRICTION_COEFFICIENT = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SLIP",
        "title": "Quantity dimensions > Quantity dimensions > SLIP",
        "section": "Quantity dimensions > SLIP",
        "text": "SLIP = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SNAP",
        "title": "Quantity dimensions > Quantity dimensions > SNAP",
        "section": "Quantity dimensions > SNAP",
        "text": "SNAP = {'LENGTH': 1.0, 'TIME': -4.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SOLID_ANGLE",
        "title": "Quantity dimensions > Quantity dimensions > SOLID_ANGLE",
        "section": "Quantity dimensions > SOLID_ANGLE",
        "text": "SOLID_ANGLE = {'SOLID_ANGLE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SOUND_REFLECTION",
        "title": "Quantity dimensions > Quantity dimensions > SOUND_REFLECTION",
        "section": "Quantity dimensions > SOUND_REFLECTION",
        "text": "SOUND_REFLECTION = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SOUND_TRANSFER",
        "title": "Quantity dimensions > Quantity dimensions > SOUND_TRANSFER",
        "section": "Quantity dimensions > SOUND_TRANSFER",
        "text": "SOUND_TRANSFER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_ACTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_ACTIVITY",
        "section": "Quantity dimensions > SPECIFIC_ACTIVITY",
        "text": "SPECIFIC_ACTIVITY = {'MASS': -1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_ANGULAR_MOMENTUM",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_ANGULAR_MOMENTUM",
        "section": "Quantity dimensions > SPECIFIC_ANGULAR_MOMENTUM",
        "text": "SPECIFIC_ANGULAR_MOMENTUM = {'LENGTH': 2.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_DISSIPATION_RATE",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_DISSIPATION_RATE",
        "section": "Quantity dimensions > SPECIFIC_DISSIPATION_RATE",
        "text": "SPECIFIC_DISSIPATION_RATE = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_ENERGY",
        "section": "Quantity dimensions > SPECIFIC_ENERGY",
        "text": "SPECIFIC_ENERGY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_ENTHALPY",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_ENTHALPY",
        "section": "Quantity dimensions > SPECIFIC_ENTHALPY",
        "text": "SPECIFIC_ENTHALPY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_ENTROPY",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_ENTROPY",
        "section": "Quantity dimensions > SPECIFIC_ENTROPY",
        "text": "SPECIFIC_ENTROPY = {'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_HEAT_CAPACITY",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_HEAT_CAPACITY",
        "section": "Quantity dimensions > SPECIFIC_HEAT_CAPACITY",
        "text": "SPECIFIC_HEAT_CAPACITY = {'LENGTH': 2.0, 'TIME': -2.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_INTERNAL_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_INTERNAL_ENERGY",
        "section": "Quantity dimensions > SPECIFIC_INTERNAL_ENERGY",
        "text": "SPECIFIC_INTERNAL_ENERGY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_INTERNAL_SURFACE_AREA",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_INTERNAL_SURFACE_AREA",
        "section": "Quantity dimensions > SPECIFIC_INTERNAL_SURFACE_AREA",
        "text": "SPECIFIC_INTERNAL_SURFACE_AREA = {'LENGTH': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_MODULUS",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_MODULUS",
        "section": "Quantity dimensions > SPECIFIC_MODULUS",
        "text": "SPECIFIC_MODULUS = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_STRENGTH",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_STRENGTH",
        "section": "Quantity dimensions > SPECIFIC_STRENGTH",
        "text": "SPECIFIC_STRENGTH = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_TOTAL_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_TOTAL_ENERGY",
        "section": "Quantity dimensions > SPECIFIC_TOTAL_ENERGY",
        "text": "SPECIFIC_TOTAL_ENERGY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_TOTAL_ENTHALPY",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_TOTAL_ENTHALPY",
        "section": "Quantity dimensions > SPECIFIC_TOTAL_ENTHALPY",
        "text": "SPECIFIC_TOTAL_ENTHALPY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_VOLUME",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_VOLUME",
        "section": "Quantity dimensions > SPECIFIC_VOLUME",
        "text": "SPECIFIC_VOLUME = {'LENGTH': 3.0, 'MASS': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECIFIC_WEIGHT",
        "title": "Quantity dimensions > Quantity dimensions > SPECIFIC_WEIGHT",
        "section": "Quantity dimensions > SPECIFIC_WEIGHT",
        "text": "SPECIFIC_WEIGHT = {'MASS': 1.0, 'LENGTH': -2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECTRAL_INTENSITY",
        "title": "Quantity dimensions > Quantity dimensions > SPECTRAL_INTENSITY",
        "section": "Quantity dimensions > SPECTRAL_INTENSITY",
        "text": "SPECTRAL_INTENSITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'SOLID_ANGLE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECTRAL_IRRADIANCE",
        "title": "Quantity dimensions > Quantity dimensions > SPECTRAL_IRRADIANCE",
        "section": "Quantity dimensions > SPECTRAL_IRRADIANCE",
        "text": "SPECTRAL_IRRADIANCE = {'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPECTRAL_POWER",
        "title": "Quantity dimensions > Quantity dimensions > SPECTRAL_POWER",
        "section": "Quantity dimensions > SPECTRAL_POWER",
        "text": "SPECTRAL_POWER = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPEED_OF_SOUND",
        "title": "Quantity dimensions > Quantity dimensions > SPEED_OF_SOUND",
        "section": "Quantity dimensions > SPEED_OF_SOUND",
        "text": "SPEED_OF_SOUND = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SPIN_HALL_EFFECT",
        "title": "Quantity dimensions > Quantity dimensions > SPIN_HALL_EFFECT",
        "section": "Quantity dimensions > SPIN_HALL_EFFECT",
        "text": "SPIN_HALL_EFFECT = {'MASS': 1.0, 'LENGTH': 2.0, 'TIME': -3.0, 'CURRENT': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.STANDARD_ATOMIC_WEIGHT",
        "title": "Quantity dimensions > Quantity dimensions > STANDARD_ATOMIC_WEIGHT",
        "section": "Quantity dimensions > STANDARD_ATOMIC_WEIGHT",
        "text": "STANDARD_ATOMIC_WEIGHT = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.STATIC_PRESSURE",
        "title": "Quantity dimensions > Quantity dimensions > STATIC_PRESSURE",
        "section": "Quantity dimensions > STATIC_PRESSURE",
        "text": "STATIC_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.STRAIN_RATE",
        "title": "Quantity dimensions > Quantity dimensions > STRAIN_RATE",
        "section": "Quantity dimensions > STRAIN_RATE",
        "text": "STRAIN_RATE = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.STRESS",
        "title": "Quantity dimensions > Quantity dimensions > STRESS",
        "section": "Quantity dimensions > STRESS",
        "text": "STRESS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SURFACE_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > SURFACE_ENERGY",
        "section": "Quantity dimensions > SURFACE_ENERGY",
        "text": "SURFACE_ENERGY = {'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SURFACE_HEAT_FLUX",
        "title": "Quantity dimensions > Quantity dimensions > SURFACE_HEAT_FLUX",
        "section": "Quantity dimensions > SURFACE_HEAT_FLUX",
        "text": "SURFACE_HEAT_FLUX = {'MASS': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "section": "Quantity dimensions > SURFACE_HEAT_TRANSFER_COEFFICIENT",
        "text": "SURFACE_HEAT_TRANSFER_COEFFICIENT = {'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SURFACE_NUSSELT_NUMBER",
        "title": "Quantity dimensions > Quantity dimensions > SURFACE_NUSSELT_NUMBER",
        "section": "Quantity dimensions > SURFACE_NUSSELT_NUMBER",
        "text": "SURFACE_NUSSELT_NUMBER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SURFACE_ROUGHNESS",
        "title": "Quantity dimensions > Quantity dimensions > SURFACE_ROUGHNESS",
        "section": "Quantity dimensions > SURFACE_ROUGHNESS",
        "text": "SURFACE_ROUGHNESS = {'LENGTH': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SURFACE_STANTON_NUMBER",
        "title": "Quantity dimensions > Quantity dimensions > SURFACE_STANTON_NUMBER",
        "section": "Quantity dimensions > SURFACE_STANTON_NUMBER",
        "text": "SURFACE_STANTON_NUMBER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.SURFACE_TENSION",
        "title": "Quantity dimensions > Quantity dimensions > SURFACE_TENSION",
        "section": "Quantity dimensions > SURFACE_TENSION",
        "text": "SURFACE_TENSION = {'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TANGENTIAL_VELOCITY",
        "title": "Quantity dimensions > Quantity dimensions > TANGENTIAL_VELOCITY",
        "section": "Quantity dimensions > TANGENTIAL_VELOCITY",
        "text": "TANGENTIAL_VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TEMPERATURE",
        "title": "Quantity dimensions > Quantity dimensions > TEMPERATURE",
        "section": "Quantity dimensions > TEMPERATURE",
        "text": "TEMPERATURE = {'TEMPERATURE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TEMPERATURE_DIFFERENCE",
        "title": "Quantity dimensions > Quantity dimensions > TEMPERATURE_DIFFERENCE",
        "section": "Quantity dimensions > TEMPERATURE_DIFFERENCE",
        "text": "TEMPERATURE_DIFFERENCE = {'TEMPERATURE_DIFFERENCE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TEMPERATURE_GRADIENT",
        "title": "Quantity dimensions > Quantity dimensions > TEMPERATURE_GRADIENT",
        "section": "Quantity dimensions > TEMPERATURE_GRADIENT",
        "text": "TEMPERATURE_GRADIENT = {'TEMPERATURE': 1.0, 'LENGTH': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TENSILE_STRENGTH",
        "title": "Quantity dimensions > Quantity dimensions > TENSILE_STRENGTH",
        "section": "Quantity dimensions > TENSILE_STRENGTH",
        "text": "TENSILE_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.THERMAL_CONDUCTIVITY",
        "title": "Quantity dimensions > Quantity dimensions > THERMAL_CONDUCTIVITY",
        "section": "Quantity dimensions > THERMAL_CONDUCTIVITY",
        "text": "THERMAL_CONDUCTIVITY = {'LENGTH': 1.0, 'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.THERMAL_DIFFUSIVITY",
        "title": "Quantity dimensions > Quantity dimensions > THERMAL_DIFFUSIVITY",
        "section": "Quantity dimensions > THERMAL_DIFFUSIVITY",
        "text": "THERMAL_DIFFUSIVITY = {'LENGTH': 2.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.THERMAL_EXPANSION_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > THERMAL_EXPANSION_COEFFICIENT",
        "section": "Quantity dimensions > THERMAL_EXPANSION_COEFFICIENT",
        "text": "THERMAL_EXPANSION_COEFFICIENT = {'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.THERMAL_RESISTANCE",
        "title": "Quantity dimensions > Quantity dimensions > THERMAL_RESISTANCE",
        "section": "Quantity dimensions > THERMAL_RESISTANCE",
        "text": "THERMAL_RESISTANCE = {'TEMPERATURE': 1.0, 'LENGTH': -2.0, 'MASS': -1.0, 'TIME': 3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.THIRD_ORDER_ELASTICITY",
        "title": "Quantity dimensions > Quantity dimensions > THIRD_ORDER_ELASTICITY",
        "section": "Quantity dimensions > THIRD_ORDER_ELASTICITY",
        "text": "THIRD_ORDER_ELASTICITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TIME",
        "title": "Quantity dimensions > Quantity dimensions > TIME",
        "section": "Quantity dimensions > TIME",
        "text": "TIME = {'TIME': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TORQUE",
        "title": "Quantity dimensions > Quantity dimensions > TORQUE",
        "section": "Quantity dimensions > TORQUE",
        "text": "TORQUE = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TORQUE_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > TORQUE_MAGNITUDE",
        "section": "Quantity dimensions > TORQUE_MAGNITUDE",
        "text": "TORQUE_MAGNITUDE = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TORQUE_X",
        "title": "Quantity dimensions > Quantity dimensions > TORQUE_X",
        "section": "Quantity dimensions > TORQUE_X",
        "text": "TORQUE_X = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TORQUE_Y",
        "title": "Quantity dimensions > Quantity dimensions > TORQUE_Y",
        "section": "Quantity dimensions > TORQUE_Y",
        "text": "TORQUE_Y = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TORQUE_Z",
        "title": "Quantity dimensions > Quantity dimensions > TORQUE_Z",
        "section": "Quantity dimensions > TORQUE_Z",
        "text": "TORQUE_Z = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TOTAL_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > TOTAL_ENERGY",
        "section": "Quantity dimensions > TOTAL_ENERGY",
        "text": "TOTAL_ENERGY = {'LENGTH': 2.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TOTAL_PRESSURE",
        "title": "Quantity dimensions > Quantity dimensions > TOTAL_PRESSURE",
        "section": "Quantity dimensions > TOTAL_PRESSURE",
        "text": "TOTAL_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TOTAL_TEMPERATURE",
        "title": "Quantity dimensions > Quantity dimensions > TOTAL_TEMPERATURE",
        "section": "Quantity dimensions > TOTAL_TEMPERATURE",
        "text": "TOTAL_TEMPERATURE = {'TEMPERATURE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TOUGHNESS",
        "title": "Quantity dimensions > Quantity dimensions > TOUGHNESS",
        "section": "Quantity dimensions > TOUGHNESS",
        "text": "TOUGHNESS = {'LENGTH': -1.0, 'MASS': 1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TRANSMITTANCE",
        "title": "Quantity dimensions > Quantity dimensions > TRANSMITTANCE",
        "section": "Quantity dimensions > TRANSMITTANCE",
        "text": "TRANSMITTANCE = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TURBULENT_DISSIPATION_RATE",
        "title": "Quantity dimensions > Quantity dimensions > TURBULENT_DISSIPATION_RATE",
        "section": "Quantity dimensions > TURBULENT_DISSIPATION_RATE",
        "text": "TURBULENT_DISSIPATION_RATE = {'LENGTH': 2.0, 'TIME': 3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TURBULENT_INTENSITY",
        "title": "Quantity dimensions > Quantity dimensions > TURBULENT_INTENSITY",
        "section": "Quantity dimensions > TURBULENT_INTENSITY",
        "text": "TURBULENT_INTENSITY = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TURBULENT_KINETIC_ENERGY",
        "title": "Quantity dimensions > Quantity dimensions > TURBULENT_KINETIC_ENERGY",
        "section": "Quantity dimensions > TURBULENT_KINETIC_ENERGY",
        "text": "TURBULENT_KINETIC_ENERGY = {'LENGTH': 2.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TURBULENT_REYNOLDS_NUMBER",
        "title": "Quantity dimensions > Quantity dimensions > TURBULENT_REYNOLDS_NUMBER",
        "section": "Quantity dimensions > TURBULENT_REYNOLDS_NUMBER",
        "text": "TURBULENT_REYNOLDS_NUMBER = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TURBULENT_VISCOSITY",
        "title": "Quantity dimensions > Quantity dimensions > TURBULENT_VISCOSITY",
        "section": "Quantity dimensions > TURBULENT_VISCOSITY",
        "text": "TURBULENT_VISCOSITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.TURBULENT_VISCOSITY_RATIO",
        "title": "Quantity dimensions > Quantity dimensions > TURBULENT_VISCOSITY_RATIO",
        "section": "Quantity dimensions > TURBULENT_VISCOSITY_RATIO",
        "text": "TURBULENT_VISCOSITY_RATIO = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VAPOR_PRESSURE",
        "title": "Quantity dimensions > Quantity dimensions > VAPOR_PRESSURE",
        "section": "Quantity dimensions > VAPOR_PRESSURE",
        "text": "VAPOR_PRESSURE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VELOCITY",
        "title": "Quantity dimensions > Quantity dimensions > VELOCITY",
        "section": "Quantity dimensions > VELOCITY",
        "text": "VELOCITY = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VELOCITY_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > VELOCITY_MAGNITUDE",
        "section": "Quantity dimensions > VELOCITY_MAGNITUDE",
        "text": "VELOCITY_MAGNITUDE = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VELOCITY_X",
        "title": "Quantity dimensions > Quantity dimensions > VELOCITY_X",
        "section": "Quantity dimensions > VELOCITY_X",
        "text": "VELOCITY_X = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VELOCITY_Y",
        "title": "Quantity dimensions > Quantity dimensions > VELOCITY_Y",
        "section": "Quantity dimensions > VELOCITY_Y",
        "text": "VELOCITY_Y = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VELOCITY_Z",
        "title": "Quantity dimensions > Quantity dimensions > VELOCITY_Z",
        "section": "Quantity dimensions > VELOCITY_Z",
        "text": "VELOCITY_Z = {'LENGTH': 1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VISCOSITY",
        "title": "Quantity dimensions > Quantity dimensions > VISCOSITY",
        "section": "Quantity dimensions > VISCOSITY",
        "text": "VISCOSITY = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VOLUME",
        "title": "Quantity dimensions > Quantity dimensions > VOLUME",
        "section": "Quantity dimensions > VOLUME",
        "text": "VOLUME = {'LENGTH': 3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VOLUMETRIC_FLOW",
        "title": "Quantity dimensions > Quantity dimensions > VOLUMETRIC_FLOW",
        "section": "Quantity dimensions > VOLUMETRIC_FLOW",
        "text": "VOLUMETRIC_FLOW = {'LENGTH': 3.0, 'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VORTICITY",
        "title": "Quantity dimensions > Quantity dimensions > VORTICITY",
        "section": "Quantity dimensions > VORTICITY",
        "text": "VORTICITY = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VORTICITY_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > VORTICITY_MAGNITUDE",
        "section": "Quantity dimensions > VORTICITY_MAGNITUDE",
        "text": "VORTICITY_MAGNITUDE = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VORTICITY_X",
        "title": "Quantity dimensions > Quantity dimensions > VORTICITY_X",
        "section": "Quantity dimensions > VORTICITY_X",
        "text": "VORTICITY_X = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VORTICITY_Y",
        "title": "Quantity dimensions > Quantity dimensions > VORTICITY_Y",
        "section": "Quantity dimensions > VORTICITY_Y",
        "text": "VORTICITY_Y = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.VORTICITY_Z",
        "title": "Quantity dimensions > Quantity dimensions > VORTICITY_Z",
        "section": "Quantity dimensions > VORTICITY_Z",
        "text": "VORTICITY_Z = {'TIME': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "title": "Quantity dimensions > Quantity dimensions > WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "section": "Quantity dimensions > WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT",
        "text": "WALL_ADJACENT_HEAT_TRANSFER_COEFFICIENT = {'MASS': 1.0, 'TIME': -3.0, 'TEMPERATURE': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_ADJACENT_TEMPERATURE",
        "title": "Quantity dimensions > Quantity dimensions > WALL_ADJACENT_TEMPERATURE",
        "section": "Quantity dimensions > WALL_ADJACENT_TEMPERATURE",
        "text": "WALL_ADJACENT_TEMPERATURE = {'TEMPERATURE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_SHEAR_STRESS",
        "title": "Quantity dimensions > Quantity dimensions > WALL_SHEAR_STRESS",
        "section": "Quantity dimensions > WALL_SHEAR_STRESS",
        "text": "WALL_SHEAR_STRESS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_SHEAR_STRESS_MAGNITUDE",
        "title": "Quantity dimensions > Quantity dimensions > WALL_SHEAR_STRESS_MAGNITUDE",
        "section": "Quantity dimensions > WALL_SHEAR_STRESS_MAGNITUDE",
        "text": "WALL_SHEAR_STRESS_MAGNITUDE = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_SHEAR_STRESS_X",
        "title": "Quantity dimensions > Quantity dimensions > WALL_SHEAR_STRESS_X",
        "section": "Quantity dimensions > WALL_SHEAR_STRESS_X",
        "text": "WALL_SHEAR_STRESS_X = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_SHEAR_STRESS_Y",
        "title": "Quantity dimensions > Quantity dimensions > WALL_SHEAR_STRESS_Y",
        "section": "Quantity dimensions > WALL_SHEAR_STRESS_Y",
        "text": "WALL_SHEAR_STRESS_Y = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_SHEAR_STRESS_Z",
        "title": "Quantity dimensions > Quantity dimensions > WALL_SHEAR_STRESS_Z",
        "section": "Quantity dimensions > WALL_SHEAR_STRESS_Z",
        "text": "WALL_SHEAR_STRESS_Z = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_TEMPERATURE",
        "title": "Quantity dimensions > Quantity dimensions > WALL_TEMPERATURE",
        "section": "Quantity dimensions > WALL_TEMPERATURE",
        "text": "WALL_TEMPERATURE = {'TEMPERATURE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_TEMPERATURE_THIN",
        "title": "Quantity dimensions > Quantity dimensions > WALL_TEMPERATURE_THIN",
        "section": "Quantity dimensions > WALL_TEMPERATURE_THIN",
        "text": "WALL_TEMPERATURE_THIN = {'TEMPERATURE': 1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_Y_PLUS",
        "title": "Quantity dimensions > Quantity dimensions > WALL_Y_PLUS",
        "section": "Quantity dimensions > WALL_Y_PLUS",
        "text": "WALL_Y_PLUS = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WALL_Y_STAR",
        "title": "Quantity dimensions > Quantity dimensions > WALL_Y_STAR",
        "section": "Quantity dimensions > WALL_Y_STAR",
        "text": "WALL_Y_STAR = {}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.WAVENUMBER",
        "title": "Quantity dimensions > Quantity dimensions > WAVENUMBER",
        "section": "Quantity dimensions > WAVENUMBER",
        "text": "WAVENUMBER = {'LENGTH': -1.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.YANK",
        "title": "Quantity dimensions > Quantity dimensions > YANK",
        "section": "Quantity dimensions > YANK",
        "text": "YANK = {'MASS': 1.0, 'LENGTH': 1.0, 'TIME': -3.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.YIELD_STRENGTH",
        "title": "Quantity dimensions > Quantity dimensions > YIELD_STRENGTH",
        "section": "Quantity dimensions > YIELD_STRENGTH",
        "text": "YIELD_STRENGTH = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#ansys.units.quantity_dimensions.QuantityDimensions.YOUNG_MODULUS",
        "title": "Quantity dimensions > Quantity dimensions > YOUNG_MODULUS",
        "section": "Quantity dimensions > YOUNG_MODULUS",
        "text": "YOUNG_MODULUS = {'MASS': 1.0, 'LENGTH': -1.0, 'TIME': -2.0}\n\n"
    },
    {
        "objectID": "api/quantity_dimensions",
        "href": "api/quantity_dimensions.html#examples",
        "title": "Quantity dimensions > Examples",
        "section": "Examples",
        "text": "Examples"
    },
    {
        "objectID": "user_guide/angles",
        "href": "user_guide/angles.html#angles",
        "title": "Angles",
        "section": "Angles",
        "text": "PyAnsys Units treats angles as non-dimensional unit quantity by default but it\nsupports configuration of angle quantities as dimension.\nAngle quantity units such as degree, radian and solid angle can be treated as dimension.\nYou can set the environment variable PYANSYS_UNITS_ANGLE_AS_DIMENSION to treat angle quantity\nunits as dimension.\nAngles\nPYANSYS_UNITS_ANGLE_AS_DIMENSION"
    },
    {
        "objectID": "user_guide/angles",
        "href": "user_guide/angles.html#angle-as-non-dimension",
        "title": "Angles > Angle as non-dimension",
        "section": "Angle as non-dimension",
        "text": "Angle as non-dimension"
    },
    {
        "objectID": "user_guide/angles",
        "href": "user_guide/angles.html#angle-as-dimension",
        "title": "Angles > Angle as dimension",
        "section": "Angle as dimension",
        "text": "Angle as dimension"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#unit",
        "title": "Unit",
        "section": "Unit",
        "text": "Bases: object\nA class containing the string name and dimensions of a unit.\nName of the unit or string chain of combined units\ndictionary of unit properties\nAn instance of the Dimensions class.\nDefine the unit system for base units of dimension,\ndefault is SI.\nA dictionary of api table keys from the cfg.yaml and exponent values.\nA previous instance of Unit.\nThe unit string.\nThe unit string in SI units.\nThe scaling factor used to convert to SI units.\nThe offset used to convert to SI units.\nThen units base dimensions.\nGet all units with the same dimensions.\nA set of unit objects.\nConvert a unit into the unit system.\nUnit system to convert to.\nUnit object converted into the unit system.\nThen units base dimensions.\nThe unit string.\nThe offset used to convert to SI units.\nThe scaling factor used to convert to SI units.\nThe unit string in SI units.\nBases: TypeError\nRaised when two absolute temperatures are added.\nBases: ValueError\nRaised when the specified units are incorrect.\nBases: ValueError\nRaised when units have inconsistent base dimensions.\nBases: ValueError\nRaised when the specified unit is unconfigured.\nBases: ValueError\nRaised when a quantity table item is undefined.\nUnit\nobject\nname\nsi_units\nsi_scaling_factor\nsi_offset\ndimensions\nset\nUnitSystem\nUnit\nTypeError\nValueError\nValueError\nValueError\nValueError"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.Unit",
        "title": "Unit > Unit > Unit",
        "section": "Unit > Unit",
        "text": "class ansys.units.unit.Unit(units: str | None = None, config: dict | None = None, dimensions: Dimensions | None = None, system: UnitSystem | str | None = None, table: dict | None = None, copy_from: Unit | None = None)\n\nBases: object\n\nA class containing the string name and dimensions of a unit.\n\nParameters\n\nunits: str, optional\n\nName of the unit or string chain of combined units\n\nconfig: dict, optional\n\ndictionary of unit properties\n\ndimensions: Dimensions, optional\n\nAn instance of the Dimensions class.\n\nsystem: str, optional\n\nDefine the unit system for base units of dimension,\ndefault is SI.\n\ntable: dict, optional\n\nA dictionary of api table keys from the cfg.yaml and exponent values.\n\ncopy_from: Unit, optional\n\nA previous instance of Unit.\n\nAttributes\n\nname\n\nThe unit string.\n\nsi_units\n\nThe unit string in SI units.\n\nsi_scaling_factor\n\nThe scaling factor used to convert to SI units.\n\nsi_offset\n\nThe offset used to convert to SI units.\n\ndimensions\n\nThen units base dimensions.\n\nExamples\n\n>>> from ansys.units import Unit, Quantity\n>>> fps = Unit(\"ft s^-1\")\n>>> fps.name\n'ft s^-1'\n>>> fps.dimensions\n{'LENGTH': 1.0, 'TIME': -1.0}\n>>> speed = Quantity(value=5, units=fps)\n>>> speed\nQuantity (5.0, \"ft s^-1\")\n\n!! processed by numpydoc !!\n\n\n\ncompatible_units() -> set[str]\n\nGet all units with the same dimensions.\n\nReturns\n\nset\n\nA set of unit objects.\n\n!! processed by numpydoc !!\n\n\n\nconvert(system: UnitSystem) -> Unit\n\nConvert a unit into the unit system.\n\nParameters\n\nsystem\n\nUnitSystem\n\nUnit system to convert to.\n\nReturns\n\nUnit\n\nUnit object converted into the unit system.\n\nExamples\n\n>>> ur = UnitRegistry()\n>>> speed_si = Unit(units= ur.m / ur.s)\n>>> bt = UnitSystem(system=\"BT\")\n>>> speed_bt = speed_si.convert(bt)\n\n!! processed by numpydoc !!\n\n\n\nproperty dimensions: Dimensions\n\nThen units base dimensions.\n\n!! processed by numpydoc !!\n\n\n\nproperty name: str\n\nThe unit string.\n\n!! processed by numpydoc !!\n\n\n\nproperty si_offset: float\n\nThe offset used to convert to SI units.\n\n!! processed by numpydoc !!\n\n\n\nproperty si_scaling_factor: float\n\nThe scaling factor used to convert to SI units.\n\n!! processed by numpydoc !!\n\n\n\nproperty si_units: str\n\nThe unit string in SI units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.Unit.compatible_units",
        "title": "Unit > Unit > compatible_units",
        "section": "Unit > compatible_units",
        "text": "compatible_units() -> set[str]\n\nGet all units with the same dimensions.\n\nReturns\n\nset\n\nA set of unit objects.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.Unit.convert",
        "title": "Unit > Unit > convert",
        "section": "Unit > convert",
        "text": "convert(system: UnitSystem) -> Unit\n\nConvert a unit into the unit system.\n\nParameters\n\nsystem\n\nUnitSystem\n\nUnit system to convert to.\n\nReturns\n\nUnit\n\nUnit object converted into the unit system.\n\nExamples\n\n>>> ur = UnitRegistry()\n>>> speed_si = Unit(units= ur.m / ur.s)\n>>> bt = UnitSystem(system=\"BT\")\n>>> speed_bt = speed_si.convert(bt)\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.Unit.dimensions",
        "title": "Unit > Unit > dimensions",
        "section": "Unit > dimensions",
        "text": "property dimensions: Dimensions\n\nThen units base dimensions.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.Unit.name",
        "title": "Unit > Unit > name",
        "section": "Unit > name",
        "text": "property name: str\n\nThe unit string.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.Unit.si_offset",
        "title": "Unit > Unit > si_offset",
        "section": "Unit > si_offset",
        "text": "property si_offset: float\n\nThe offset used to convert to SI units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.Unit.si_scaling_factor",
        "title": "Unit > Unit > si_scaling_factor",
        "section": "Unit > si_scaling_factor",
        "text": "property si_scaling_factor: float\n\nThe scaling factor used to convert to SI units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.Unit.si_units",
        "title": "Unit > Unit > si_units",
        "section": "Unit > si_units",
        "text": "property si_units: str\n\nThe unit string in SI units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.ProhibitedTemperatureOperation",
        "title": "Unit > Unit > ProhibitedTemperatureOperation",
        "section": "Unit > ProhibitedTemperatureOperation",
        "text": "exception ansys.units.unit.ProhibitedTemperatureOperation\n\nBases: TypeError\n\nRaised when two absolute temperatures are added.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.IncorrectUnits",
        "title": "Unit > Unit > IncorrectUnits",
        "section": "Unit > IncorrectUnits",
        "text": "exception ansys.units.unit.IncorrectUnits(unit1, unit2)\n\nBases: ValueError\n\nRaised when the specified units are incorrect.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.InconsistentDimensions",
        "title": "Unit > Unit > InconsistentDimensions",
        "section": "Unit > InconsistentDimensions",
        "text": "exception ansys.units.unit.InconsistentDimensions\n\nBases: ValueError\n\nRaised when units have inconsistent base dimensions.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.UnconfiguredUnit",
        "title": "Unit > Unit > UnconfiguredUnit",
        "section": "Unit > UnconfiguredUnit",
        "text": "exception ansys.units.unit.UnconfiguredUnit(unit)\n\nBases: ValueError\n\nRaised when the specified unit is unconfigured.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/unit",
        "href": "api/unit.html#ansys.units.unit.UnknownTableItem",
        "title": "Unit > Unit > UnknownTableItem",
        "section": "Unit > UnknownTableItem",
        "text": "exception ansys.units.unit.UnknownTableItem(item)\n\nBases: ValueError\n\nRaised when a quantity table item is undefined.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#examples",
        "title": "Examples",
        "section": "Examples",
        "text": "End-to-end examples show how you can use PyAnsys Units. If the ansys-units\npackage is installed on your machine, you can download these\nexamples as Python files or Jupyter notebooks and run them locally.\nExamples\nansys-units"
    },
    {
        "objectID": "examples/index",
        "href": "examples/index.html#pyansys-units-examples",
        "title": "Examples > PyAnsys Units Examples",
        "section": "PyAnsys Units Examples",
        "text": "PyAnsys Units provides many features, including creating quantities, accessing\ndifferent quantity properties, performing arithmetic operations, performing unit\nconversions, creating unit systems, and applying unit systems to quantities.\nsphx_glr_examples_00-pyunits_basic_usage.py\nGallery generated by Sphinx-Gallery\nPyAnsys Units Examples"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#quantity",
        "title": "Quantity",
        "section": "Quantity",
        "text": "Bases: object\nA class representing a physical quantity’s value and associated units.\nA Quantity object can be instantiated from a NumPy array or list only if the\nNumPy package is installed.\nThe value argument is not required when using copy_from. A value can be given\nto override the value from the copy.\nImplicit conversion from Quantity to float is only allowed if the operand is\nof quantity type angle or dimensionless.\nReal value of the quantity.\nInitializes the quantity’s units using a string or Unit instance.\nInitializes the quantity’s units using the quantity table.\nInitializes the quantity’s units in SI using a Dimensions instance.\nAn existing Quantity instance.\nValue in contained units.\nThe quantity’s units.\nThe quantity’s dimensions.\nTrue if the quantity is dimensionless.\nGet all units with the same dimensions.\nA set of unit objects.\nConvert a quantity into the unit system.\nUnit system to convert to.\nQuantity object converted into the unit system.\nThe quantity’s dimensions.\nTrue if the quantity is dimensionless.\nAdd or remove preferred units.\nQuantities are automatically converted to preferred units when the\nquantity is initialized. Conversion is always carried out if the base\nunits are consistent with the preferred units.\nEach preferred unit must have unique dimensions. To override units with\nthe same dimensions, the original must first be removed.\nA list of units to be added or removed.\nSpecify if the units should be removed.\nPerform quantity conversions.\nDesired unit to convert to.\nQuantity instance in the desired units.\nThe quantity’s units.\nValidates dimensions of quantities.\nValue in contained units.\nReturns a quantity’s value in SI units.\nBases: ValueError\nRaised when excessive parameters are provided.\nBases: ValueError\nRaised when dimensions are incompatible.\nBases: ValueError\nRaised when quantities are incompatible.\nBases: ValueError\nRaised when an incompatible value is provided.\nBases: ValueError\nRaised when insufficient arguments are provided.\nBases: FloatingPointError\nRaised when float is unsupported for given type of quantity.\nBases: ModuleNotFoundError\nRaised when NumPy is unavailable.\nBases: ValueError\nRaised when two units with the same dimensions are added to the chosen units.\nQuantity\nobject\nNumPy\ncopy_from\npython:int\npython:float\npython:list\nnp.array\npython:str\nUnit\noptional\nUnit\npython:dict\npython:str\npython:int\noptional\nDimensions\noptional\nDimensions\nQuantity\noptional\nQuantity\nvalue\nunits\ndimensions\nis_dimensionless\nset\nUnitSystem\nQuantity\npython:list\nUnit\npython:str\nQuantity\nValueError\nValueError\nValueError\nValueError\nValueError\nFloatingPointError\nModuleNotFoundError\nValueError"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity",
        "title": "Quantity > Quantity > Quantity",
        "section": "Quantity > Quantity",
        "text": "class ansys.units.quantity.Quantity(value: int | float | None = None, units: Unit | str | None = None, quantity_table: dict | None = None, dimensions: Dimensions | None = None, copy_from: Quantity | None = None)\n\nBases: object\n\nA class representing a physical quantity’s value and associated units.\n\nA Quantity object can be instantiated from a NumPy array or list only if the\nNumPy package is installed.\n\nThe value argument is not required when using copy_from. A value can be given\nto override the value from the copy.\n\nImplicit conversion from Quantity to float is only allowed if the operand is\nof quantity type angle or dimensionless.\n\nParameters\n\nvalue\n\npython:int, python:float, python:list, np.array\n\nReal value of the quantity.\n\nunits\n\npython:str, Unit, optional\n\nInitializes the quantity’s units using a string or Unit instance.\n\nquantity_table\n\npython:dict[python:str, python:int], optional\n\nInitializes the quantity’s units using the quantity table.\n\ndimensions\n\nDimensions, optional\n\nInitializes the quantity’s units in SI using a Dimensions instance.\n\ncopy_from\n\nQuantity, optional\n\nAn existing Quantity instance.\n\nAttributes\n\nvalue\n\nValue in contained units.\n\nunits\n\nThe quantity’s units.\n\ndimensions\n\nThe quantity’s dimensions.\n\nis_dimensionless\n\nTrue if the quantity is dimensionless.\n\n!! processed by numpydoc !!\n\n\n\ncompatible_units() -> set[str]\n\nGet all units with the same dimensions.\n\nReturns\n\nset\n\nA set of unit objects.\n\n!! processed by numpydoc !!\n\n\n\nconvert(system: UnitSystem) -> Quantity\n\nConvert a quantity into the unit system.\n\nParameters\n\nsystem\n\nUnitSystem\n\nUnit system to convert to.\n\nReturns\n\nQuantity\n\nQuantity object converted into the unit system.\n\nExamples\n\n>>> ur = UnitRegistry()\n>>> speed_si = Quantity(value=5, units= ur.m / ur.s)\n>>> bt = UnitSystem(system=\"BT\")\n>>> speed_bt = speed_si.convert(bt)\n\n!! processed by numpydoc !!\n\n\n\nproperty dimensions\n\nThe quantity’s dimensions.\n\n!! processed by numpydoc !!\n\n\n\nproperty is_dimensionless\n\nTrue if the quantity is dimensionless.\n\n!! processed by numpydoc !!\n\n\n\nclassmethod preferred_units(units: list[Unit | str], remove: bool = False) -> None\n\nAdd or remove preferred units.\n\nQuantities are automatically converted to preferred units when the\nquantity is initialized. Conversion is always carried out if the base\nunits are consistent with the preferred units.\n\nEach preferred unit must have unique dimensions. To override units with\nthe same dimensions, the original must first be removed.\n\nParameters\n\nunits\n\npython:list\n\nA list of units to be added or removed.\n\nremove\n\nbool\n\nSpecify if the units should be removed.\n\n!! processed by numpydoc !!\n\n\n\nto(to_units: Unit | str) -> Quantity\n\nPerform quantity conversions.\n\nParameters\n\nto_units\n\nUnit or python:str\n\nDesired unit to convert to.\n\nReturns\n\nQuantity\n\nQuantity instance in the desired units.\n\nExamples\n\n>>> speed_si = Quantity(value=5, units=\"m s^-1\")\n>>> speed_bt = speed_si.to(\"ft s^-1\")\n\n!! processed by numpydoc !!\n\n\n\nproperty units: Unit\n\nThe quantity’s units.\n\n!! processed by numpydoc !!\n\n\n\nvalidate_matching_dimensions(other)\n\nValidates dimensions of quantities.\n\n!! processed by numpydoc !!\n\n\n\nproperty value\n\nValue in contained units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.compatible_units",
        "title": "Quantity > Quantity > compatible_units",
        "section": "Quantity > compatible_units",
        "text": "compatible_units() -> set[str]\n\nGet all units with the same dimensions.\n\nReturns\n\nset\n\nA set of unit objects.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.convert",
        "title": "Quantity > Quantity > convert",
        "section": "Quantity > convert",
        "text": "convert(system: UnitSystem) -> Quantity\n\nConvert a quantity into the unit system.\n\nParameters\n\nsystem\n\nUnitSystem\n\nUnit system to convert to.\n\nReturns\n\nQuantity\n\nQuantity object converted into the unit system.\n\nExamples\n\n>>> ur = UnitRegistry()\n>>> speed_si = Quantity(value=5, units= ur.m / ur.s)\n>>> bt = UnitSystem(system=\"BT\")\n>>> speed_bt = speed_si.convert(bt)\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.dimensions",
        "title": "Quantity > Quantity > dimensions",
        "section": "Quantity > dimensions",
        "text": "property dimensions\n\nThe quantity’s dimensions.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.is_dimensionless",
        "title": "Quantity > Quantity > is_dimensionless",
        "section": "Quantity > is_dimensionless",
        "text": "property is_dimensionless\n\nTrue if the quantity is dimensionless.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.preferred_units",
        "title": "Quantity > Quantity > preferred_units",
        "section": "Quantity > preferred_units",
        "text": "classmethod preferred_units(units: list[Unit | str], remove: bool = False) -> None\n\nAdd or remove preferred units.\n\nQuantities are automatically converted to preferred units when the\nquantity is initialized. Conversion is always carried out if the base\nunits are consistent with the preferred units.\n\nEach preferred unit must have unique dimensions. To override units with\nthe same dimensions, the original must first be removed.\n\nParameters\n\nunits\n\npython:list\n\nA list of units to be added or removed.\n\nremove\n\nbool\n\nSpecify if the units should be removed.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.to",
        "title": "Quantity > Quantity > to",
        "section": "Quantity > to",
        "text": "to(to_units: Unit | str) -> Quantity\n\nPerform quantity conversions.\n\nParameters\n\nto_units\n\nUnit or python:str\n\nDesired unit to convert to.\n\nReturns\n\nQuantity\n\nQuantity instance in the desired units.\n\nExamples\n\n>>> speed_si = Quantity(value=5, units=\"m s^-1\")\n>>> speed_bt = speed_si.to(\"ft s^-1\")\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.units",
        "title": "Quantity > Quantity > units",
        "section": "Quantity > units",
        "text": "property units: Unit\n\nThe quantity’s units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.validate_matching_dimensions",
        "title": "Quantity > Quantity > validate_matching_dimensions",
        "section": "Quantity > validate_matching_dimensions",
        "text": "validate_matching_dimensions(other)\n\nValidates dimensions of quantities.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.Quantity.value",
        "title": "Quantity > Quantity > value",
        "section": "Quantity > value",
        "text": "property value\n\nValue in contained units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.get_si_value",
        "title": "Quantity > Quantity > get_si_value",
        "section": "Quantity > get_si_value",
        "text": "ansys.units.quantity.get_si_value(quantity: Quantity) -> float\n\nReturns a quantity’s value in SI units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.ExcessiveParameters",
        "title": "Quantity > Quantity > ExcessiveParameters",
        "section": "Quantity > ExcessiveParameters",
        "text": "exception ansys.units.quantity.ExcessiveParameters\n\nBases: ValueError\n\nRaised when excessive parameters are provided.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.IncompatibleDimensions",
        "title": "Quantity > Quantity > IncompatibleDimensions",
        "section": "Quantity > IncompatibleDimensions",
        "text": "exception ansys.units.quantity.IncompatibleDimensions(from_unit, to_unit)\n\nBases: ValueError\n\nRaised when dimensions are incompatible.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.IncompatibleQuantities",
        "title": "Quantity > Quantity > IncompatibleQuantities",
        "section": "Quantity > IncompatibleQuantities",
        "text": "exception ansys.units.quantity.IncompatibleQuantities(q1, q2)\n\nBases: ValueError\n\nRaised when quantities are incompatible.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.IncompatibleValue",
        "title": "Quantity > Quantity > IncompatibleValue",
        "section": "Quantity > IncompatibleValue",
        "text": "exception ansys.units.quantity.IncompatibleValue(value)\n\nBases: ValueError\n\nRaised when an incompatible value is provided.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.InsufficientArguments",
        "title": "Quantity > Quantity > InsufficientArguments",
        "section": "Quantity > InsufficientArguments",
        "text": "exception ansys.units.quantity.InsufficientArguments\n\nBases: ValueError\n\nRaised when insufficient arguments are provided.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.InvalidFloatUsage",
        "title": "Quantity > Quantity > InvalidFloatUsage",
        "section": "Quantity > InvalidFloatUsage",
        "text": "exception ansys.units.quantity.InvalidFloatUsage\n\nBases: FloatingPointError\n\nRaised when float is unsupported for given type of quantity.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.NumPyRequired",
        "title": "Quantity > Quantity > NumPyRequired",
        "section": "Quantity > NumPyRequired",
        "text": "exception ansys.units.quantity.NumPyRequired\n\nBases: ModuleNotFoundError\n\nRaised when NumPy is unavailable.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "api/quantity",
        "href": "api/quantity.html#ansys.units.quantity.RequiresUniqueDimensions",
        "title": "Quantity > Quantity > RequiresUniqueDimensions",
        "section": "Quantity > RequiresUniqueDimensions",
        "text": "exception ansys.units.quantity.RequiresUniqueDimensions(unit, other_unit)\n\nBases: ValueError\n\nRaised when two units with the same dimensions are added to the chosen units.\n\n!! processed by numpydoc !!"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#getting-started",
        "title": "Getting started",
        "section": "Getting started",
        "text": "PyAnsys Units provides a Pythonic interface for units, unit systems, and unit\nconversions. Once imported the package is initialized with units and unit\nsystems for you to use, and is fully customizable if something you need is not\npresent.\nGetting started"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#basic-usage",
        "title": "Getting started > Basic usage",
        "section": "Basic usage",
        "text": "PyAnsys Units supports defining quantities and their units in a intuitive way.\nStart by importing the ansys.units package:\nYou can instantiate quantities with one of four methods:\nYou can instantiate unit systems with one of two methods:\nBasic usage\nansys.units"
    },
    {
        "objectID": "getting_started/index",
        "href": "getting_started/index.html#examples",
        "title": "Getting started > Examples",
        "section": "Examples",
        "text": "Perform arithmetic operations:\nDirectly convert values to another set of units:\nUse a custom unit system to perform conversions:\nExamples"
    },
    {
        "objectID": "user_guide/index",
        "href": "user_guide/index.html#user-guide",
        "title": "User guide",
        "section": "User guide",
        "text": "Anyone who wants to use PyAnsys Units can import its Python modules and develop Python\ncode to work with physical quantities.\nUser guide"
    }
]